{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"color\", \"indeterminate\", \"style\", \"progress\", \"visible\", \"theme\", \"animatedValue\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport setColor from 'color';\nimport { useInternalTheme } from \"../core/theming\";\nvar INDETERMINATE_DURATION = 2000;\nvar INDETERMINATE_MAX_WIDTH = 0.6;\nvar isRTL = I18nManager.isRTL;\nvar ProgressBar = function ProgressBar(_ref) {\n  var _theme$colors;\n  var color = _ref.color,\n    indeterminate = _ref.indeterminate,\n    style = _ref.style,\n    _ref$progress = _ref.progress,\n    progress = _ref$progress === void 0 ? 0 : _ref$progress,\n    _ref$visible = _ref.visible,\n    visible = _ref$visible === void 0 ? true : _ref$visible,\n    themeOverrides = _ref.theme,\n    animatedValue = _ref.animatedValue,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var _React$useRef = React.useRef(new Animated.Value(0)),\n    timer = _React$useRef.current;\n  var _React$useRef2 = React.useRef(new Animated.Value(0)),\n    fade = _React$useRef2.current;\n  var passedAnimatedValue = React.useRef(animatedValue);\n  var _React$useState = React.useState(0),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    width = _React$useState2[0],\n    setWidth = _React$useState2[1];\n  var _React$useState3 = React.useState(0),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    prevWidth = _React$useState4[0],\n    setPrevWidth = _React$useState4[1];\n  var indeterminateAnimation = React.useRef(null);\n  var scale = theme.animation.scale;\n  React.useEffect(function () {\n    passedAnimatedValue.current = animatedValue;\n  });\n  var startAnimation = React.useCallback(function () {\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      useNativeDriver: true,\n      isInteraction: false\n    }).start();\n    var externalAnimation = typeof passedAnimatedValue.current !== 'undefined' && passedAnimatedValue.current >= 0;\n    if (externalAnimation) {\n      return;\n    }\n    if (indeterminate) {\n      if (!indeterminateAnimation.current) {\n        indeterminateAnimation.current = Animated.timing(timer, {\n          duration: INDETERMINATE_DURATION,\n          toValue: 1,\n          useNativeDriver: Platform.OS !== 'web',\n          isInteraction: false\n        });\n      }\n      timer.setValue(0);\n      Animated.loop(indeterminateAnimation.current).start();\n    } else {\n      Animated.timing(timer, {\n        duration: 200 * scale,\n        toValue: progress ? progress : 0,\n        useNativeDriver: true,\n        isInteraction: false\n      }).start();\n    }\n  }, [fade, scale, indeterminate, timer, progress]);\n  var stopAnimation = React.useCallback(function () {\n    if (indeterminateAnimation.current) {\n      indeterminateAnimation.current.stop();\n    }\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 0,\n      useNativeDriver: true,\n      isInteraction: false\n    }).start();\n  }, [fade, scale]);\n  React.useEffect(function () {\n    if (visible) startAnimation();else stopAnimation();\n  }, [visible, startAnimation, stopAnimation]);\n  React.useEffect(function () {\n    if (animatedValue && animatedValue >= 0) {\n      timer.setValue(animatedValue);\n    }\n  }, [animatedValue, timer]);\n  React.useEffect(function () {\n    if (visible && prevWidth === 0) {\n      startAnimation();\n    }\n  }, [prevWidth, startAnimation, visible]);\n  var onLayout = function onLayout(event) {\n    setPrevWidth(width);\n    setWidth(event.nativeEvent.layout.width);\n  };\n  var tintColor = color || ((_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.primary);\n  var trackTintColor = theme.isV3 ? theme.colors.surfaceVariant : setColor(tintColor).alpha(0.38).rgb().string();\n  return React.createElement(View, _extends({\n    onLayout: onLayout\n  }, rest, {\n    accessible: true,\n    accessibilityRole: \"progressbar\",\n    accessibilityState: {\n      busy: visible\n    },\n    accessibilityValue: indeterminate ? {} : {\n      min: 0,\n      max: 100,\n      now: progress * 100\n    }\n  }), React.createElement(Animated.View, {\n    style: [styles.container, {\n      backgroundColor: trackTintColor,\n      opacity: fade\n    }, style]\n  }, width ? React.createElement(Animated.View, {\n    style: [styles.progressBar, {\n      width: width,\n      backgroundColor: tintColor,\n      transform: [{\n        translateX: timer.interpolate(indeterminate ? {\n          inputRange: [0, 0.5, 1],\n          outputRange: [(isRTL ? 1 : -1) * 0.5 * width, (isRTL ? 1 : -1) * 0.5 * INDETERMINATE_MAX_WIDTH * width, (isRTL ? -1 : 1) * 0.7 * width]\n        } : {\n          inputRange: [0, 1],\n          outputRange: [(isRTL ? 1 : -1) * 0.5 * width, 0]\n        })\n      }, {\n        scaleX: timer.interpolate(indeterminate ? {\n          inputRange: [0, 0.5, 1],\n          outputRange: [0.0001, INDETERMINATE_MAX_WIDTH, 0.0001]\n        } : {\n          inputRange: [0, 1],\n          outputRange: [0.0001, 1]\n        })\n      }]\n    }]\n  }) : null));\n};\nvar styles = StyleSheet.create({\n  container: {\n    height: 4,\n    overflow: 'hidden'\n  },\n  progressBar: {\n    flex: 1\n  }\n});\nexport default ProgressBar;","map":{"version":3,"sources":["ProgressBar.tsx"],"names":["React","setColor","useInternalTheme","INDETERMINATE_DURATION","INDETERMINATE_MAX_WIDTH","isRTL","I18nManager","ProgressBar","color","indeterminate","style","progress","visible","theme","themeOverrides","animatedValue","rest","current","timer","useRef","Animated","Value","fade","passedAnimatedValue","width","setWidth","useState","prevWidth","setPrevWidth","indeterminateAnimation","scale","animation","useEffect","startAnimation","useCallback","timing","duration","toValue","useNativeDriver","isInteraction","start","externalAnimation","Platform","OS","setValue","loop","stopAnimation","stop","onLayout","event","nativeEvent","layout","tintColor","colors","primary","trackTintColor","isV3","surfaceVariant","alpha","rgb","string","busy","min","max","now","styles","container","backgroundColor","opacity","progressBar","transform","translateX","interpolate","inputRange","outputRange","scaleX","StyleSheet","create","height","overflow","flex"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { Animated, I18nManager, Platform, StyleSheet, View } from 'react-native';\nimport setColor from 'color';\nimport { useInternalTheme } from '../core/theming';\nconst INDETERMINATE_DURATION = 2000;\nconst INDETERMINATE_MAX_WIDTH = 0.6;\nconst {\n  isRTL\n} = I18nManager;\n\n/**\n * Progress bar is an indicator used to present progress of some activity in the app.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/progress-bar.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ProgressBar, MD3Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <ProgressBar progress={0.5} color={MD3Colors.error50} />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst ProgressBar = _ref => {\n  var _theme$colors;\n  let {\n    color,\n    indeterminate,\n    style,\n    progress = 0,\n    visible = true,\n    theme: themeOverrides,\n    animatedValue,\n    ...rest\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const {\n    current: timer\n  } = React.useRef(new Animated.Value(0));\n  const {\n    current: fade\n  } = React.useRef(new Animated.Value(0));\n  const passedAnimatedValue = React.useRef(animatedValue);\n  const [width, setWidth] = React.useState(0);\n  const [prevWidth, setPrevWidth] = React.useState(0);\n  const indeterminateAnimation = React.useRef(null);\n  const {\n    scale\n  } = theme.animation;\n  React.useEffect(() => {\n    passedAnimatedValue.current = animatedValue;\n  });\n  const startAnimation = React.useCallback(() => {\n    // Show progress bar\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      useNativeDriver: true,\n      isInteraction: false\n    }).start();\n\n    /**\n     * We shouldn't add @param animatedValue to the\n     * deps array, to avoid the unnecessary loop.\n     * We can only check if the prop is passed initially,\n     * and we do early return.\n     */\n    const externalAnimation = typeof passedAnimatedValue.current !== 'undefined' && passedAnimatedValue.current >= 0;\n    if (externalAnimation) {\n      return;\n    }\n\n    // Animate progress bar\n    if (indeterminate) {\n      if (!indeterminateAnimation.current) {\n        indeterminateAnimation.current = Animated.timing(timer, {\n          duration: INDETERMINATE_DURATION,\n          toValue: 1,\n          // Animated.loop does not work if useNativeDriver is true on web\n          useNativeDriver: Platform.OS !== 'web',\n          isInteraction: false\n        });\n      }\n\n      // Reset timer to the beginning\n      timer.setValue(0);\n      Animated.loop(indeterminateAnimation.current).start();\n    } else {\n      Animated.timing(timer, {\n        duration: 200 * scale,\n        toValue: progress ? progress : 0,\n        useNativeDriver: true,\n        isInteraction: false\n      }).start();\n    }\n  }, [fade, scale, indeterminate, timer, progress]);\n  const stopAnimation = React.useCallback(() => {\n    // Stop indeterminate animation\n    if (indeterminateAnimation.current) {\n      indeterminateAnimation.current.stop();\n    }\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 0,\n      useNativeDriver: true,\n      isInteraction: false\n    }).start();\n  }, [fade, scale]);\n  React.useEffect(() => {\n    if (visible) startAnimation();else stopAnimation();\n  }, [visible, startAnimation, stopAnimation]);\n  React.useEffect(() => {\n    if (animatedValue && animatedValue >= 0) {\n      timer.setValue(animatedValue);\n    }\n  }, [animatedValue, timer]);\n  React.useEffect(() => {\n    // Start animation the very first time when previously the width was unclear\n    if (visible && prevWidth === 0) {\n      startAnimation();\n    }\n  }, [prevWidth, startAnimation, visible]);\n  const onLayout = event => {\n    setPrevWidth(width);\n    setWidth(event.nativeEvent.layout.width);\n  };\n  const tintColor = color || ((_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.primary);\n  const trackTintColor = theme.isV3 ? theme.colors.surfaceVariant : setColor(tintColor).alpha(0.38).rgb().string();\n  return /*#__PURE__*/React.createElement(View, _extends({\n    onLayout: onLayout\n  }, rest, {\n    accessible: true,\n    accessibilityRole: \"progressbar\",\n    accessibilityState: {\n      busy: visible\n    },\n    accessibilityValue: indeterminate ? {} : {\n      min: 0,\n      max: 100,\n      now: progress * 100\n    }\n  }), /*#__PURE__*/React.createElement(Animated.View, {\n    style: [styles.container, {\n      backgroundColor: trackTintColor,\n      opacity: fade\n    }, style]\n  }, width ? /*#__PURE__*/React.createElement(Animated.View, {\n    style: [styles.progressBar, {\n      width,\n      backgroundColor: tintColor,\n      transform: [{\n        translateX: timer.interpolate(indeterminate ? {\n          inputRange: [0, 0.5, 1],\n          outputRange: [(isRTL ? 1 : -1) * 0.5 * width, (isRTL ? 1 : -1) * 0.5 * INDETERMINATE_MAX_WIDTH * width, (isRTL ? -1 : 1) * 0.7 * width]\n        } : {\n          inputRange: [0, 1],\n          outputRange: [(isRTL ? 1 : -1) * 0.5 * width, 0]\n        })\n      }, {\n        // Workaround for workaround for https://github.com/facebook/react-native/issues/6278\n        scaleX: timer.interpolate(indeterminate ? {\n          inputRange: [0, 0.5, 1],\n          outputRange: [0.0001, INDETERMINATE_MAX_WIDTH, 0.0001]\n        } : {\n          inputRange: [0, 1],\n          outputRange: [0.0001, 1]\n        })\n      }]\n    }]\n  }) : null));\n};\nconst styles = StyleSheet.create({\n  container: {\n    height: 4,\n    overflow: 'hidden'\n  },\n  progressBar: {\n    flex: 1\n  }\n});\nexport default ProgressBar;\n//# sourceMappingURL=ProgressBar.js.map"]},"metadata":{},"sourceType":"module"}