{"ast":null,"code":"import * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useInternalTheme } from \"../../core/theming\";\nimport overlay from \"../../styles/overlay\";\nimport Modal from \"../Modal\";\nimport DialogActions from \"./DialogActions\";\nimport DialogContent from \"./DialogContent\";\nimport DialogIcon from \"./DialogIcon\";\nimport DialogScrollArea from \"./DialogScrollArea\";\nimport DialogTitle from \"./DialogTitle\";\nvar DIALOG_ELEVATION = 24;\nvar Dialog = function Dialog(_ref) {\n  var children = _ref.children,\n    _ref$dismissable = _ref.dismissable,\n    dismissable = _ref$dismissable === void 0 ? true : _ref$dismissable,\n    onDismiss = _ref.onDismiss,\n    _ref$visible = _ref.visible,\n    visible = _ref$visible === void 0 ? false : _ref$visible,\n    style = _ref.style,\n    themeOverrides = _ref.theme;\n  var theme = useInternalTheme(themeOverrides);\n  var isV3 = theme.isV3,\n    dark = theme.dark,\n    mode = theme.mode,\n    colors = theme.colors,\n    roundness = theme.roundness;\n  var borderRadius = (isV3 ? 7 : 1) * roundness;\n  var backgroundColorV2 = dark && mode === 'adaptive' ? overlay(DIALOG_ELEVATION, colors === null || colors === void 0 ? void 0 : colors.surface) : colors === null || colors === void 0 ? void 0 : colors.surface;\n  var backgroundColor = isV3 ? theme.colors.elevation.level3 : backgroundColorV2;\n  return React.createElement(Modal, {\n    dismissable: dismissable,\n    onDismiss: onDismiss,\n    visible: visible,\n    contentContainerStyle: [{\n      borderRadius: borderRadius,\n      backgroundColor: backgroundColor\n    }, styles.container, style],\n    theme: theme\n  }, React.Children.toArray(children).filter(function (child) {\n    return child != null && typeof child !== 'boolean';\n  }).map(function (child, i) {\n    if (isV3) {\n      if (i === 0 && React.isValidElement(child)) {\n        return React.cloneElement(child, {\n          style: [{\n            marginTop: 24\n          }, child.props.style]\n        });\n      }\n    }\n    if (i === 0 && React.isValidElement(child) && child.type === DialogContent) {\n      return React.cloneElement(child, {\n        style: [{\n          paddingTop: 24\n        }, child.props.style]\n      });\n    }\n    return child;\n  }));\n};\nDialog.Content = DialogContent;\nDialog.Actions = DialogActions;\nDialog.Title = DialogTitle;\nDialog.ScrollArea = DialogScrollArea;\nDialog.Icon = DialogIcon;\nvar styles = StyleSheet.create({\n  container: {\n    marginVertical: Platform.OS === 'android' ? 44 : 0,\n    marginHorizontal: 26,\n    elevation: DIALOG_ELEVATION,\n    justifyContent: 'flex-start'\n  }\n});\nexport default Dialog;","map":{"version":3,"sources":["Dialog.tsx"],"names":["React","useInternalTheme","overlay","Modal","DialogActions","DialogContent","DialogIcon","DialogScrollArea","DialogTitle","DIALOG_ELEVATION","Dialog","children","dismissable","onDismiss","visible","style","theme","themeOverrides","isV3","dark","mode","colors","roundness","borderRadius","backgroundColorV2","surface","backgroundColor","elevation","level3","styles","container","Children","toArray","filter","child","map","i","isValidElement","cloneElement","marginTop","props","type","paddingTop","Content","Actions","Title","ScrollArea","Icon","StyleSheet","create","marginVertical","Platform","OS","marginHorizontal","justifyContent"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["import * as React from 'react';\nimport { Platform, StyleSheet } from 'react-native';\nimport { useInternalTheme } from '../../core/theming';\nimport overlay from '../../styles/overlay';\nimport Modal from '../Modal';\nimport DialogActions from './DialogActions';\nimport DialogContent from './DialogContent';\nimport DialogIcon from './DialogIcon';\nimport DialogScrollArea from './DialogScrollArea';\nimport DialogTitle from './DialogTitle';\nconst DIALOG_ELEVATION = 24;\n\n/**\n * Dialogs inform users about a specific task and may contain critical information, require decisions, or involve multiple tasks.\n * To render the `Dialog` above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\n *\n *  <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/dialog-1.png\" />\n *   <img class=\"small\" src=\"screenshots/dialog-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Button, Dialog, Portal, Provider, Text } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const showDialog = () => setVisible(true);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Provider>\n *       <View>\n *         <Button onPress={showDialog}>Show Dialog</Button>\n *         <Portal>\n *           <Dialog visible={visible} onDismiss={hideDialog}>\n *             <Dialog.Title>Alert</Dialog.Title>\n *             <Dialog.Content>\n *               <Text variant=\"bodyMedium\">This is simple dialog</Text>\n *             </Dialog.Content>\n *             <Dialog.Actions>\n *               <Button onPress={hideDialog}>Done</Button>\n *             </Dialog.Actions>\n *           </Dialog>\n *         </Portal>\n *       </View>\n *     </Provider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst Dialog = _ref => {\n  let {\n    children,\n    dismissable = true,\n    onDismiss,\n    visible = false,\n    style,\n    theme: themeOverrides\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const {\n    isV3,\n    dark,\n    mode,\n    colors,\n    roundness\n  } = theme;\n  const borderRadius = (isV3 ? 7 : 1) * roundness;\n  const backgroundColorV2 = dark && mode === 'adaptive' ? overlay(DIALOG_ELEVATION, colors === null || colors === void 0 ? void 0 : colors.surface) : colors === null || colors === void 0 ? void 0 : colors.surface;\n  const backgroundColor = isV3 ? theme.colors.elevation.level3 : backgroundColorV2;\n  return /*#__PURE__*/React.createElement(Modal, {\n    dismissable: dismissable,\n    onDismiss: onDismiss,\n    visible: visible,\n    contentContainerStyle: [{\n      borderRadius,\n      backgroundColor\n    }, styles.container, style],\n    theme: theme\n  }, React.Children.toArray(children).filter(child => child != null && typeof child !== 'boolean').map((child, i) => {\n    if (isV3) {\n      if (i === 0 && /*#__PURE__*/React.isValidElement(child)) {\n        return /*#__PURE__*/React.cloneElement(child, {\n          style: [{\n            marginTop: 24\n          }, child.props.style]\n        });\n      }\n    }\n    if (i === 0 && /*#__PURE__*/React.isValidElement(child) && child.type === DialogContent) {\n      // Dialog content is the first item, so we add a top padding\n      return /*#__PURE__*/React.cloneElement(child, {\n        style: [{\n          paddingTop: 24\n        }, child.props.style]\n      });\n    }\n    return child;\n  }));\n};\n\n// @component ./DialogContent.tsx\nDialog.Content = DialogContent;\n// @component ./DialogActions.tsx\nDialog.Actions = DialogActions;\n// @component ./DialogTitle.tsx\nDialog.Title = DialogTitle;\n// @component ./DialogScrollArea.tsx\nDialog.ScrollArea = DialogScrollArea;\n// @component ./DialogIcon.tsx\nDialog.Icon = DialogIcon;\nconst styles = StyleSheet.create({\n  container: {\n    /**\n     * This prevents the shadow from being clipped on Android since Android\n     * doesn't support `overflow: visible`.\n     * One downside for this fix is that it will disable clicks on the area\n     * of the shadow around the dialog, consequently, if you click around the\n     * dialog (44 pixel from the top and bottom) it won't be dismissed.\n     */\n    marginVertical: Platform.OS === 'android' ? 44 : 0,\n    marginHorizontal: 26,\n    elevation: DIALOG_ELEVATION,\n    justifyContent: 'flex-start'\n  }\n});\nexport default Dialog;\n//# sourceMappingURL=Dialog.js.map"]},"metadata":{},"sourceType":"module"}