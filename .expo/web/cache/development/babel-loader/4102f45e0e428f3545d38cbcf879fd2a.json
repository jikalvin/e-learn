{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"mode\", \"children\", \"icon\", \"avatar\", \"selected\", \"disabled\", \"accessibilityLabel\", \"closeIconAccessibilityLabel\", \"onPress\", \"onLongPress\", \"delayLongPress\", \"onClose\", \"closeIcon\", \"textStyle\", \"style\", \"theme\", \"testID\", \"selectedColor\", \"showSelectedOverlay\", \"ellipsizeMode\", \"compact\", \"elevated\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useInternalTheme } from \"../../core/theming\";\nimport { white } from \"../../styles/themes/v2/colors\";\nimport Icon from \"../Icon\";\nimport MaterialCommunityIcon from \"../MaterialCommunityIcon\";\nimport Surface from \"../Surface\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport Text from \"../Typography/Text\";\nimport { getChipColors } from \"./helpers\";\nvar Chip = function Chip(_ref) {\n  var _ref$mode = _ref.mode,\n    mode = _ref$mode === void 0 ? 'flat' : _ref$mode,\n    children = _ref.children,\n    icon = _ref.icon,\n    avatar = _ref.avatar,\n    _ref$selected = _ref.selected,\n    selected = _ref$selected === void 0 ? false : _ref$selected,\n    _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    accessibilityLabel = _ref.accessibilityLabel,\n    _ref$closeIconAccessi = _ref.closeIconAccessibilityLabel,\n    closeIconAccessibilityLabel = _ref$closeIconAccessi === void 0 ? 'Close' : _ref$closeIconAccessi,\n    onPress = _ref.onPress,\n    onLongPress = _ref.onLongPress,\n    delayLongPress = _ref.delayLongPress,\n    onClose = _ref.onClose,\n    closeIcon = _ref.closeIcon,\n    textStyle = _ref.textStyle,\n    style = _ref.style,\n    themeOverrides = _ref.theme,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? 'chip' : _ref$testID,\n    selectedColor = _ref.selectedColor,\n    _ref$showSelectedOver = _ref.showSelectedOverlay,\n    showSelectedOverlay = _ref$showSelectedOver === void 0 ? false : _ref$showSelectedOver,\n    ellipsizeMode = _ref.ellipsizeMode,\n    compact = _ref.compact,\n    _ref$elevated = _ref.elevated,\n    elevated = _ref$elevated === void 0 ? false : _ref$elevated,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var isV3 = theme.isV3;\n  var _React$useRef = React.useRef(new Animated.Value(isV3 && elevated ? 1 : 0)),\n    elevation = _React$useRef.current;\n  var isOutlined = mode === 'outlined';\n  var handlePressIn = function handlePressIn() {\n    var scale = theme.animation.scale;\n    Animated.timing(elevation, {\n      toValue: isV3 ? elevated ? 2 : 0 : 4,\n      duration: 200 * scale,\n      useNativeDriver: true\n    }).start();\n  };\n  var handlePressOut = function handlePressOut() {\n    var scale = theme.animation.scale;\n    Animated.timing(elevation, {\n      toValue: isV3 && elevated ? 1 : 0,\n      duration: 150 * scale,\n      useNativeDriver: true\n    }).start();\n  };\n  var opacity = isV3 ? 0.38 : 0.26;\n  var defaultBorderRadius = isV3 ? 8 : 16;\n  var iconSize = isV3 ? 18 : 16;\n  var _ref2 = StyleSheet.flatten(style) || {},\n    customBackgroundColor = _ref2.backgroundColor,\n    _ref2$borderRadius = _ref2.borderRadius,\n    borderRadius = _ref2$borderRadius === void 0 ? defaultBorderRadius : _ref2$borderRadius;\n  var _getChipColors = getChipColors({\n      isOutlined: isOutlined,\n      theme: theme,\n      selectedColor: selectedColor,\n      showSelectedOverlay: showSelectedOverlay,\n      customBackgroundColor: customBackgroundColor,\n      disabled: disabled\n    }),\n    borderColor = _getChipColors.borderColor,\n    textColor = _getChipColors.textColor,\n    iconColor = _getChipColors.iconColor,\n    underlayColor = _getChipColors.underlayColor,\n    selectedBackgroundColor = _getChipColors.selectedBackgroundColor,\n    backgroundColor = _getChipColors.backgroundColor;\n  var accessibilityState = {\n    selected: selected,\n    disabled: disabled\n  };\n  var elevationStyle = isV3 || Platform.OS === 'android' ? elevation : 0;\n  var multiplier = isV3 ? compact ? 1.5 : 2 : 1;\n  var labelSpacings = {\n    marginRight: onClose ? 0 : 8 * multiplier,\n    marginLeft: avatar || icon || selected ? 4 * multiplier : 8 * multiplier\n  };\n  var contentSpacings = {\n    paddingRight: isV3 ? onClose ? 34 : 0 : onClose ? 32 : 4\n  };\n  var labelTextStyle = _objectSpread({\n    color: textColor\n  }, isV3 ? theme.fonts.labelLarge : theme.fonts.regular);\n  return React.createElement(Surface, _extends({\n    style: [styles.container, isV3 && (isOutlined ? styles.md3OutlineContainer : styles.md3FlatContainer), !theme.isV3 && {\n      elevation: elevationStyle\n    }, {\n      backgroundColor: selected ? selectedBackgroundColor : backgroundColor,\n      borderColor: borderColor,\n      borderRadius: borderRadius\n    }, style]\n  }, theme.isV3 && {\n    elevation: elevationStyle\n  }, rest, {\n    testID: testID + \"-container\",\n    theme: theme\n  }), React.createElement(TouchableRipple, {\n    borderless: true,\n    style: [{\n      borderRadius: borderRadius\n    }, styles.touchable],\n    onPress: onPress,\n    onPressIn: handlePressIn,\n    onPressOut: handlePressOut,\n    onLongPress: onLongPress,\n    delayLongPress: delayLongPress,\n    underlayColor: underlayColor,\n    disabled: disabled,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    accessibilityState: accessibilityState,\n    testID: testID,\n    theme: theme\n  }, React.createElement(View, {\n    style: [styles.content, isV3 && styles.md3Content, contentSpacings]\n  }, avatar && !icon ? React.createElement(View, {\n    style: [styles.avatarWrapper, isV3 && styles.md3AvatarWrapper, disabled && {\n      opacity: opacity\n    }]\n  }, React.isValidElement(avatar) ? React.cloneElement(avatar, {\n    style: [styles.avatar, avatar.props.style]\n  }) : avatar) : null, icon || selected ? React.createElement(View, {\n    style: [styles.icon, isV3 && styles.md3Icon, avatar ? [styles.avatar, styles.avatarSelected, isV3 && selected && styles.md3SelectedIcon] : null]\n  }, icon ? React.createElement(Icon, {\n    source: icon,\n    color: avatar ? white : !disabled && theme.isV3 ? theme.colors.primary : iconColor,\n    size: 18,\n    theme: theme\n  }) : React.createElement(MaterialCommunityIcon, {\n    name: \"check\",\n    color: avatar ? white : iconColor,\n    size: 18,\n    direction: \"ltr\"\n  })) : null, React.createElement(Text, {\n    variant: \"labelLarge\",\n    selectable: false,\n    numberOfLines: 1,\n    style: [isV3 ? styles.md3LabelText : styles.labelText, labelTextStyle, labelSpacings, textStyle],\n    ellipsizeMode: ellipsizeMode\n  }, children))), onClose ? React.createElement(View, {\n    style: styles.closeButtonStyle\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: onClose,\n    accessibilityRole: \"button\",\n    accessibilityLabel: closeIconAccessibilityLabel\n  }, React.createElement(View, {\n    style: [styles.icon, styles.closeIcon, isV3 && styles.md3CloseIcon]\n  }, closeIcon ? React.createElement(Icon, {\n    source: closeIcon,\n    color: iconColor,\n    size: iconSize\n  }) : React.createElement(MaterialCommunityIcon, {\n    name: isV3 ? 'close' : 'close-circle',\n    size: iconSize,\n    color: iconColor,\n    direction: \"ltr\"\n  })))) : null);\n};\nvar styles = StyleSheet.create({\n  container: {\n    borderWidth: StyleSheet.hairlineWidth,\n    borderStyle: 'solid',\n    flexDirection: Platform.select({\n      default: 'column',\n      web: 'row'\n    })\n  },\n  md3OutlineContainer: {\n    borderWidth: 1\n  },\n  md3FlatContainer: {\n    borderWidth: 0\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 4,\n    position: 'relative',\n    flexGrow: 1\n  },\n  md3Content: {\n    paddingLeft: 0\n  },\n  icon: {\n    padding: 4,\n    alignSelf: 'center'\n  },\n  md3Icon: {\n    paddingLeft: 8,\n    paddingRight: 0\n  },\n  closeIcon: {\n    marginRight: 4\n  },\n  md3CloseIcon: {\n    marginRight: 8,\n    padding: 0\n  },\n  labelText: {\n    minHeight: 24,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n    marginVertical: 4\n  },\n  md3LabelText: {\n    textAlignVertical: 'center',\n    marginVertical: 6\n  },\n  avatar: {\n    width: 24,\n    height: 24,\n    borderRadius: 12\n  },\n  avatarWrapper: {\n    marginRight: 4\n  },\n  md3AvatarWrapper: {\n    marginLeft: 4,\n    marginRight: 0\n  },\n  md3SelectedIcon: {\n    paddingLeft: 4\n  },\n  avatarSelected: {\n    position: 'absolute',\n    top: 4,\n    left: 4,\n    backgroundColor: 'rgba(0, 0, 0, .29)'\n  },\n  closeButtonStyle: {\n    position: 'absolute',\n    right: 0,\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  touchable: {\n    flexGrow: 1\n  }\n});\nexport default Chip;","map":{"version":3,"sources":["Chip.tsx"],"names":["React","useInternalTheme","white","Icon","MaterialCommunityIcon","Surface","TouchableRipple","Text","getChipColors","Chip","mode","children","icon","avatar","selected","disabled","accessibilityLabel","closeIconAccessibilityLabel","onPress","onLongPress","delayLongPress","onClose","closeIcon","textStyle","style","theme","themeOverrides","testID","selectedColor","showSelectedOverlay","ellipsizeMode","compact","elevated","rest","isV3","current","elevation","useRef","Animated","Value","isOutlined","handlePressIn","scale","animation","timing","toValue","duration","useNativeDriver","start","handlePressOut","opacity","defaultBorderRadius","iconSize","backgroundColor","customBackgroundColor","borderRadius","StyleSheet","flatten","borderColor","textColor","iconColor","underlayColor","selectedBackgroundColor","accessibilityState","elevationStyle","Platform","OS","multiplier","labelSpacings","marginRight","marginLeft","contentSpacings","paddingRight","labelTextStyle","color","fonts","labelLarge","regular","styles","container","md3OutlineContainer","md3FlatContainer","touchable","content","md3Content","avatarWrapper","md3AvatarWrapper","isValidElement","cloneElement","props","md3Icon","avatarSelected","md3SelectedIcon","colors","primary","md3LabelText","labelText","closeButtonStyle","md3CloseIcon","create","borderWidth","hairlineWidth","borderStyle","flexDirection","select","default","web","alignItems","paddingLeft","position","flexGrow","padding","alignSelf","minHeight","lineHeight","textAlignVertical","marginVertical","width","height","top","left","right","justifyContent"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { Animated, Platform, StyleSheet, TouchableWithoutFeedback, View } from 'react-native';\nimport { useInternalTheme } from '../../core/theming';\nimport { white } from '../../styles/themes/v2/colors';\nimport Icon from '../Icon';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport { getChipColors } from './helpers';\n/**\n * Chips can be used to display entities in small blocks.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/chip-1.png\" />\n *     <figcaption>Flat chip</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/chip-2.png\" />\n *     <figcaption>Outlined chip</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Chip } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Chip icon=\"information\" onPress={() => console.log('Pressed')}>Example Chip</Chip>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Chip = _ref => {\n  let {\n    mode = 'flat',\n    children,\n    icon,\n    avatar,\n    selected = false,\n    disabled = false,\n    accessibilityLabel,\n    closeIconAccessibilityLabel = 'Close',\n    onPress,\n    onLongPress,\n    delayLongPress,\n    onClose,\n    closeIcon,\n    textStyle,\n    style,\n    theme: themeOverrides,\n    testID = 'chip',\n    selectedColor,\n    showSelectedOverlay = false,\n    ellipsizeMode,\n    compact,\n    elevated = false,\n    ...rest\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const {\n    isV3\n  } = theme;\n  const {\n    current: elevation\n  } = React.useRef(new Animated.Value(isV3 && elevated ? 1 : 0));\n  const isOutlined = mode === 'outlined';\n  const handlePressIn = () => {\n    const {\n      scale\n    } = theme.animation;\n    Animated.timing(elevation, {\n      toValue: isV3 ? elevated ? 2 : 0 : 4,\n      duration: 200 * scale,\n      useNativeDriver: true\n    }).start();\n  };\n  const handlePressOut = () => {\n    const {\n      scale\n    } = theme.animation;\n    Animated.timing(elevation, {\n      toValue: isV3 && elevated ? 1 : 0,\n      duration: 150 * scale,\n      useNativeDriver: true\n    }).start();\n  };\n  const opacity = isV3 ? 0.38 : 0.26;\n  const defaultBorderRadius = isV3 ? 8 : 16;\n  const iconSize = isV3 ? 18 : 16;\n  const {\n    backgroundColor: customBackgroundColor,\n    borderRadius = defaultBorderRadius\n  } = StyleSheet.flatten(style) || {};\n  const {\n    borderColor,\n    textColor,\n    iconColor,\n    underlayColor,\n    selectedBackgroundColor,\n    backgroundColor\n  } = getChipColors({\n    isOutlined,\n    theme,\n    selectedColor,\n    showSelectedOverlay,\n    customBackgroundColor,\n    disabled\n  });\n  const accessibilityState = {\n    selected,\n    disabled\n  };\n  const elevationStyle = isV3 || Platform.OS === 'android' ? elevation : 0;\n  const multiplier = isV3 ? compact ? 1.5 : 2 : 1;\n  const labelSpacings = {\n    marginRight: onClose ? 0 : 8 * multiplier,\n    marginLeft: avatar || icon || selected ? 4 * multiplier : 8 * multiplier\n  };\n  const contentSpacings = {\n    paddingRight: isV3 ? onClose ? 34 : 0 : onClose ? 32 : 4\n  };\n  const labelTextStyle = {\n    color: textColor,\n    ...(isV3 ? theme.fonts.labelLarge : theme.fonts.regular)\n  };\n  return /*#__PURE__*/React.createElement(Surface, _extends({\n    style: [styles.container, isV3 && (isOutlined ? styles.md3OutlineContainer : styles.md3FlatContainer), !theme.isV3 && {\n      elevation: elevationStyle\n    }, {\n      backgroundColor: selected ? selectedBackgroundColor : backgroundColor,\n      borderColor,\n      borderRadius\n    }, style]\n  }, theme.isV3 && {\n    elevation: elevationStyle\n  }, rest, {\n    testID: `${testID}-container`,\n    theme: theme\n  }), /*#__PURE__*/React.createElement(TouchableRipple, {\n    borderless: true,\n    style: [{\n      borderRadius\n    }, styles.touchable],\n    onPress: onPress,\n    onPressIn: handlePressIn,\n    onPressOut: handlePressOut,\n    onLongPress: onLongPress,\n    delayLongPress: delayLongPress,\n    underlayColor: underlayColor,\n    disabled: disabled,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    accessibilityState: accessibilityState,\n    testID: testID,\n    theme: theme\n  }, /*#__PURE__*/React.createElement(View, {\n    style: [styles.content, isV3 && styles.md3Content, contentSpacings]\n  }, avatar && !icon ? /*#__PURE__*/React.createElement(View, {\n    style: [styles.avatarWrapper, isV3 && styles.md3AvatarWrapper, disabled && {\n      opacity\n    }]\n  }, /*#__PURE__*/React.isValidElement(avatar) ? /*#__PURE__*/React.cloneElement(avatar, {\n    style: [styles.avatar, avatar.props.style]\n  }) : avatar) : null, icon || selected ? /*#__PURE__*/React.createElement(View, {\n    style: [styles.icon, isV3 && styles.md3Icon, avatar ? [styles.avatar, styles.avatarSelected, isV3 && selected && styles.md3SelectedIcon] : null]\n  }, icon ? /*#__PURE__*/React.createElement(Icon, {\n    source: icon,\n    color: avatar ? white : !disabled && theme.isV3 ? theme.colors.primary : iconColor,\n    size: 18,\n    theme: theme\n  }) : /*#__PURE__*/React.createElement(MaterialCommunityIcon, {\n    name: \"check\",\n    color: avatar ? white : iconColor,\n    size: 18,\n    direction: \"ltr\"\n  })) : null, /*#__PURE__*/React.createElement(Text, {\n    variant: \"labelLarge\",\n    selectable: false,\n    numberOfLines: 1,\n    style: [isV3 ? styles.md3LabelText : styles.labelText, labelTextStyle, labelSpacings, textStyle],\n    ellipsizeMode: ellipsizeMode\n  }, children))), onClose ? /*#__PURE__*/React.createElement(View, {\n    style: styles.closeButtonStyle\n  }, /*#__PURE__*/React.createElement(TouchableWithoutFeedback, {\n    onPress: onClose,\n    accessibilityRole: \"button\",\n    accessibilityLabel: closeIconAccessibilityLabel\n  }, /*#__PURE__*/React.createElement(View, {\n    style: [styles.icon, styles.closeIcon, isV3 && styles.md3CloseIcon]\n  }, closeIcon ? /*#__PURE__*/React.createElement(Icon, {\n    source: closeIcon,\n    color: iconColor,\n    size: iconSize\n  }) : /*#__PURE__*/React.createElement(MaterialCommunityIcon, {\n    name: isV3 ? 'close' : 'close-circle',\n    size: iconSize,\n    color: iconColor,\n    direction: \"ltr\"\n  })))) : null);\n};\nconst styles = StyleSheet.create({\n  container: {\n    borderWidth: StyleSheet.hairlineWidth,\n    borderStyle: 'solid',\n    flexDirection: Platform.select({\n      default: 'column',\n      web: 'row'\n    })\n  },\n  md3OutlineContainer: {\n    borderWidth: 1\n  },\n  md3FlatContainer: {\n    borderWidth: 0\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 4,\n    position: 'relative',\n    flexGrow: 1\n  },\n  md3Content: {\n    paddingLeft: 0\n  },\n  icon: {\n    padding: 4,\n    alignSelf: 'center'\n  },\n  md3Icon: {\n    paddingLeft: 8,\n    paddingRight: 0\n  },\n  closeIcon: {\n    marginRight: 4\n  },\n  md3CloseIcon: {\n    marginRight: 8,\n    padding: 0\n  },\n  labelText: {\n    minHeight: 24,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n    marginVertical: 4\n  },\n  md3LabelText: {\n    textAlignVertical: 'center',\n    marginVertical: 6\n  },\n  avatar: {\n    width: 24,\n    height: 24,\n    borderRadius: 12\n  },\n  avatarWrapper: {\n    marginRight: 4\n  },\n  md3AvatarWrapper: {\n    marginLeft: 4,\n    marginRight: 0\n  },\n  md3SelectedIcon: {\n    paddingLeft: 4\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  avatarSelected: {\n    position: 'absolute',\n    top: 4,\n    left: 4,\n    backgroundColor: 'rgba(0, 0, 0, .29)'\n  },\n  closeButtonStyle: {\n    position: 'absolute',\n    right: 0,\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  touchable: {\n    flexGrow: 1\n  }\n});\nexport default Chip;\n//# sourceMappingURL=Chip.js.map"]},"metadata":{},"sourceType":"module"}