{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport useEventCallback from 'use-event-callback';\nimport { useInternalTheme } from \"../core/theming\";\nimport { addEventListener } from \"../utils/addEventListener\";\nimport useAnimatedValue from \"../utils/useAnimatedValue\";\nimport Surface from \"./Surface\";\nvar DEFAULT_DURATION = 220;\nfunction Modal(_ref) {\n  var _theme$colors;\n  var _ref$dismissable = _ref.dismissable,\n    dismissable = _ref$dismissable === void 0 ? true : _ref$dismissable,\n    _ref$visible = _ref.visible,\n    visible = _ref$visible === void 0 ? false : _ref$visible,\n    _ref$overlayAccessibi = _ref.overlayAccessibilityLabel,\n    overlayAccessibilityLabel = _ref$overlayAccessibi === void 0 ? 'Close modal' : _ref$overlayAccessibi,\n    _ref$onDismiss = _ref.onDismiss,\n    onDismiss = _ref$onDismiss === void 0 ? function () {} : _ref$onDismiss,\n    children = _ref.children,\n    contentContainerStyle = _ref.contentContainerStyle,\n    style = _ref.style,\n    themeOverrides = _ref.theme,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? 'modal' : _ref$testID;\n  var theme = useInternalTheme(themeOverrides);\n  var visibleRef = React.useRef(visible);\n  React.useEffect(function () {\n    visibleRef.current = visible;\n  });\n  var onDismissCallback = useEventCallback(onDismiss);\n  var scale = theme.animation.scale;\n  var _useSafeAreaInsets = useSafeAreaInsets(),\n    top = _useSafeAreaInsets.top,\n    bottom = _useSafeAreaInsets.bottom;\n  var opacity = useAnimatedValue(visible ? 1 : 0);\n  var _React$useState = React.useState(visible),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    rendered = _React$useState2[0],\n    setRendered = _React$useState2[1];\n  if (visible && !rendered) {\n    setRendered(true);\n  }\n  var showModal = React.useCallback(function () {\n    Animated.timing(opacity, {\n      toValue: 1,\n      duration: scale * DEFAULT_DURATION,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: true\n    }).start();\n  }, [opacity, scale]);\n  var hideModal = React.useCallback(function () {\n    Animated.timing(opacity, {\n      toValue: 0,\n      duration: scale * DEFAULT_DURATION,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: true\n    }).start(function (_ref2) {\n      var finished = _ref2.finished;\n      if (!finished) {\n        return;\n      }\n      if (visible) {\n        onDismissCallback();\n      }\n      if (visibleRef.current) {\n        showModal();\n      } else {\n        setRendered(false);\n      }\n    });\n  }, [onDismissCallback, opacity, scale, showModal, visible]);\n  React.useEffect(function () {\n    if (!visible) {\n      return undefined;\n    }\n    var onHardwareBackPress = function onHardwareBackPress() {\n      if (dismissable) {\n        hideModal();\n      }\n      return true;\n    };\n    var subscription = addEventListener(BackHandler, 'hardwareBackPress', onHardwareBackPress);\n    return function () {\n      return subscription.remove();\n    };\n  }, [dismissable, hideModal, visible]);\n  var prevVisible = React.useRef(null);\n  React.useEffect(function () {\n    if (prevVisible.current !== visible) {\n      if (visible) {\n        showModal();\n      } else {\n        hideModal();\n      }\n    }\n    prevVisible.current = visible;\n  });\n  if (!rendered) return null;\n  return React.createElement(Animated.View, {\n    pointerEvents: visible ? 'auto' : 'none',\n    accessibilityViewIsModal: true,\n    accessibilityLiveRegion: \"polite\",\n    style: StyleSheet.absoluteFill,\n    onAccessibilityEscape: hideModal,\n    testID: testID\n  }, React.createElement(TouchableWithoutFeedback, {\n    accessibilityLabel: overlayAccessibilityLabel,\n    accessibilityRole: \"button\",\n    disabled: !dismissable,\n    onPress: dismissable ? hideModal : undefined,\n    importantForAccessibility: \"no\"\n  }, React.createElement(Animated.View, {\n    testID: testID + \"-backdrop\",\n    style: [styles.backdrop, {\n      backgroundColor: (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.backdrop,\n      opacity: opacity\n    }]\n  })), React.createElement(View, {\n    style: [styles.wrapper, {\n      marginTop: top,\n      marginBottom: bottom\n    }, style],\n    pointerEvents: \"box-none\",\n    testID: testID + \"-wrapper\"\n  }, React.createElement(Surface, {\n    testID: testID + \"-surface\",\n    theme: theme,\n    style: [{\n      opacity: opacity\n    }, styles.content, contentContainerStyle]\n  }, children)));\n}\nexport default Modal;\nvar styles = StyleSheet.create({\n  backdrop: {\n    flex: 1\n  },\n  wrapper: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    justifyContent: 'center'\n  }),\n  content: {\n    backgroundColor: 'transparent',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["Modal.tsx"],"names":["React","useSafeAreaInsets","useEventCallback","useInternalTheme","addEventListener","useAnimatedValue","Surface","DEFAULT_DURATION","Modal","dismissable","visible","overlayAccessibilityLabel","onDismiss","children","contentContainerStyle","style","theme","themeOverrides","testID","visibleRef","useRef","useEffect","current","onDismissCallback","scale","animation","top","bottom","opacity","rendered","setRendered","useState","showModal","useCallback","Animated","timing","toValue","duration","easing","Easing","out","cubic","useNativeDriver","start","hideModal","finished","undefined","onHardwareBackPress","subscription","BackHandler","remove","prevVisible","StyleSheet","absoluteFill","styles","backdrop","backgroundColor","colors","wrapper","marginTop","marginBottom","content","create","flex","absoluteFillObject","justifyContent"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["import * as React from 'react';\nimport { Animated, BackHandler, Easing, StyleSheet, TouchableWithoutFeedback, View } from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport useEventCallback from 'use-event-callback';\nimport { useInternalTheme } from '../core/theming';\nimport { addEventListener } from '../utils/addEventListener';\nimport useAnimatedValue from '../utils/useAnimatedValue';\nimport Surface from './Surface';\nconst DEFAULT_DURATION = 220;\n\n/**\n * The Modal component is a simple way to present content above an enclosing view.\n * To render the `Modal` above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/modal.gif\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Modal, Portal, Text, Button, Provider } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const showModal = () => setVisible(true);\n *   const hideModal = () => setVisible(false);\n *   const containerStyle = {backgroundColor: 'white', padding: 20};\n *\n *   return (\n *     <Provider>\n *       <Portal>\n *         <Modal visible={visible} onDismiss={hideModal} contentContainerStyle={containerStyle}>\n *           <Text>Example Modal.  Click outside this area to dismiss.</Text>\n *         </Modal>\n *       </Portal>\n *       <Button style={{marginTop: 30}} onPress={showModal}>\n *         Show\n *       </Button>\n *     </Provider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nfunction Modal(_ref) {\n  var _theme$colors;\n  let {\n    dismissable = true,\n    visible = false,\n    overlayAccessibilityLabel = 'Close modal',\n    onDismiss = () => {},\n    children,\n    contentContainerStyle,\n    style,\n    theme: themeOverrides,\n    testID = 'modal'\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const visibleRef = React.useRef(visible);\n  React.useEffect(() => {\n    visibleRef.current = visible;\n  });\n  const onDismissCallback = useEventCallback(onDismiss);\n  const {\n    scale\n  } = theme.animation;\n  const {\n    top,\n    bottom\n  } = useSafeAreaInsets();\n  const opacity = useAnimatedValue(visible ? 1 : 0);\n  const [rendered, setRendered] = React.useState(visible);\n  if (visible && !rendered) {\n    setRendered(true);\n  }\n  const showModal = React.useCallback(() => {\n    Animated.timing(opacity, {\n      toValue: 1,\n      duration: scale * DEFAULT_DURATION,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: true\n    }).start();\n  }, [opacity, scale]);\n  const hideModal = React.useCallback(() => {\n    Animated.timing(opacity, {\n      toValue: 0,\n      duration: scale * DEFAULT_DURATION,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: true\n    }).start(_ref2 => {\n      let {\n        finished\n      } = _ref2;\n      if (!finished) {\n        return;\n      }\n      if (visible) {\n        onDismissCallback();\n      }\n      if (visibleRef.current) {\n        showModal();\n      } else {\n        setRendered(false);\n      }\n    });\n  }, [onDismissCallback, opacity, scale, showModal, visible]);\n  React.useEffect(() => {\n    if (!visible) {\n      return undefined;\n    }\n    const onHardwareBackPress = () => {\n      if (dismissable) {\n        hideModal();\n      }\n      return true;\n    };\n    const subscription = addEventListener(BackHandler, 'hardwareBackPress', onHardwareBackPress);\n    return () => subscription.remove();\n  }, [dismissable, hideModal, visible]);\n  const prevVisible = React.useRef(null);\n  React.useEffect(() => {\n    if (prevVisible.current !== visible) {\n      if (visible) {\n        showModal();\n      } else {\n        hideModal();\n      }\n    }\n    prevVisible.current = visible;\n  });\n  if (!rendered) return null;\n  return /*#__PURE__*/React.createElement(Animated.View, {\n    pointerEvents: visible ? 'auto' : 'none',\n    accessibilityViewIsModal: true,\n    accessibilityLiveRegion: \"polite\",\n    style: StyleSheet.absoluteFill,\n    onAccessibilityEscape: hideModal,\n    testID: testID\n  }, /*#__PURE__*/React.createElement(TouchableWithoutFeedback, {\n    accessibilityLabel: overlayAccessibilityLabel,\n    accessibilityRole: \"button\",\n    disabled: !dismissable,\n    onPress: dismissable ? hideModal : undefined,\n    importantForAccessibility: \"no\"\n  }, /*#__PURE__*/React.createElement(Animated.View, {\n    testID: `${testID}-backdrop`,\n    style: [styles.backdrop, {\n      backgroundColor: (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.backdrop,\n      opacity\n    }]\n  })), /*#__PURE__*/React.createElement(View, {\n    style: [styles.wrapper, {\n      marginTop: top,\n      marginBottom: bottom\n    }, style],\n    pointerEvents: \"box-none\",\n    testID: `${testID}-wrapper`\n  }, /*#__PURE__*/React.createElement(Surface, {\n    testID: `${testID}-surface`,\n    theme: theme,\n    style: [{\n      opacity\n    }, styles.content, contentContainerStyle]\n  }, children)));\n}\nexport default Modal;\nconst styles = StyleSheet.create({\n  backdrop: {\n    flex: 1\n  },\n  wrapper: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center'\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  content: {\n    backgroundColor: 'transparent',\n    justifyContent: 'center'\n  }\n});\n//# sourceMappingURL=Modal.js.map"]},"metadata":{},"sourceType":"module"}