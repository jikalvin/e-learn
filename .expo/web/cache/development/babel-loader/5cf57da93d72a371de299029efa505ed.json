{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"left\", \"right\", \"title\", \"description\", \"onPress\", \"theme\", \"style\", \"titleStyle\", \"titleNumberOfLines\", \"descriptionNumberOfLines\", \"titleEllipsizeMode\", \"descriptionEllipsizeMode\", \"descriptionStyle\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport { useInternalTheme } from \"../../core/theming\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport Text from \"../Typography/Text\";\nimport { getLeftStyles, getRightStyles } from \"./utils\";\nvar ListItem = function ListItem(_ref) {\n  var left = _ref.left,\n    right = _ref.right,\n    title = _ref.title,\n    description = _ref.description,\n    onPress = _ref.onPress,\n    themeOverrides = _ref.theme,\n    style = _ref.style,\n    titleStyle = _ref.titleStyle,\n    _ref$titleNumberOfLin = _ref.titleNumberOfLines,\n    titleNumberOfLines = _ref$titleNumberOfLin === void 0 ? 1 : _ref$titleNumberOfLin,\n    _ref$descriptionNumbe = _ref.descriptionNumberOfLines,\n    descriptionNumberOfLines = _ref$descriptionNumbe === void 0 ? 2 : _ref$descriptionNumbe,\n    titleEllipsizeMode = _ref.titleEllipsizeMode,\n    descriptionEllipsizeMode = _ref.descriptionEllipsizeMode,\n    descriptionStyle = _ref.descriptionStyle,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    alignToTop = _React$useState2[0],\n    setAlignToTop = _React$useState2[1];\n  var onDescriptionTextLayout = function onDescriptionTextLayout(event) {\n    if (!theme.isV3) {\n      return;\n    }\n    var nativeEvent = event.nativeEvent;\n    setAlignToTop(nativeEvent.lines.length >= 2);\n  };\n  var renderDescription = function renderDescription(descriptionColor, description) {\n    return typeof description === 'function' ? description({\n      selectable: false,\n      ellipsizeMode: descriptionEllipsizeMode,\n      color: descriptionColor,\n      fontSize: styles.description.fontSize\n    }) : React.createElement(Text, {\n      selectable: false,\n      numberOfLines: descriptionNumberOfLines,\n      ellipsizeMode: descriptionEllipsizeMode,\n      style: [styles.description, {\n        color: descriptionColor\n      }, descriptionStyle],\n      onTextLayout: onDescriptionTextLayout\n    }, description);\n  };\n  var renderTitle = function renderTitle() {\n    var titleColor = theme.isV3 ? theme.colors.onSurface : color(theme.colors.text).alpha(0.87).rgb().string();\n    return typeof title === 'function' ? title({\n      selectable: false,\n      ellipsizeMode: titleEllipsizeMode,\n      color: titleColor,\n      fontSize: styles.title.fontSize\n    }) : React.createElement(Text, {\n      selectable: false,\n      ellipsizeMode: titleEllipsizeMode,\n      numberOfLines: titleNumberOfLines,\n      style: [styles.title, {\n        color: titleColor\n      }, titleStyle]\n    }, title);\n  };\n  var descriptionColor = theme.isV3 ? theme.colors.onSurfaceVariant : color(theme.colors.text).alpha(0.54).rgb().string();\n  return React.createElement(TouchableRipple, _extends({}, rest, {\n    style: [theme.isV3 ? styles.containerV3 : styles.container, style],\n    onPress: onPress,\n    theme: theme\n  }), React.createElement(View, {\n    style: theme.isV3 ? styles.rowV3 : styles.row\n  }, left ? left({\n    color: descriptionColor,\n    style: getLeftStyles(alignToTop, description, theme.isV3)\n  }) : null, React.createElement(View, {\n    style: [theme.isV3 ? styles.itemV3 : styles.item, styles.content]\n  }, renderTitle(), description ? renderDescription(descriptionColor, description) : null), right ? right({\n    color: descriptionColor,\n    style: getRightStyles(alignToTop, description, theme.isV3)\n  }) : null));\n};\nListItem.displayName = 'List.Item';\nvar styles = StyleSheet.create({\n  container: {\n    padding: 8\n  },\n  containerV3: {\n    paddingVertical: 8,\n    paddingRight: 24\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  rowV3: {\n    flexDirection: 'row',\n    marginVertical: 6\n  },\n  title: {\n    fontSize: 16\n  },\n  description: {\n    fontSize: 14\n  },\n  item: {\n    marginVertical: 6,\n    paddingLeft: 8\n  },\n  itemV3: {\n    paddingLeft: 16\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center'\n  }\n});\nexport default ListItem;","map":{"version":3,"sources":["ListItem.tsx"],"names":["React","color","useInternalTheme","TouchableRipple","Text","getLeftStyles","getRightStyles","ListItem","left","right","title","description","onPress","theme","themeOverrides","style","titleStyle","titleNumberOfLines","descriptionNumberOfLines","titleEllipsizeMode","descriptionEllipsizeMode","descriptionStyle","rest","alignToTop","setAlignToTop","useState","onDescriptionTextLayout","event","isV3","nativeEvent","lines","length","renderDescription","descriptionColor","selectable","ellipsizeMode","fontSize","styles","renderTitle","titleColor","colors","onSurface","text","alpha","rgb","string","onSurfaceVariant","containerV3","container","rowV3","row","itemV3","item","content","displayName","StyleSheet","create","padding","paddingVertical","paddingRight","flexDirection","marginVertical","paddingLeft","flex","justifyContent"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport color from 'color';\nimport { useInternalTheme } from '../../core/theming';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport { getLeftStyles, getRightStyles } from './utils';\n/**\n * A component to show tiles inside a List.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/list-item-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/list-item-2.png\" />\n *   <img class=\"medium\" src=\"screenshots/list-item-3.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <List.Item\n *     title=\"First Item\"\n *     description=\"Item description\"\n *     left={props => <List.Icon {...props} icon=\"folder\" />}\n *   />\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/touchable-ripple.html\n */\nconst ListItem = _ref => {\n  let {\n    left,\n    right,\n    title,\n    description,\n    onPress,\n    theme: themeOverrides,\n    style,\n    titleStyle,\n    titleNumberOfLines = 1,\n    descriptionNumberOfLines = 2,\n    titleEllipsizeMode,\n    descriptionEllipsizeMode,\n    descriptionStyle,\n    ...rest\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const [alignToTop, setAlignToTop] = React.useState(false);\n  const onDescriptionTextLayout = event => {\n    if (!theme.isV3) {\n      return;\n    }\n    const {\n      nativeEvent\n    } = event;\n    setAlignToTop(nativeEvent.lines.length >= 2);\n  };\n  const renderDescription = (descriptionColor, description) => {\n    return typeof description === 'function' ? description({\n      selectable: false,\n      ellipsizeMode: descriptionEllipsizeMode,\n      color: descriptionColor,\n      fontSize: styles.description.fontSize\n    }) : /*#__PURE__*/React.createElement(Text, {\n      selectable: false,\n      numberOfLines: descriptionNumberOfLines,\n      ellipsizeMode: descriptionEllipsizeMode,\n      style: [styles.description, {\n        color: descriptionColor\n      }, descriptionStyle],\n      onTextLayout: onDescriptionTextLayout\n    }, description);\n  };\n  const renderTitle = () => {\n    const titleColor = theme.isV3 ? theme.colors.onSurface : color(theme.colors.text).alpha(0.87).rgb().string();\n    return typeof title === 'function' ? title({\n      selectable: false,\n      ellipsizeMode: titleEllipsizeMode,\n      color: titleColor,\n      fontSize: styles.title.fontSize\n    }) : /*#__PURE__*/React.createElement(Text, {\n      selectable: false,\n      ellipsizeMode: titleEllipsizeMode,\n      numberOfLines: titleNumberOfLines,\n      style: [styles.title, {\n        color: titleColor\n      }, titleStyle]\n    }, title);\n  };\n  const descriptionColor = theme.isV3 ? theme.colors.onSurfaceVariant : color(theme.colors.text).alpha(0.54).rgb().string();\n  return /*#__PURE__*/React.createElement(TouchableRipple, _extends({}, rest, {\n    style: [theme.isV3 ? styles.containerV3 : styles.container, style],\n    onPress: onPress,\n    theme: theme\n  }), /*#__PURE__*/React.createElement(View, {\n    style: theme.isV3 ? styles.rowV3 : styles.row\n  }, left ? left({\n    color: descriptionColor,\n    style: getLeftStyles(alignToTop, description, theme.isV3)\n  }) : null, /*#__PURE__*/React.createElement(View, {\n    style: [theme.isV3 ? styles.itemV3 : styles.item, styles.content]\n  }, renderTitle(), description ? renderDescription(descriptionColor, description) : null), right ? right({\n    color: descriptionColor,\n    style: getRightStyles(alignToTop, description, theme.isV3)\n  }) : null));\n};\nListItem.displayName = 'List.Item';\nconst styles = StyleSheet.create({\n  container: {\n    padding: 8\n  },\n  containerV3: {\n    paddingVertical: 8,\n    paddingRight: 24\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  rowV3: {\n    flexDirection: 'row',\n    marginVertical: 6\n  },\n  title: {\n    fontSize: 16\n  },\n  description: {\n    fontSize: 14\n  },\n  item: {\n    marginVertical: 6,\n    paddingLeft: 8\n  },\n  itemV3: {\n    paddingLeft: 16\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center'\n  }\n});\nexport default ListItem;\n//# sourceMappingURL=ListItem.js.map"]},"metadata":{},"sourceType":"module"}