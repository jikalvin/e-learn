{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect, useState } from 'react';\nimport { clearTokens, hasValidTokens } from \"../util/tokens\";\nimport { Profile } from \"../components/Profile\";\nimport ScreenOne from \"./auth/sn1\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Private = function Private(props) {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoggedIn = _useState2[0],\n    setLogin = _useState2[1];\n  useEffect(function () {\n    hasValidTokens().then(function (ht) {\n      return setLogin(ht);\n    });\n  }, []);\n  var onPress = function onPress() {\n    props.navigation.navigate('Register - Role');\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: isLoggedIn ? _jsxs(_Fragment, {\n      children: [_jsx(Profile, {}), _jsx(Button, {\n        title: \"Logout\",\n        onPress: function onPress() {\n          clearTokens();\n          setLogin(false);\n        }\n      })]\n    }) : _jsx(View, {\n      style: {\n        width: \"100%\",\n        flex: 1\n      },\n      children: _jsx(ScreenOne, {\n        setLoggedIn: setLogin,\n        onPress: onPress\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  centered: {\n    display: 'flex',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","clearTokens","hasValidTokens","Profile","ScreenOne","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Private","props","_useState","_useState2","_slicedToArray","isLoggedIn","setLogin","then","ht","onPress","navigation","navigate","View","style","styles","container","children","Button","title","width","flex","setLoggedIn","StyleSheet","create","backgroundColor","alignItems","justifyContent","centered","display","textAlign"],"sources":["C:/Users/HP/Downloads/E-Learn/auth-demo/reactnativeapp/screens/Private.tsx"],"sourcesContent":["import { Button, StyleSheet, Text, View } from 'react-native';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { clearTokens, hasValidTokens } from '../util/tokens';\r\n\r\nimport { Login } from '../components/Login';\r\nimport { Profile } from '../components/Profile';\r\nimport ScreenOne from './auth/sn1';\r\n\r\nexport const Private = (props) => {\r\n  const [isLoggedIn, setLogin] = useState(false);\r\n  useEffect(() => {\r\n    hasValidTokens().then((ht) => setLogin(ht));\r\n  }, []);\r\n\r\n  const onPress = () => {\r\n    props.navigation.navigate('Register - Role');\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {isLoggedIn ? (\r\n        <>\r\n          <Profile />\r\n          <Button\r\n            title=\"Logout\"\r\n            onPress={() => {\r\n              clearTokens();\r\n              setLogin(false);\r\n            }}\r\n          />\r\n        </>\r\n      ) : (\r\n        <View\r\n          style={{\r\n            width: \"100%\",\r\n            flex: 1,\r\n          }}\r\n        >\r\n          <ScreenOne \r\n            setLoggedIn={setLogin}\r\n            onPress={onPress}\r\n          />\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  centered: {\r\n    display: 'flex',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n"],"mappings":";;;;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,cAAc;AAGpC,SAASC,OAAO;AAChB,OAAOC,SAAS;AAAmB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEnC,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAIC,KAAK,EAAK;EAChC,IAAAC,SAAA,GAA+Bb,QAAQ,CAAC,KAAK,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,UAAU,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAC3Bf,SAAS,CAAC,YAAM;IACdG,cAAc,EAAE,CAACgB,IAAI,CAAC,UAACC,EAAE;MAAA,OAAKF,QAAQ,CAACE,EAAE,CAAC;IAAA,EAAC;EAC7C,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;IACpBR,KAAK,CAACS,UAAU,CAACC,QAAQ,CAAC,iBAAiB,CAAC;EAC9C,CAAC;EAED,OACEhB,IAAA,CAACiB,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC3BX,UAAU,GACTN,KAAA,CAAAF,SAAA;MAAAmB,QAAA,GACErB,IAAA,CAACH,OAAO,KAAG,EACXG,IAAA,CAACsB,MAAM;QACLC,KAAK,EAAC,QAAQ;QACdT,OAAO,EAAE,SAAAA,QAAA,EAAM;UACbnB,WAAW,EAAE;UACbgB,QAAQ,CAAC,KAAK,CAAC;QACjB;MAAE,EACF;IAAA,EACD,GAEHX,IAAA,CAACiB,IAAI;MACHC,KAAK,EAAE;QACLM,KAAK,EAAE,MAAM;QACbC,IAAI,EAAE;MACR,CAAE;MAAAJ,QAAA,EAEFrB,IAAA,CAACF,SAAS;QACR4B,WAAW,EAAEf,QAAS;QACtBG,OAAO,EAAEA;MAAQ;IACjB;EAEL,EACI;AAEX,CAAC;AAED,IAAMK,MAAM,GAAGQ,UAAU,CAACC,MAAM,CAAC;EAC/BR,SAAS,EAAE;IACTK,IAAI,EAAE,CAAC;IACPI,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EAEDC,QAAQ,EAAE;IACRC,OAAO,EAAE,MAAM;IACfC,SAAS,EAAE;EACb;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}