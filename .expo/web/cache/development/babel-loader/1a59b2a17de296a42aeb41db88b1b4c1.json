{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { AntDesign } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function PicSelect() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    hasGalleryPermission = _useState2[0],\n    setHasGalleryPermission = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    image = _useState4[0],\n    setImage = _useState4[1];\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      var galleryStatus = yield ImagePicker.requestMediaLibraryPermissionsAsync();\n      setHasGalleryPermission(galleryStatus.status === 'granted');\n    })();\n  }, []);\n  var pickImage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [1, 1],\n        quality: 1\n      });\n      console.log(result);\n      if (!result.cancelled) {\n        setImage(result.uri);\n      }\n    });\n    return function pickImage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  if (hasGalleryPermission === false) {\n    return _jsx(Text, {\n      children: \"No access to camera\"\n    });\n  }\n  return _jsx(View, {\n    style: {\n      justifyContent: 'center',\n      width: \"100%\",\n      alignItems: \"center\"\n    },\n    children: _jsx(AntDesign, {\n      name: \"camera\",\n      size: 50,\n      color: \"black\",\n      onPress: function onPress() {\n        return pickImage();\n      }\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","Text","View","Button","Image","ImagePicker","AntDesign","jsx","_jsx","PicSelect","_useState","_useState2","_slicedToArray","hasGalleryPermission","setHasGalleryPermission","_useState3","_useState4","image","setImage","_asyncToGenerator","galleryStatus","requestMediaLibraryPermissionsAsync","status","pickImage","_ref2","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","console","log","cancelled","uri","apply","arguments","children","style","justifyContent","width","alignItems","name","size","color","onPress"],"sources":["C:/Users/HP/Downloads/E-Learn/auth-demo/reactnativeapp/components/PicSelect.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Text, View, Button, Image} from 'react-native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport { AntDesign } from '@expo/vector-icons';\r\n\r\nexport default function PicSelect() {\r\n  const [hasGalleryPermission, setHasGalleryPermission] = useState(null);\r\n  const [image, setImage] = useState(null);\r\nuseEffect(() => {\r\n    (async () => {\r\nconst galleryStatus = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n      setHasGalleryPermission(galleryStatus.status === 'granted');\r\n})();\r\n  }, []);\r\nconst pickImage = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true,\r\n      aspect: [1, 1],\r\n      quality: 1,\r\n    });\r\nconsole.log(result);\r\nif (!result.cancelled) {\r\n      setImage(result.uri);\r\n    }\r\n  };\r\nif (hasGalleryPermission === false) {\r\n    return <Text>No access to camera</Text>;\r\n  }\r\n  return (\r\n    <View style={{ justifyContent:'center', width: \"100%\", alignItems:\"center\"}}>\r\n          {/* <Button title=\"Pick Image From Gallery\" onPress={() => pickImage()} /> */}\r\n          <AntDesign name=\"camera\" size={50} color=\"black\" onPress={() => pickImage()} />\r\n          {/* {image && <Image source={{uri: image}} style={{flex:1/2}}/>} */}\r\n    </View>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,KAAA;AAEnD,OAAO,KAAKC,WAAW,MAAM,mBAAmB;AAChD,SAASC,SAAS,QAAQ,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE/C,eAAe,SAASC,SAASA,CAAA,EAAG;EAClC,IAAAC,SAAA,GAAwDX,QAAQ,CAAC,IAAI,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/DG,oBAAoB,GAAAF,UAAA;IAAEG,uBAAuB,GAAAH,UAAA;EACpD,IAAAI,UAAA,GAA0BhB,QAAQ,CAAC,IAAI,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAjCE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACxBhB,SAAS,CAAC,YAAM;IACZmB,iBAAA,CAAC,aAAY;MACjB,IAAMC,aAAa,SAASf,WAAW,CAACgB,mCAAmC,EAAE;MACvEP,uBAAuB,CAACM,aAAa,CAACE,MAAM,KAAK,SAAS,CAAC;IACjE,CAAC,GAAG;EACF,CAAC,EAAE,EAAE,CAAC;EACR,IAAMC,SAAS;IAAA,IAAAC,KAAA,GAAAL,iBAAA,CAAG,aAAY;MAC1B,IAAIM,MAAM,SAASpB,WAAW,CAACqB,uBAAuB,CAAC;QACrDC,UAAU,EAAEtB,WAAW,CAACuB,gBAAgB,CAACC,MAAM;QAC/CC,aAAa,EAAE,IAAI;QACnBC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACdC,OAAO,EAAE;MACX,CAAC,CAAC;MACNC,OAAO,CAACC,GAAG,CAACT,MAAM,CAAC;MACnB,IAAI,CAACA,MAAM,CAACU,SAAS,EAAE;QACjBjB,QAAQ,CAACO,MAAM,CAACW,GAAG,CAAC;MACtB;IACF,CAAC;IAAA,gBAXGb,SAASA,CAAA;MAAA,OAAAC,KAAA,CAAAa,KAAA,OAAAC,SAAA;IAAA;EAAA,GAWZ;EACH,IAAIzB,oBAAoB,KAAK,KAAK,EAAE;IAChC,OAAOL,IAAA,CAACP,IAAI;MAAAsC,QAAA,EAAC;IAAmB,EAAO;EACzC;EACA,OACE/B,IAAA,CAACN,IAAI;IAACsC,KAAK,EAAE;MAAEC,cAAc,EAAC,QAAQ;MAAEC,KAAK,EAAE,MAAM;MAAEC,UAAU,EAAC;IAAQ,CAAE;IAAAJ,QAAA,EAEtE/B,IAAA,CAACF,SAAS;MAACsC,IAAI,EAAC,QAAQ;MAACC,IAAI,EAAE,EAAG;MAACC,KAAK,EAAC,OAAO;MAACC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMxB,SAAS,EAAE;MAAA;IAAC;EAAG,EAE9E;AAEX"},"metadata":{},"sourceType":"module"}