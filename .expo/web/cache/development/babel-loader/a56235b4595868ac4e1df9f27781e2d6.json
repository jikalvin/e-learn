{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"background\", \"borderless\", \"disabled\", \"rippleColor\", \"underlayColor\", \"children\", \"theme\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useInternalTheme } from \"../../core/theming\";\nimport { getTouchableRippleColors } from \"./utils\";\nvar TouchableRipple = function TouchableRipple(_ref) {\n  var style = _ref.style,\n    _background = _ref.background,\n    _ref$borderless = _ref.borderless,\n    borderless = _ref$borderless === void 0 ? false : _ref$borderless,\n    disabledProp = _ref.disabled,\n    rippleColor = _ref.rippleColor,\n    _underlayColor = _ref.underlayColor,\n    children = _ref.children,\n    themeOverrides = _ref.theme,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var handlePressIn = function handlePressIn(e) {\n    var _ref2;\n    var centered = rest.centered,\n      onPressIn = rest.onPressIn;\n    onPressIn === null || onPressIn === void 0 ? void 0 : onPressIn(e);\n    var _getTouchableRippleCo = getTouchableRippleColors({\n        theme: theme,\n        rippleColor: rippleColor\n      }),\n      calculatedRippleColor = _getTouchableRippleCo.calculatedRippleColor;\n    var button = e.currentTarget;\n    var style = window.getComputedStyle(button);\n    var dimensions = button.getBoundingClientRect();\n    var touchX;\n    var touchY;\n    var _e$nativeEvent = e.nativeEvent,\n      changedTouches = _e$nativeEvent.changedTouches,\n      touches = _e$nativeEvent.touches;\n    var touch = (_ref2 = touches === null || touches === void 0 ? void 0 : touches[0]) != null ? _ref2 : changedTouches === null || changedTouches === void 0 ? void 0 : changedTouches[0];\n    if (centered || !touch) {\n      touchX = dimensions.width / 2;\n      touchY = dimensions.height / 2;\n    } else {\n      var _touch$locationX, _touch$locationY;\n      touchX = (_touch$locationX = touch.locationX) != null ? _touch$locationX : e.pageX;\n      touchY = (_touch$locationY = touch.locationY) != null ? _touch$locationY : e.pageY;\n    }\n    var size = centered ? Math.min(dimensions.width, dimensions.height) * 1.25 : Math.max(dimensions.width, dimensions.height) * 2;\n    var container = document.createElement('span');\n    container.setAttribute('data-paper-ripple', '');\n    Object.assign(container.style, {\n      position: 'absolute',\n      pointerEvents: 'none',\n      top: '0',\n      left: '0',\n      right: '0',\n      bottom: '0',\n      borderTopLeftRadius: style.borderTopLeftRadius,\n      borderTopRightRadius: style.borderTopRightRadius,\n      borderBottomRightRadius: style.borderBottomRightRadius,\n      borderBottomLeftRadius: style.borderBottomLeftRadius,\n      overflow: centered ? 'visible' : 'hidden'\n    });\n    var ripple = document.createElement('span');\n    Object.assign(ripple.style, {\n      position: 'absolute',\n      pointerEvents: 'none',\n      backgroundColor: calculatedRippleColor,\n      borderRadius: '50%',\n      transitionProperty: 'transform opacity',\n      transitionDuration: Math.min(size * 1.5, 350) + \"ms\",\n      transitionTimingFunction: 'linear',\n      transformOrigin: 'center',\n      transform: 'translate3d(-50%, -50%, 0) scale3d(0.1, 0.1, 0.1)',\n      opacity: '0.5',\n      left: touchX + \"px\",\n      top: touchY + \"px\",\n      width: size + \"px\",\n      height: size + \"px\"\n    });\n    container.appendChild(ripple);\n    button.appendChild(container);\n    requestAnimationFrame(function () {\n      requestAnimationFrame(function () {\n        Object.assign(ripple.style, {\n          transform: 'translate3d(-50%, -50%, 0) scale3d(1, 1, 1)',\n          opacity: '1'\n        });\n      });\n    });\n  };\n  var handlePressOut = function handlePressOut(e) {\n    var _rest$onPressOut;\n    (_rest$onPressOut = rest.onPressOut) === null || _rest$onPressOut === void 0 ? void 0 : _rest$onPressOut.call(rest, e);\n    var containers = e.currentTarget.querySelectorAll('[data-paper-ripple]');\n    requestAnimationFrame(function () {\n      requestAnimationFrame(function () {\n        containers.forEach(function (container) {\n          var ripple = container.firstChild;\n          Object.assign(ripple.style, {\n            transitionDuration: '250ms',\n            opacity: 0\n          });\n          setTimeout(function () {\n            var parentNode = container.parentNode;\n            if (parentNode) {\n              parentNode.removeChild(container);\n            }\n          }, 500);\n        });\n      });\n    });\n  };\n  var disabled = disabledProp || !rest.onPress;\n  return React.createElement(Pressable, _extends({}, rest, {\n    onPressIn: handlePressIn,\n    onPressOut: handlePressOut,\n    disabled: disabled,\n    style: [styles.touchable, borderless && styles.borderless, style]\n  }), React.Children.only(children));\n};\nTouchableRipple.supported = true;\nvar styles = StyleSheet.create({\n  touchable: _objectSpread({\n    position: 'relative'\n  }, Platform.OS === 'web' && {\n    cursor: 'pointer'\n  }),\n  borderless: {\n    overflow: 'hidden'\n  }\n});\nexport default TouchableRipple;","map":{"version":3,"sources":["TouchableRipple.tsx"],"names":["React","useInternalTheme","getTouchableRippleColors","TouchableRipple","style","background","_background","borderless","disabled","disabledProp","rippleColor","underlayColor","_underlayColor","children","theme","themeOverrides","rest","handlePressIn","e","centered","onPressIn","calculatedRippleColor","button","currentTarget","window","getComputedStyle","dimensions","getBoundingClientRect","touchX","touchY","changedTouches","touches","nativeEvent","touch","width","height","locationX","pageX","locationY","pageY","size","Math","min","max","container","document","createElement","setAttribute","Object","assign","position","pointerEvents","top","left","right","bottom","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","overflow","ripple","backgroundColor","borderRadius","transitionProperty","transitionDuration","transitionTimingFunction","transformOrigin","transform","opacity","appendChild","requestAnimationFrame","handlePressOut","onPressOut","containers","querySelectorAll","forEach","firstChild","setTimeout","parentNode","removeChild","onPress","styles","touchable","Children","only","supported","StyleSheet","create","Platform","OS","cursor"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { Platform, Pressable, StyleSheet } from 'react-native';\nimport { useInternalTheme } from '../../core/theming';\nimport { getTouchableRippleColors } from './utils';\n/**\n * A wrapper for views that should respond to touches.\n * Provides a material \"ink ripple\" interaction effect for supported platforms (>= Android Lollipop).\n * On unsupported platforms, it falls back to a highlight effect.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/touchable-ripple.gif\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Text, TouchableRipple } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <TouchableRipple\n *     onPress={() => console.log('Pressed')}\n *     rippleColor=\"rgba(0, 0, 0, .32)\"\n *   >\n *     <Text>Press anywhere</Text>\n *   </TouchableRipple>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends Pressable props https://reactnative.dev/docs/Pressable#props\n */\nconst TouchableRipple = _ref => {\n  let {\n    style,\n    background: _background,\n    borderless = false,\n    disabled: disabledProp,\n    rippleColor,\n    underlayColor: _underlayColor,\n    children,\n    theme: themeOverrides,\n    ...rest\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const handlePressIn = e => {\n    const {\n      centered,\n      onPressIn\n    } = rest;\n    onPressIn === null || onPressIn === void 0 ? void 0 : onPressIn(e);\n    const {\n      calculatedRippleColor\n    } = getTouchableRippleColors({\n      theme,\n      rippleColor\n    });\n    const button = e.currentTarget;\n    const style = window.getComputedStyle(button);\n    const dimensions = button.getBoundingClientRect();\n    let touchX;\n    let touchY;\n    const {\n      changedTouches,\n      touches\n    } = e.nativeEvent;\n    const touch = (touches === null || touches === void 0 ? void 0 : touches[0]) ?? (changedTouches === null || changedTouches === void 0 ? void 0 : changedTouches[0]);\n\n    // If centered or it was pressed using keyboard - enter or space\n    if (centered || !touch) {\n      touchX = dimensions.width / 2;\n      touchY = dimensions.height / 2;\n    } else {\n      touchX = touch.locationX ?? e.pageX;\n      touchY = touch.locationY ?? e.pageY;\n    }\n\n    // Get the size of the button to determine how big the ripple should be\n    const size = centered ?\n    // If ripple is always centered, we don't need to make it too big\n    Math.min(dimensions.width, dimensions.height) * 1.25 :\n    // Otherwise make it twice as big so clicking on one end spreads ripple to other\n    Math.max(dimensions.width, dimensions.height) * 2;\n\n    // Create a container for our ripple effect so we don't need to change the parent's style\n    const container = document.createElement('span');\n    container.setAttribute('data-paper-ripple', '');\n    Object.assign(container.style, {\n      position: 'absolute',\n      pointerEvents: 'none',\n      top: '0',\n      left: '0',\n      right: '0',\n      bottom: '0',\n      borderTopLeftRadius: style.borderTopLeftRadius,\n      borderTopRightRadius: style.borderTopRightRadius,\n      borderBottomRightRadius: style.borderBottomRightRadius,\n      borderBottomLeftRadius: style.borderBottomLeftRadius,\n      overflow: centered ? 'visible' : 'hidden'\n    });\n\n    // Create span to show the ripple effect\n    const ripple = document.createElement('span');\n    Object.assign(ripple.style, {\n      position: 'absolute',\n      pointerEvents: 'none',\n      backgroundColor: calculatedRippleColor,\n      borderRadius: '50%',\n      /* Transition configuration */\n      transitionProperty: 'transform opacity',\n      transitionDuration: `${Math.min(size * 1.5, 350)}ms`,\n      transitionTimingFunction: 'linear',\n      transformOrigin: 'center',\n      /* We'll animate these properties */\n      transform: 'translate3d(-50%, -50%, 0) scale3d(0.1, 0.1, 0.1)',\n      opacity: '0.5',\n      // Position the ripple where cursor was\n      left: `${touchX}px`,\n      top: `${touchY}px`,\n      width: `${size}px`,\n      height: `${size}px`\n    });\n\n    // Finally, append it to DOM\n    container.appendChild(ripple);\n    button.appendChild(container);\n\n    // rAF runs in the same frame as the event handler\n    // Use double rAF to ensure the transition class is added in next frame\n    // This will make sure that the transition animation is triggered\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        Object.assign(ripple.style, {\n          transform: 'translate3d(-50%, -50%, 0) scale3d(1, 1, 1)',\n          opacity: '1'\n        });\n      });\n    });\n  };\n  const handlePressOut = e => {\n    var _rest$onPressOut;\n    (_rest$onPressOut = rest.onPressOut) === null || _rest$onPressOut === void 0 ? void 0 : _rest$onPressOut.call(rest, e);\n    const containers = e.currentTarget.querySelectorAll('[data-paper-ripple]');\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        containers.forEach(container => {\n          const ripple = container.firstChild;\n          Object.assign(ripple.style, {\n            transitionDuration: '250ms',\n            opacity: 0\n          });\n\n          // Finally remove the span after the transition\n          setTimeout(() => {\n            const {\n              parentNode\n            } = container;\n            if (parentNode) {\n              parentNode.removeChild(container);\n            }\n          }, 500);\n        });\n      });\n    });\n  };\n  const disabled = disabledProp || !rest.onPress;\n  return /*#__PURE__*/React.createElement(Pressable, _extends({}, rest, {\n    onPressIn: handlePressIn,\n    onPressOut: handlePressOut,\n    disabled: disabled,\n    style: [styles.touchable, borderless && styles.borderless, style]\n  }), React.Children.only(children));\n};\n\n/**\n * Whether ripple effect is supported.\n */\nTouchableRipple.supported = true;\nconst styles = StyleSheet.create({\n  touchable: {\n    position: 'relative',\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer'\n    })\n  },\n  borderless: {\n    overflow: 'hidden'\n  }\n});\nexport default TouchableRipple;\n//# sourceMappingURL=TouchableRipple.js.map"]},"metadata":{},"sourceType":"module"}