{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nexport default function useLayout() {\n  var _React$useState = React.useState({\n      height: 0,\n      width: 0,\n      measured: false\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    layout = _React$useState2[0],\n    setLayout = _React$useState2[1];\n  var onLayout = React.useCallback(function (e) {\n    var _e$nativeEvent$layout = e.nativeEvent.layout,\n      height = _e$nativeEvent$layout.height,\n      width = _e$nativeEvent$layout.width;\n    if (height === layout.height && width === layout.width) {\n      return;\n    }\n    setLayout({\n      height: height,\n      width: width,\n      measured: true\n    });\n  }, [layout.height, layout.width]);\n  return [layout, onLayout];\n}","map":{"version":3,"sources":["useLayout.tsx"],"names":["React","useLayout","layout","setLayout","useState","height","width","measured","onLayout","useCallback","e","nativeEvent"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAG9B,eAAe,SAASC,SAAS,CAAA,EAAG;EAClC,IAAA,eAAA,GAA4BD,KAAK,CAACI,QAAQ,CAIvC;MAAEC,MAAM,EAAE,CAAC;MAAEC,KAAK,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAM,CAAC,CAAC;IAAA,gBAAA,GAAA,cAAA,CAAA,eAAA;IAJrCL,MAAM,GAAA,gBAAA;IAAEC,SAAS,GAAA,gBAAA;EAMxB,IAAMK,QAAQ,GAAGR,KAAK,CAACS,WAAW,CAC/BC,UAAAA,CAAoB,EAAK;IACxB,IAAA,qBAAA,GAA0BA,CAAC,CAACC,WAAW,CAACT,MAAM;MAAtCG,MAAM,GAAA,qBAAA,CAANA,MAAM;MAAEC,KAAAA,GAAAA,qBAAAA,CAAAA,KAAAA;IAEhB,IAAID,MAAM,KAAKH,MAAM,CAACG,MAAM,IAAIC,KAAK,KAAKJ,MAAM,CAACI,KAAK,EAAE;MACtD;IACF;IAEAH,SAAS,CAAC;MACRE,MAAM,EAANA,MAAM;MACNC,KAAK,EAALA,KAAK;MACLC,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC,EACD,CAACL,MAAM,CAACG,MAAM,EAAEH,MAAM,CAACI,KAAK,CAAC,CAC9B;EAED,OAAO,CAACJ,MAAM,EAAEM,QAAQ,CAAC;AAC3B","sourceRoot":"../../src","sourcesContent":["import * as React from 'react';\nexport default function useLayout() {\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: 0,\n    measured: false\n  });\n  const onLayout = React.useCallback(e => {\n    const {\n      height,\n      width\n    } = e.nativeEvent.layout;\n    if (height === layout.height && width === layout.width) {\n      return;\n    }\n    setLayout({\n      height,\n      width,\n      measured: true\n    });\n  }, [layout.height, layout.width]);\n  return [layout, onLayout];\n}\n//# sourceMappingURL=useLayout.js.map"]},"metadata":{},"sourceType":"module"}