{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"icon\", \"label\", \"accessibilityLabel\", \"accessibilityState\", \"animated\", \"color\", \"disabled\", \"onPress\", \"onLongPress\", \"delayLongPress\", \"theme\", \"style\", \"visible\", \"uppercase\", \"loading\", \"testID\", \"size\", \"customSize\", \"mode\", \"variant\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useInternalTheme } from \"../../core/theming\";\nimport { forwardRef } from \"../../utils/forwardRef\";\nimport ActivityIndicator from \"../ActivityIndicator\";\nimport CrossFadeIcon from \"../CrossFadeIcon\";\nimport Icon from \"../Icon\";\nimport Surface from \"../Surface\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport Text from \"../Typography/Text\";\nimport { getExtendedFabStyle, getFABColors, getFabStyle } from \"./utils\";\nvar FAB = forwardRef(function (_ref, ref) {\n  var icon = _ref.icon,\n    label = _ref.label,\n    _ref$accessibilityLab = _ref.accessibilityLabel,\n    accessibilityLabel = _ref$accessibilityLab === void 0 ? label : _ref$accessibilityLab,\n    accessibilityState = _ref.accessibilityState,\n    _ref$animated = _ref.animated,\n    animated = _ref$animated === void 0 ? true : _ref$animated,\n    customColor = _ref.color,\n    disabled = _ref.disabled,\n    onPress = _ref.onPress,\n    onLongPress = _ref.onLongPress,\n    delayLongPress = _ref.delayLongPress,\n    themeOverrides = _ref.theme,\n    style = _ref.style,\n    _ref$visible = _ref.visible,\n    visible = _ref$visible === void 0 ? true : _ref$visible,\n    uppercaseProp = _ref.uppercase,\n    loading = _ref.loading,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? 'fab' : _ref$testID,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 'medium' : _ref$size,\n    customSize = _ref.customSize,\n    _ref$mode = _ref.mode,\n    mode = _ref$mode === void 0 ? 'elevated' : _ref$mode,\n    _ref$variant = _ref.variant,\n    variant = _ref$variant === void 0 ? 'primary' : _ref$variant,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var uppercase = uppercaseProp != null ? uppercaseProp : !theme.isV3;\n  var _React$useRef = React.useRef(new Animated.Value(visible ? 1 : 0)),\n    visibility = _React$useRef.current;\n  var isV3 = theme.isV3,\n    animation = theme.animation;\n  var scale = animation.scale;\n  React.useEffect(function () {\n    if (visible) {\n      Animated.timing(visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true\n      }).start();\n    } else {\n      Animated.timing(visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [visible, scale, visibility]);\n  var IconComponent = animated ? CrossFadeIcon : Icon;\n  var fabStyle = getFabStyle({\n    customSize: customSize,\n    size: size,\n    theme: theme\n  });\n  var _ref2 = StyleSheet.flatten(style) || {},\n    _ref2$borderRadius = _ref2.borderRadius,\n    borderRadius = _ref2$borderRadius === void 0 ? fabStyle.borderRadius : _ref2$borderRadius,\n    customBackgroundColor = _ref2.backgroundColor;\n  var _getFABColors = getFABColors({\n      theme: theme,\n      variant: variant,\n      disabled: disabled,\n      customColor: customColor,\n      customBackgroundColor: customBackgroundColor\n    }),\n    backgroundColor = _getFABColors.backgroundColor,\n    foregroundColor = _getFABColors.foregroundColor,\n    rippleColor = _getFABColors.rippleColor;\n  var isLargeSize = size === 'large';\n  var isFlatMode = mode === 'flat';\n  var iconSize = isLargeSize ? 36 : 24;\n  var loadingIndicatorSize = isLargeSize ? 24 : 18;\n  var font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n  var extendedStyle = getExtendedFabStyle({\n    customSize: customSize,\n    theme: theme\n  });\n  var textStyle = _objectSpread({\n    color: foregroundColor\n  }, font);\n  var md3Elevation = isFlatMode || disabled ? 0 : 3;\n  var newAccessibilityState = _objectSpread(_objectSpread({}, accessibilityState), {}, {\n    disabled: disabled\n  });\n  return React.createElement(Surface, _extends({\n    ref: ref\n  }, rest, {\n    style: [{\n      borderRadius: borderRadius,\n      backgroundColor: backgroundColor,\n      opacity: visibility,\n      transform: [{\n        scale: visibility\n      }]\n    }, styles.container, !isV3 && styles.elevated, !isV3 && disabled && styles.disabled, style],\n    pointerEvents: visible ? 'auto' : 'none',\n    testID: testID + \"-container\"\n  }, isV3 && {\n    elevation: md3Elevation\n  }), React.createElement(TouchableRipple, {\n    borderless: true,\n    onPress: onPress,\n    onLongPress: onLongPress,\n    delayLongPress: delayLongPress,\n    rippleColor: rippleColor,\n    disabled: disabled,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    accessibilityState: newAccessibilityState,\n    testID: testID\n  }, React.createElement(View, {\n    style: [styles.content, label ? extendedStyle : fabStyle],\n    testID: testID + \"-content\",\n    pointerEvents: \"none\"\n  }, icon && loading !== true ? React.createElement(IconComponent, {\n    source: icon,\n    size: customSize ? customSize / 2 : iconSize,\n    color: foregroundColor\n  }) : null, loading ? React.createElement(ActivityIndicator, {\n    size: customSize ? customSize / 2 : loadingIndicatorSize,\n    color: foregroundColor\n  }) : null, label ? React.createElement(Text, {\n    variant: \"labelLarge\",\n    selectable: false,\n    testID: testID + \"-text\",\n    style: [styles.label, uppercase && styles.uppercaseLabel, textStyle]\n  }, label) : null)));\n});\nvar styles = StyleSheet.create({\n  elevated: {\n    elevation: 6\n  },\n  container: {\n    overflow: 'hidden'\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  label: {\n    marginHorizontal: 8\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase'\n  },\n  disabled: {\n    elevation: 0\n  }\n});\nexport default FAB;\nexport { FAB };","map":{"version":3,"sources":["FAB.tsx"],"names":["React","useInternalTheme","forwardRef","ActivityIndicator","CrossFadeIcon","Icon","Surface","TouchableRipple","Text","getExtendedFabStyle","getFABColors","getFabStyle","FAB","icon","label","accessibilityLabel","accessibilityState","animated","color","customColor","disabled","onPress","onLongPress","delayLongPress","theme","themeOverrides","style","visible","uppercase","uppercaseProp","loading","testID","size","customSize","mode","variant","rest","ref","isV3","current","visibility","useRef","Animated","Value","animation","scale","useEffect","timing","toValue","duration","useNativeDriver","start","IconComponent","fabStyle","borderRadius","backgroundColor","customBackgroundColor","StyleSheet","flatten","foregroundColor","rippleColor","isLargeSize","isFlatMode","iconSize","loadingIndicatorSize","font","fonts","labelLarge","medium","extendedStyle","textStyle","md3Elevation","newAccessibilityState","opacity","transform","styles","container","elevated","elevation","content","uppercaseLabel","create","overflow","flexDirection","alignItems","justifyContent","marginHorizontal","textTransform"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport { useInternalTheme } from '../../core/theming';\nimport { forwardRef } from '../../utils/forwardRef';\nimport ActivityIndicator from '../ActivityIndicator';\nimport CrossFadeIcon from '../CrossFadeIcon';\nimport Icon from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport { getExtendedFabStyle, getFABColors, getFabStyle } from './utils';\n/**\n * A floating action button represents the primary action in an application.\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/fab-1.png\" />\n *   <img class=\"small\" src=\"screenshots/fab-2.png\" />\n *   <img class=\"small\" src=\"screenshots/fab-3.png\" />\n *   <img class=\"small\" src=\"screenshots/fab-4.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { FAB } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <FAB\n *     icon=\"plus\"\n *     style={styles.fab}\n *     onPress={() => console.log('Pressed')}\n *   />\n * );\n *\n * const styles = StyleSheet.create({\n *   fab: {\n *     position: 'absolute',\n *     margin: 16,\n *     right: 0,\n *     bottom: 0,\n *   },\n * })\n *\n * export default MyComponent;\n * ```\n */\nconst FAB = forwardRef((_ref, ref) => {\n  let {\n    icon,\n    label,\n    accessibilityLabel = label,\n    accessibilityState,\n    animated = true,\n    color: customColor,\n    disabled,\n    onPress,\n    onLongPress,\n    delayLongPress,\n    theme: themeOverrides,\n    style,\n    visible = true,\n    uppercase: uppercaseProp,\n    loading,\n    testID = 'fab',\n    size = 'medium',\n    customSize,\n    mode = 'elevated',\n    variant = 'primary',\n    ...rest\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const uppercase = uppercaseProp ?? !theme.isV3;\n  const {\n    current: visibility\n  } = React.useRef(new Animated.Value(visible ? 1 : 0));\n  const {\n    isV3,\n    animation\n  } = theme;\n  const {\n    scale\n  } = animation;\n  React.useEffect(() => {\n    if (visible) {\n      Animated.timing(visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true\n      }).start();\n    } else {\n      Animated.timing(visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [visible, scale, visibility]);\n  const IconComponent = animated ? CrossFadeIcon : Icon;\n  const fabStyle = getFabStyle({\n    customSize,\n    size,\n    theme\n  });\n  const {\n    borderRadius = fabStyle.borderRadius,\n    backgroundColor: customBackgroundColor\n  } = StyleSheet.flatten(style) || {};\n  const {\n    backgroundColor,\n    foregroundColor,\n    rippleColor\n  } = getFABColors({\n    theme,\n    variant,\n    disabled,\n    customColor,\n    customBackgroundColor\n  });\n  const isLargeSize = size === 'large';\n  const isFlatMode = mode === 'flat';\n  const iconSize = isLargeSize ? 36 : 24;\n  const loadingIndicatorSize = isLargeSize ? 24 : 18;\n  const font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n  const extendedStyle = getExtendedFabStyle({\n    customSize,\n    theme\n  });\n  const textStyle = {\n    color: foregroundColor,\n    ...font\n  };\n  const md3Elevation = isFlatMode || disabled ? 0 : 3;\n  const newAccessibilityState = {\n    ...accessibilityState,\n    disabled\n  };\n  return /*#__PURE__*/React.createElement(Surface, _extends({\n    ref: ref\n  }, rest, {\n    style: [{\n      borderRadius,\n      backgroundColor,\n      opacity: visibility,\n      transform: [{\n        scale: visibility\n      }]\n    }, styles.container, !isV3 && styles.elevated, !isV3 && disabled && styles.disabled, style],\n    pointerEvents: visible ? 'auto' : 'none',\n    testID: `${testID}-container`\n  }, isV3 && {\n    elevation: md3Elevation\n  }), /*#__PURE__*/React.createElement(TouchableRipple, {\n    borderless: true,\n    onPress: onPress,\n    onLongPress: onLongPress,\n    delayLongPress: delayLongPress,\n    rippleColor: rippleColor,\n    disabled: disabled,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    accessibilityState: newAccessibilityState,\n    testID: testID\n  }, /*#__PURE__*/React.createElement(View, {\n    style: [styles.content, label ? extendedStyle : fabStyle],\n    testID: `${testID}-content`,\n    pointerEvents: \"none\"\n  }, icon && loading !== true ? /*#__PURE__*/React.createElement(IconComponent, {\n    source: icon,\n    size: customSize ? customSize / 2 : iconSize,\n    color: foregroundColor\n  }) : null, loading ? /*#__PURE__*/React.createElement(ActivityIndicator, {\n    size: customSize ? customSize / 2 : loadingIndicatorSize,\n    color: foregroundColor\n  }) : null, label ? /*#__PURE__*/React.createElement(Text, {\n    variant: \"labelLarge\",\n    selectable: false,\n    testID: `${testID}-text`,\n    style: [styles.label, uppercase && styles.uppercaseLabel, textStyle]\n  }, label) : null)));\n});\nconst styles = StyleSheet.create({\n  elevated: {\n    elevation: 6\n  },\n  container: {\n    overflow: 'hidden'\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  label: {\n    marginHorizontal: 8\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase'\n  },\n  disabled: {\n    elevation: 0\n  }\n});\nexport default FAB;\n\n// @component-docs ignore-next-line\nexport { FAB };\n//# sourceMappingURL=FAB.js.map"]},"metadata":{},"sourceType":"module"}