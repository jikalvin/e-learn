{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"theme\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useInternalTheme } from \"../../core/theming\";\nimport RadioButtonAndroid from \"./RadioButtonAndroid\";\nimport RadioButtonIOS from \"./RadioButtonIOS\";\nvar RadioButton = function RadioButton(_ref) {\n  var themeOverrides = _ref.theme,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var Button = Platform.select({\n    default: RadioButtonAndroid,\n    ios: RadioButtonIOS\n  });\n  return React.createElement(Button, _extends({}, props, {\n    theme: theme\n  }));\n};\nexport default RadioButton;","map":{"version":3,"sources":["RadioButton.tsx"],"names":["React","useInternalTheme","RadioButtonAndroid","RadioButtonIOS","RadioButton","theme","themeOverrides","props","Button","Platform","select","default","ios"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAA,QAAA;AAG9B,SAASC,gBAAgB;AAEzB,OAAOC,kBAAkB;AACzB,OAAOC,cAAc;AAuFrB,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAG,IAAA,EAAgD;EAA/C,IAASE,cAAc,GAAmB,IAAA,CAAxCD,KAAK;IAAqBE,KAAAA,GAAAA,wBAAAA,CAAc,IAAA,EAAA,SAAA;EAC7D,IAAMF,KAAK,GAAGJ,gBAAgB,CAACK,cAAc,CAAC;EAE9C,IAAME,MAAM,GAAGC,QAAQ,CAACC,MAAM,CAAC;IAC7BC,OAAO,EAAET,kBAAkB;IAC3BU,GAAG,EAAET;EACP,CAAC,CAAC;EAEF,OAAO,KAAA,CAAA,aAAA,CAAC,MAAM,EAAA,QAAA,CAAA,CAAA,CAAA,EAAKI,KAAK,EAAA;IAAE,KAAK,EAAEF;EAAM,CAAA,CAAA,CAAG;AAC5C,CAAC;AAED,eAAeD,WAAW","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { Platform } from 'react-native';\nimport { useInternalTheme } from '../../core/theming';\nimport RadioButtonAndroid from './RadioButtonAndroid';\nimport RadioButtonIOS from './RadioButtonIOS';\n/**\n * Radio buttons allow the selection a single option from a set.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { RadioButton } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [checked, setChecked] = React.useState('first');\n *\n *   return (\n *     <View>\n *       <RadioButton\n *         value=\"first\"\n *         status={ checked === 'first' ? 'checked' : 'unchecked' }\n *         onPress={() => setChecked('first')}\n *       />\n *       <RadioButton\n *         value=\"second\"\n *         status={ checked === 'second' ? 'checked' : 'unchecked' }\n *         onPress={() => setChecked('second')}\n *       />\n *     </View>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst RadioButton = _ref => {\n  let {\n    theme: themeOverrides,\n    ...props\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const Button = Platform.select({\n    default: RadioButtonAndroid,\n    ios: RadioButtonIOS\n  });\n  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {\n    theme: theme\n  }));\n};\nexport default RadioButton;\n//# sourceMappingURL=RadioButton.js.map"]},"metadata":{},"sourceType":"module"}