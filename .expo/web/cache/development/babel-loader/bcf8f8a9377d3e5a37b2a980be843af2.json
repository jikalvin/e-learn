{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"size\", \"color\", \"icon\", \"disabled\", \"onPress\", \"accessibilityLabel\", \"isLeading\", \"theme\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport color from 'color';\nimport { useInternalTheme } from \"../../core/theming\";\nimport { black } from \"../../styles/themes/v2/colors\";\nimport { forwardRef } from \"../../utils/forwardRef\";\nimport IconButton from \"../IconButton/IconButton\";\nvar AppbarAction = forwardRef(function (_ref, ref) {\n  var _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 24 : _ref$size,\n    iconColor = _ref.color,\n    icon = _ref.icon,\n    disabled = _ref.disabled,\n    onPress = _ref.onPress,\n    accessibilityLabel = _ref.accessibilityLabel,\n    isLeading = _ref.isLeading,\n    themeOverrides = _ref.theme,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var actionIconColor = iconColor ? iconColor : theme.isV3 ? isLeading ? theme.colors.onSurface : theme.colors.onSurfaceVariant : color(black).alpha(0.54).rgb().string();\n  return React.createElement(IconButton, _extends({\n    size: size,\n    onPress: onPress,\n    iconColor: actionIconColor,\n    icon: icon,\n    disabled: disabled,\n    accessibilityLabel: accessibilityLabel,\n    animated: true,\n    ref: ref\n  }, rest));\n});\nAppbarAction.displayName = 'Appbar.Action';\nexport default AppbarAction;\nexport { AppbarAction };","map":{"version":3,"sources":["AppbarAction.tsx"],"names":["React","color","useInternalTheme","black","forwardRef","IconButton","AppbarAction","size","iconColor","icon","disabled","onPress","accessibilityLabel","isLeading","theme","themeOverrides","rest","ref","actionIconColor","isV3","colors","onSurface","onSurfaceVariant","alpha","rgb","string","displayName"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAG9B,OAAOC,KAAK,MAAM,OAAO;AAGzB,SAASC,gBAAgB;AACzB,SAASC,KAAK;AACd,SAASC,UAAU;AAEnB,OAAOC,UAAU;AAkEjB,IAAMC,YAAY,GAAGF,UAAU,CAC7B,UAAA,IAAA,EAYEa,GAAG,EACA;EAZH,IAAA,SAAA,GAUQ,IAAA,CATNV,IAAI;IAAJA,IAAI,GAAA,SAAA,cAAG,EAAE,GAAA,SAAA;IACFC,SAAS,GAQV,IAAA,CARNP,KAAK;IACLQ,IAAI,GAOE,IAAA,CAPNA,IAAI;IACJC,QAAQ,GAMF,IAAA,CANNA,QAAQ;IACRC,OAAO,GAKD,IAAA,CALNA,OAAO;IACPC,kBAAkB,GAIZ,IAAA,CAJNA,kBAAkB;IAClBC,SAAS,GAGH,IAAA,CAHNA,SAAS;IACFE,cAAc,GAEf,IAAA,CAFND,KAAK;IACFE,IAAAA,GAAAA,wBAAAA,CACG,IAAA,EAAA,SAAA;EAGR,IAAMF,KAAK,GAAGZ,gBAAgB,CAACa,cAAc,CAAC;EAE9C,IAAMG,eAAe,GAAGV,SAAS,GAC7BA,SAAS,GACTM,KAAK,CAACK,IAAI,GACVN,SAAS,GACPC,KAAK,CAACM,MAAM,CAACC,SAAS,GACtBP,KAAK,CAACM,MAAM,CAACE,gBAAgB,GAC/BrB,KAAK,CAACE,KAAK,CAAC,CAACoB,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,EAAE,CAACC,MAAM,EAAE;EAE3C,OACE,KAAA,CAAA,aAAA,CAAC,UAAU,EAAA,QAAA,CAAA;IACT,IAAI,EAAElB,IAAK;IACX,OAAO,EAAEI,OAAQ;IACjB,SAAS,EAAEO,eAAgB;IAC3B,IAAI,EAAET,IAAK;IACX,QAAQ,EAAEC,QAAS;IACnB,kBAAkB,EAAEE,kBAAmB;IACvC,QAAQ,EAAA,IAAA;IACR,GAAG,EAAEK;EAAI,CAAA,EACLD,IAAI,CAAA,CACR;AAEN,CAAC,CACF;AAEDV,YAAY,CAACoB,WAAW,GAAG,eAAe;AAE1C,eAAepB,YAAY;AAG3B,SAASA,YAAY","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport color from 'color';\nimport { useInternalTheme } from '../../core/theming';\nimport { black } from '../../styles/themes/v2/colors';\nimport { forwardRef } from '../../utils/forwardRef';\nimport IconButton from '../IconButton/IconButton';\n/**\n * A component used to display an action item in the appbar.\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/appbar-action-android.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n * import { Platform } from 'react-native';\n *\n * const MORE_ICON = Platform.OS === 'ios' ? 'dots-horizontal' : 'dots-vertical';\n *\n * const MyComponent = () => (\n *     <Appbar.Header>\n *        <Appbar.Content title=\"Title\" subtitle={'Subtitle'} />\n *         <Appbar.Action icon=\"magnify\" onPress={() => {}} />\n *         <Appbar.Action icon={MORE_ICON} onPress={() => {}} />\n *     </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst AppbarAction = forwardRef((_ref, ref) => {\n  let {\n    size = 24,\n    color: iconColor,\n    icon,\n    disabled,\n    onPress,\n    accessibilityLabel,\n    isLeading,\n    theme: themeOverrides,\n    ...rest\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const actionIconColor = iconColor ? iconColor : theme.isV3 ? isLeading ? theme.colors.onSurface : theme.colors.onSurfaceVariant : color(black).alpha(0.54).rgb().string();\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    size: size,\n    onPress: onPress,\n    iconColor: actionIconColor,\n    icon: icon,\n    disabled: disabled,\n    accessibilityLabel: accessibilityLabel,\n    animated: true,\n    ref: ref\n  }, rest));\n});\nAppbarAction.displayName = 'Appbar.Action';\nexport default AppbarAction;\n\n// @component-docs ignore-next-line\nexport { AppbarAction };\n//# sourceMappingURL=AppbarAction.js.map"]},"metadata":{},"sourceType":"module"}