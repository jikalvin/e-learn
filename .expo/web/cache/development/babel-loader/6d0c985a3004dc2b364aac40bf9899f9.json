{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"route\", \"style\", \"children\", \"borderless\", \"centered\", \"rippleColor\"],\n  _excluded2 = [\"component\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { useInternalTheme } from \"../../core/theming\";\nimport overlay from \"../../styles/overlay\";\nimport { black, white } from \"../../styles/themes/v2/colors\";\nimport useAnimatedValue from \"../../utils/useAnimatedValue\";\nimport useAnimatedValueArray from \"../../utils/useAnimatedValueArray\";\nimport useIsKeyboardShown from \"../../utils/useIsKeyboardShown\";\nimport useLayout from \"../../utils/useLayout\";\nimport Badge from \"../Badge\";\nimport Icon from \"../Icon\";\nimport Surface from \"../Surface\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport Text from \"../Typography/Text\";\nimport BottomNavigationRouteScreen from \"./BottomNavigationRouteScreen\";\nimport { getActiveTintColor, getInactiveTintColor, getLabelColor } from \"./utils\";\nvar MIN_RIPPLE_SCALE = 0.001;\nvar MIN_TAB_WIDTH = 96;\nvar MAX_TAB_WIDTH = 168;\nvar BAR_HEIGHT = 56;\nvar FAR_FAR_AWAY = Platform.OS === 'web' ? 0 : 9999;\nvar OUTLINE_WIDTH = 64;\nvar Touchable = function Touchable(_ref) {\n  var _0 = _ref.route,\n    style = _ref.style,\n    children = _ref.children,\n    borderless = _ref.borderless,\n    centered = _ref.centered,\n    rippleColor = _ref.rippleColor,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return TouchableRipple.supported ? React.createElement(TouchableRipple, _extends({}, rest, {\n    disabled: rest.disabled || undefined,\n    borderless: borderless,\n    centered: centered,\n    rippleColor: rippleColor,\n    style: style\n  }), children) : React.createElement(TouchableWithoutFeedback, rest, React.createElement(View, {\n    style: style\n  }, children));\n};\nvar SceneComponent = React.memo(function (_ref2) {\n  var component = _ref2.component,\n    rest = _objectWithoutProperties(_ref2, _excluded2);\n  return React.createElement(component, rest);\n});\nvar BottomNavigation = function BottomNavigation(_ref3) {\n  var _ref13, _ref14, _ref15;\n  var navigationState = _ref3.navigationState,\n    renderScene = _ref3.renderScene,\n    renderIcon = _ref3.renderIcon,\n    renderLabel = _ref3.renderLabel,\n    _ref3$renderTouchable = _ref3.renderTouchable,\n    renderTouchable = _ref3$renderTouchable === void 0 ? function (props) {\n      return React.createElement(Touchable, props);\n    } : _ref3$renderTouchable,\n    _ref3$getLabelText = _ref3.getLabelText,\n    getLabelText = _ref3$getLabelText === void 0 ? function (_ref4) {\n      var route = _ref4.route;\n      return route.title;\n    } : _ref3$getLabelText,\n    _ref3$getBadge = _ref3.getBadge,\n    getBadge = _ref3$getBadge === void 0 ? function (_ref5) {\n      var route = _ref5.route;\n      return route.badge;\n    } : _ref3$getBadge,\n    _ref3$getColor = _ref3.getColor,\n    getColor = _ref3$getColor === void 0 ? function (_ref6) {\n      var route = _ref6.route;\n      return route.color;\n    } : _ref3$getColor,\n    _ref3$getAccessibilit = _ref3.getAccessibilityLabel,\n    getAccessibilityLabel = _ref3$getAccessibilit === void 0 ? function (_ref7) {\n      var route = _ref7.route;\n      return route.accessibilityLabel;\n    } : _ref3$getAccessibilit,\n    _ref3$getTestID = _ref3.getTestID,\n    getTestID = _ref3$getTestID === void 0 ? function (_ref8) {\n      var route = _ref8.route;\n      return route.testID;\n    } : _ref3$getTestID,\n    activeColor = _ref3.activeColor,\n    inactiveColor = _ref3.inactiveColor,\n    _ref3$keyboardHidesNa = _ref3.keyboardHidesNavigationBar,\n    keyboardHidesNavigationBar = _ref3$keyboardHidesNa === void 0 ? Platform.OS === 'android' : _ref3$keyboardHidesNa,\n    barStyle = _ref3.barStyle,\n    _ref3$labeled = _ref3.labeled,\n    labeled = _ref3$labeled === void 0 ? true : _ref3$labeled,\n    style = _ref3.style,\n    _ref3$sceneAnimationE = _ref3.sceneAnimationEnabled,\n    sceneAnimationEnabled = _ref3$sceneAnimationE === void 0 ? false : _ref3$sceneAnimationE,\n    _ref3$sceneAnimationT = _ref3.sceneAnimationType,\n    sceneAnimationType = _ref3$sceneAnimationT === void 0 ? 'opacity' : _ref3$sceneAnimationT,\n    sceneAnimationEasing = _ref3.sceneAnimationEasing,\n    onTabPress = _ref3.onTabPress,\n    onIndexChange = _ref3.onIndexChange,\n    shiftingProp = _ref3.shifting,\n    safeAreaInsets = _ref3.safeAreaInsets,\n    _ref3$labelMaxFontSiz = _ref3.labelMaxFontSizeMultiplier,\n    labelMaxFontSizeMultiplier = _ref3$labelMaxFontSiz === void 0 ? 1 : _ref3$labelMaxFontSiz,\n    compactProp = _ref3.compact,\n    _ref3$testID = _ref3.testID,\n    testID = _ref3$testID === void 0 ? 'bottom-navigation' : _ref3$testID,\n    themeOverrides = _ref3.theme,\n    _ref3$getLazy = _ref3.getLazy,\n    getLazy = _ref3$getLazy === void 0 ? function (_ref9) {\n      var route = _ref9.route;\n      return route.lazy;\n    } : _ref3$getLazy;\n  var theme = useInternalTheme(themeOverrides);\n  var _useSafeAreaInsets = useSafeAreaInsets(),\n    bottom = _useSafeAreaInsets.bottom,\n    left = _useSafeAreaInsets.left,\n    right = _useSafeAreaInsets.right;\n  var scale = theme.animation.scale;\n  var compact = compactProp != null ? compactProp : !theme.isV3;\n  var shifting = shiftingProp != null ? shiftingProp : theme.isV3 ? false : navigationState.routes.length > 3;\n  if (shifting && navigationState.routes.length < 2) {\n    shifting = false;\n    console.warn('BottomNavigation needs at least 2 tabs to run shifting animation');\n  }\n  var focusedKey = navigationState.routes[navigationState.index].key;\n  var visibleAnim = useAnimatedValue(1);\n  var tabsAnims = useAnimatedValueArray(navigationState.routes.map(function (_, i) {\n    return i === navigationState.index ? 1 : 0;\n  }));\n  var tabsPositionAnims = useAnimatedValueArray(navigationState.routes.map(function (_, i) {\n    return i === navigationState.index ? 0 : i >= navigationState.index ? 1 : -1;\n  }));\n  var offsetsAnims = useAnimatedValueArray(navigationState.routes.map(function (_, i) {\n    return i === navigationState.index ? 0 : 1;\n  }));\n  var indexAnim = useAnimatedValue(navigationState.index);\n  var rippleAnim = useAnimatedValue(MIN_RIPPLE_SCALE);\n  var _useLayout = useLayout(),\n    _useLayout2 = _slicedToArray(_useLayout, 2),\n    layout = _useLayout2[0],\n    onLayout = _useLayout2[1];\n  var _React$useState = React.useState([focusedKey]),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    loaded = _React$useState2[0],\n    setLoaded = _React$useState2[1];\n  if (!loaded.includes(focusedKey)) {\n    setLoaded(function (loaded) {\n      return [].concat(_toConsumableArray(loaded), [focusedKey]);\n    });\n  }\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    keyboardVisible = _React$useState4[0],\n    setKeyboardVisible = _React$useState4[1];\n  var handleKeyboardShow = React.useCallback(function () {\n    setKeyboardVisible(true);\n    Animated.timing(visibleAnim, {\n      toValue: 0,\n      duration: 150 * scale,\n      useNativeDriver: true\n    }).start();\n  }, [scale, visibleAnim]);\n  var handleKeyboardHide = React.useCallback(function () {\n    Animated.timing(visibleAnim, {\n      toValue: 1,\n      duration: 100 * scale,\n      useNativeDriver: true\n    }).start(function () {\n      setKeyboardVisible(false);\n    });\n  }, [scale, visibleAnim]);\n  var animateToIndex = React.useCallback(function (index) {\n    rippleAnim.setValue(MIN_RIPPLE_SCALE);\n    Animated.parallel([Animated.timing(rippleAnim, {\n      toValue: 1,\n      duration: theme.isV3 || shifting ? 400 * scale : 0,\n      useNativeDriver: true\n    })].concat(_toConsumableArray(navigationState.routes.map(function (_, i) {\n      return Animated.timing(tabsAnims[i], {\n        toValue: i === index ? 1 : 0,\n        duration: theme.isV3 || shifting ? 150 * scale : 0,\n        useNativeDriver: true,\n        easing: sceneAnimationEasing\n      });\n    })), _toConsumableArray(navigationState.routes.map(function (_, i) {\n      return Animated.timing(tabsPositionAnims[i], {\n        toValue: i === index ? 0 : i >= index ? 1 : -1,\n        duration: theme.isV3 || shifting ? 150 * scale : 0,\n        useNativeDriver: true,\n        easing: sceneAnimationEasing\n      });\n    })))).start(function (_ref10) {\n      var finished = _ref10.finished;\n      tabsAnims.map(function (tab, i) {\n        return tab.setValue(i === index ? 1 : 0);\n      });\n      indexAnim.setValue(index);\n      rippleAnim.setValue(MIN_RIPPLE_SCALE);\n      if (finished) {\n        offsetsAnims.forEach(function (offset, i) {\n          if (i === index) {\n            offset.setValue(0);\n          } else {\n            offset.setValue(1);\n          }\n        });\n      }\n    });\n  }, [indexAnim, shifting, navigationState.routes, offsetsAnims, rippleAnim, scale, tabsAnims, tabsPositionAnims, sceneAnimationEasing, theme]);\n  React.useEffect(function () {\n    animateToIndex(navigationState.index);\n  }, []);\n  useIsKeyboardShown({\n    onShow: handleKeyboardShow,\n    onHide: handleKeyboardHide\n  });\n  var prevNavigationState = React.useRef();\n  React.useEffect(function () {\n    offsetsAnims.forEach(function (offset, i) {\n      var _prevNavigationState$;\n      if (i === navigationState.index || i === ((_prevNavigationState$ = prevNavigationState.current) === null || _prevNavigationState$ === void 0 ? void 0 : _prevNavigationState$.index)) {\n        offset.setValue(0);\n      }\n    });\n    animateToIndex(navigationState.index);\n  }, [navigationState.index, animateToIndex, offsetsAnims]);\n  var handleTabPress = function handleTabPress(index) {\n    var event = {\n      route: navigationState.routes[index],\n      defaultPrevented: false,\n      preventDefault: function preventDefault() {\n        event.defaultPrevented = true;\n      }\n    };\n    onTabPress === null || onTabPress === void 0 ? void 0 : onTabPress(event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    if (index !== navigationState.index) {\n      prevNavigationState.current = navigationState;\n      onIndexChange(index);\n    }\n  };\n  var jumpTo = React.useCallback(function (key) {\n    var index = navigationState.routes.findIndex(function (route) {\n      return route.key === key;\n    });\n    prevNavigationState.current = navigationState;\n    onIndexChange(index);\n  }, [navigationState.routes, onIndexChange]);\n  var routes = navigationState.routes;\n  var colors = theme.colors,\n    isDarkTheme = theme.dark,\n    mode = theme.mode,\n    isV3 = theme.isV3;\n  var _ref12 = StyleSheet.flatten(barStyle) || {},\n    customBackground = _ref12.backgroundColor,\n    _ref12$elevation = _ref12.elevation,\n    elevation = _ref12$elevation === void 0 ? 4 : _ref12$elevation;\n  var approxBackgroundColor = customBackground ? customBackground : isDarkTheme && mode === 'adaptive' ? overlay(elevation, colors === null || colors === void 0 ? void 0 : colors.surface) : colors === null || colors === void 0 ? void 0 : colors.primary;\n  var v2BackgroundColorInterpolation = shifting ? indexAnim.interpolate({\n    inputRange: routes.map(function (_, i) {\n      return i;\n    }),\n    outputRange: routes.map(function (route) {\n      return getColor({\n        route: route\n      }) || approxBackgroundColor;\n    })\n  }) : approxBackgroundColor;\n  var backgroundColor = isV3 ? customBackground || theme.colors.elevation.level2 : shifting ? v2BackgroundColorInterpolation : approxBackgroundColor;\n  var isDark = typeof approxBackgroundColor === 'string' ? !color(approxBackgroundColor).isLight() : true;\n  var textColor = isDark ? white : black;\n  var activeTintColor = getActiveTintColor({\n    activeColor: activeColor,\n    defaultColor: textColor,\n    theme: theme\n  });\n  var inactiveTintColor = getInactiveTintColor({\n    inactiveColor: inactiveColor,\n    defaultColor: textColor,\n    theme: theme\n  });\n  var touchColor = color(activeTintColor).alpha(0.12).rgb().string();\n  var maxTabWidth = routes.length > 3 ? MIN_TAB_WIDTH : MAX_TAB_WIDTH;\n  var maxTabBarWidth = maxTabWidth * routes.length;\n  var tabBarWidth = Math.min(layout.width, maxTabBarWidth);\n  var tabWidth = tabBarWidth / routes.length;\n  var rippleSize = layout.width / 4;\n  var insets = {\n    left: (_ref13 = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.left) != null ? _ref13 : left,\n    right: (_ref14 = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.right) != null ? _ref14 : right,\n    bottom: (_ref15 = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.bottom) != null ? _ref15 : bottom\n  };\n  return React.createElement(View, {\n    style: [styles.container, style],\n    testID: testID\n  }, React.createElement(View, {\n    style: [styles.content, {\n      backgroundColor: colors === null || colors === void 0 ? void 0 : colors.background\n    }]\n  }, routes.map(function (route, index) {\n    var _prevNavigationState$2;\n    if (getLazy({\n      route: route\n    }) !== false && !loaded.includes(route.key)) {\n      return null;\n    }\n    var focused = navigationState.index === index;\n    var previouslyFocused = ((_prevNavigationState$2 = prevNavigationState.current) === null || _prevNavigationState$2 === void 0 ? void 0 : _prevNavigationState$2.index) === index;\n    var countAlphaOffscreen = sceneAnimationEnabled && (focused || previouslyFocused);\n    var renderToHardwareTextureAndroid = sceneAnimationEnabled && focused;\n    var opacity = sceneAnimationEnabled ? tabsPositionAnims[index].interpolate({\n      inputRange: [-1, 0, 1],\n      outputRange: [0, 1, 0]\n    }) : focused ? 1 : 0;\n    var top = sceneAnimationEnabled ? offsetsAnims[index].interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, FAR_FAR_AWAY]\n    }) : focused ? 0 : FAR_FAR_AWAY;\n    var left = sceneAnimationType === 'shifting' ? tabsPositionAnims[index].interpolate({\n      inputRange: [-1, 0, 1],\n      outputRange: [-50, 0, 50]\n    }) : 0;\n    var zIndex = focused ? 1 : 0;\n    return React.createElement(BottomNavigationRouteScreen, {\n      key: route.key,\n      pointerEvents: focused ? 'auto' : 'none',\n      accessibilityElementsHidden: !focused,\n      importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',\n      index: index,\n      visibility: opacity,\n      style: [StyleSheet.absoluteFill, {\n        zIndex: zIndex\n      }],\n      collapsable: false,\n      removeClippedSubviews: Platform.OS === 'ios' ? navigationState.index !== index : true\n    }, React.createElement(Animated.View, _extends({}, Platform.OS === 'android' && {\n      needsOffscreenAlphaCompositing: countAlphaOffscreen\n    }, {\n      renderToHardwareTextureAndroid: renderToHardwareTextureAndroid,\n      style: [styles.content, {\n        opacity: opacity,\n        transform: [{\n          translateX: left\n        }, {\n          translateY: top\n        }]\n      }]\n    }), renderScene({\n      route: route,\n      jumpTo: jumpTo\n    })));\n  })), React.createElement(Surface, _extends({}, theme.isV3 && {\n    elevation: 0\n  }, {\n    testID: testID + \"-surface\",\n    style: [!theme.isV3 && styles.elevation, styles.bar, keyboardHidesNavigationBar ? {\n      transform: [{\n        translateY: visibleAnim.interpolate({\n          inputRange: [0, 1],\n          outputRange: [layout.height, 0]\n        })\n      }],\n      position: keyboardVisible ? 'absolute' : undefined\n    } : null, barStyle],\n    pointerEvents: layout.measured ? keyboardHidesNavigationBar && keyboardVisible ? 'none' : 'auto' : 'none',\n    onLayout: onLayout\n  }), React.createElement(Animated.View, {\n    style: [styles.barContent, {\n      backgroundColor: backgroundColor\n    }],\n    testID: testID + \"-bar-content\"\n  }, React.createElement(View, {\n    style: [styles.items, {\n      marginBottom: insets.bottom,\n      marginHorizontal: Math.max(insets.left, insets.right)\n    }, compact && {\n      maxWidth: maxTabBarWidth\n    }],\n    accessibilityRole: 'tablist',\n    testID: testID + \"-bar-content-wrapper\"\n  }, shifting ? React.createElement(Animated.View, {\n    pointerEvents: \"none\",\n    style: [styles.ripple, {\n      top: (BAR_HEIGHT - rippleSize) / 2,\n      left: tabWidth * (navigationState.index + 0.5) - rippleSize / 2,\n      height: rippleSize,\n      width: rippleSize,\n      borderRadius: rippleSize / 2,\n      backgroundColor: getColor({\n        route: routes[navigationState.index]\n      }),\n      transform: [{\n        scale: rippleAnim.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 8]\n        })\n      }],\n      opacity: rippleAnim.interpolate({\n        inputRange: [0, MIN_RIPPLE_SCALE, 0.3, 1],\n        outputRange: [0, 0, 1, 1]\n      })\n    }],\n    testID: testID + \"-bar-content-ripple\"\n  }) : null, routes.map(function (route, index) {\n    var focused = navigationState.index === index;\n    var active = tabsAnims[index];\n    var scale = labeled && shifting ? active.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.5, 1]\n    }) : 1;\n    var translateY = labeled ? shifting ? active.interpolate({\n      inputRange: [0, 1],\n      outputRange: [7, 0]\n    }) : 0 : 7;\n    var activeOpacity = active;\n    var inactiveOpacity = active.interpolate({\n      inputRange: [0, 1],\n      outputRange: [1, 0]\n    });\n    var v3ActiveOpacity = focused ? 1 : 0;\n    var v3InactiveOpacity = shifting ? inactiveOpacity : focused ? 0 : 1;\n    var outlineScale = focused ? active.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.5, 1]\n    }) : 0;\n    var badge = getBadge({\n      route: route\n    });\n    var activeLabelColor = getLabelColor({\n      tintColor: activeTintColor,\n      hasColor: Boolean(activeColor),\n      focused: focused,\n      defaultColor: textColor,\n      theme: theme\n    });\n    var inactiveLabelColor = getLabelColor({\n      tintColor: inactiveTintColor,\n      hasColor: Boolean(inactiveColor),\n      focused: focused,\n      defaultColor: textColor,\n      theme: theme\n    });\n    var badgeStyle = {\n      top: !isV3 ? -2 : typeof badge === 'boolean' ? 4 : 2,\n      right: (badge != null && typeof badge !== 'boolean' ? String(badge).length * -2 : 0) - (!isV3 ? 2 : 0)\n    };\n    var isV3Shifting = isV3 && shifting && labeled;\n    var font = isV3 ? theme.fonts.labelMedium : {};\n    return renderTouchable({\n      key: route.key,\n      route: route,\n      borderless: true,\n      centered: true,\n      rippleColor: isV3 ? 'transparent' : touchColor,\n      onPress: function onPress() {\n        return handleTabPress(index);\n      },\n      testID: getTestID({\n        route: route\n      }),\n      accessibilityLabel: getAccessibilityLabel({\n        route: route\n      }),\n      accessibilityRole: Platform.OS === 'ios' ? 'button' : 'tab',\n      accessibilityState: {\n        selected: focused\n      },\n      style: [styles.item, isV3 && styles.v3Item],\n      children: React.createElement(View, {\n        pointerEvents: \"none\",\n        style: isV3 && (labeled ? styles.v3TouchableContainer : styles.v3NoLabelContainer)\n      }, React.createElement(Animated.View, {\n        style: [styles.iconContainer, isV3 && styles.v3IconContainer, (!isV3 || isV3Shifting) && {\n          transform: [{\n            translateY: translateY\n          }]\n        }]\n      }, isV3 && focused && React.createElement(Animated.View, {\n        style: [styles.outline, {\n          transform: [{\n            scaleX: outlineScale\n          }],\n          backgroundColor: theme.colors.secondaryContainer\n        }]\n      }), React.createElement(Animated.View, {\n        style: [styles.iconWrapper, isV3 && styles.v3IconWrapper, {\n          opacity: isV3 ? v3ActiveOpacity : activeOpacity\n        }]\n      }, renderIcon ? renderIcon({\n        route: route,\n        focused: true,\n        color: activeTintColor\n      }) : React.createElement(Icon, {\n        source: route.focusedIcon,\n        color: activeTintColor,\n        size: 24\n      })), React.createElement(Animated.View, {\n        style: [styles.iconWrapper, isV3 && styles.v3IconWrapper, {\n          opacity: isV3 ? v3InactiveOpacity : inactiveOpacity\n        }]\n      }, renderIcon ? renderIcon({\n        route: route,\n        focused: false,\n        color: inactiveTintColor\n      }) : React.createElement(Icon, {\n        source: theme.isV3 && route.unfocusedIcon !== undefined ? route.unfocusedIcon : route.focusedIcon,\n        color: inactiveTintColor,\n        size: 24\n      })), React.createElement(View, {\n        style: [styles.badgeContainer, badgeStyle]\n      }, typeof badge === 'boolean' ? React.createElement(Badge, {\n        visible: badge,\n        size: isV3 ? 6 : 8\n      }) : React.createElement(Badge, {\n        visible: badge != null,\n        size: 16\n      }, badge))), labeled ? React.createElement(Animated.View, {\n        style: [styles.labelContainer, !isV3 && {\n          transform: [{\n            scale: scale\n          }]\n        }]\n      }, React.createElement(Animated.View, {\n        style: [styles.labelWrapper, (!isV3 || isV3Shifting) && {\n          opacity: activeOpacity\n        }]\n      }, renderLabel ? renderLabel({\n        route: route,\n        focused: true,\n        color: activeLabelColor\n      }) : React.createElement(Text, {\n        maxFontSizeMultiplier: labelMaxFontSizeMultiplier,\n        variant: \"labelMedium\",\n        style: [styles.label, _objectSpread({\n          color: activeLabelColor\n        }, font)]\n      }, getLabelText({\n        route: route\n      }))), shifting ? null : React.createElement(Animated.View, {\n        style: [styles.labelWrapper, {\n          opacity: inactiveOpacity\n        }]\n      }, renderLabel ? renderLabel({\n        route: route,\n        focused: false,\n        color: inactiveLabelColor\n      }) : React.createElement(Text, {\n        maxFontSizeMultiplier: labelMaxFontSizeMultiplier,\n        variant: \"labelMedium\",\n        selectable: false,\n        style: [styles.label, _objectSpread({\n          color: inactiveLabelColor\n        }, font)]\n      }, getLabelText({\n        route: route\n      })))) : !isV3 && React.createElement(View, {\n        style: styles.labelContainer\n      }))\n    });\n  })))));\n};\nBottomNavigation.SceneMap = function (scenes) {\n  return function (_ref11) {\n    var route = _ref11.route,\n      jumpTo = _ref11.jumpTo;\n    return React.createElement(SceneComponent, {\n      key: route.key,\n      component: scenes[route.key ? route.key : ''],\n      route: route,\n      jumpTo: jumpTo\n    });\n  };\n};\nexport default BottomNavigation;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  content: {\n    flex: 1\n  },\n  bar: {\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  barContent: {\n    alignItems: 'center',\n    overflow: 'hidden'\n  },\n  items: _objectSpread({\n    flexDirection: 'row'\n  }, Platform.OS === 'web' ? {\n    width: '100%'\n  } : null),\n  item: {\n    flex: 1,\n    paddingVertical: 6\n  },\n  v3Item: {\n    paddingVertical: 0\n  },\n  ripple: {\n    position: 'absolute'\n  },\n  iconContainer: {\n    height: 24,\n    width: 24,\n    marginTop: 2,\n    marginHorizontal: 12,\n    alignSelf: 'center'\n  },\n  v3IconContainer: {\n    height: 32,\n    width: 32,\n    marginBottom: 4,\n    marginTop: 0,\n    justifyContent: 'center'\n  },\n  iconWrapper: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    alignItems: 'center'\n  }),\n  v3IconWrapper: {\n    top: 4\n  },\n  labelContainer: {\n    height: 16,\n    paddingBottom: 2\n  },\n  labelWrapper: _objectSpread({}, StyleSheet.absoluteFillObject),\n  label: _objectSpread({\n    fontSize: 12,\n    height: BAR_HEIGHT,\n    textAlign: 'center',\n    backgroundColor: 'transparent'\n  }, Platform.OS === 'web' ? {\n    whiteSpace: 'nowrap',\n    alignSelf: 'center'\n  } : null),\n  badgeContainer: {\n    position: 'absolute',\n    left: 0\n  },\n  v3TouchableContainer: {\n    paddingTop: 12,\n    paddingBottom: 16\n  },\n  v3NoLabelContainer: {\n    height: 80,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  outline: {\n    width: OUTLINE_WIDTH,\n    height: OUTLINE_WIDTH / 2,\n    borderRadius: OUTLINE_WIDTH / 4,\n    alignSelf: 'center'\n  },\n  elevation: {\n    elevation: 4\n  }\n});","map":{"version":3,"sources":["BottomNavigation.tsx"],"names":["React","color","useSafeAreaInsets","useInternalTheme","overlay","black","white","useAnimatedValue","useAnimatedValueArray","useIsKeyboardShown","useLayout","Badge","Icon","Surface","TouchableRipple","Text","BottomNavigationRouteScreen","getActiveTintColor","getInactiveTintColor","getLabelColor","MIN_RIPPLE_SCALE","MIN_TAB_WIDTH","MAX_TAB_WIDTH","BAR_HEIGHT","FAR_FAR_AWAY","Platform","OS","OUTLINE_WIDTH","Touchable","route","_0","style","children","borderless","centered","rippleColor","rest","supported","disabled","undefined","SceneComponent","memo","component","createElement","BottomNavigation","navigationState","renderScene","renderIcon","renderLabel","renderTouchable","props","getLabelText","title","getBadge","badge","getColor","getAccessibilityLabel","accessibilityLabel","getTestID","testID","activeColor","inactiveColor","keyboardHidesNavigationBar","barStyle","labeled","sceneAnimationEnabled","sceneAnimationType","sceneAnimationEasing","onTabPress","onIndexChange","shifting","shiftingProp","safeAreaInsets","labelMaxFontSizeMultiplier","compact","compactProp","theme","themeOverrides","getLazy","lazy","bottom","left","right","scale","animation","isV3","routes","length","console","warn","focusedKey","index","key","visibleAnim","tabsAnims","map","_","i","tabsPositionAnims","offsetsAnims","indexAnim","rippleAnim","layout","onLayout","loaded","setLoaded","useState","includes","keyboardVisible","setKeyboardVisible","handleKeyboardShow","useCallback","Animated","timing","toValue","duration","useNativeDriver","start","handleKeyboardHide","animateToIndex","setValue","parallel","easing","finished","tab","forEach","offset","useEffect","onShow","onHide","prevNavigationState","useRef","current","handleTabPress","event","defaultPrevented","preventDefault","jumpTo","findIndex","colors","dark","isDarkTheme","mode","backgroundColor","customBackground","elevation","StyleSheet","flatten","approxBackgroundColor","surface","primary","v2BackgroundColorInterpolation","interpolate","inputRange","outputRange","level2","isDark","isLight","textColor","activeTintColor","defaultColor","inactiveTintColor","touchColor","alpha","rgb","string","maxTabWidth","maxTabBarWidth","tabBarWidth","Math","min","width","tabWidth","rippleSize","insets","styles","container","content","background","focused","previouslyFocused","countAlphaOffscreen","renderToHardwareTextureAndroid","opacity","top","zIndex","absoluteFill","needsOffscreenAlphaCompositing","transform","translateX","translateY","bar","height","position","measured","barContent","items","marginBottom","marginHorizontal","max","maxWidth","ripple","borderRadius","active","activeOpacity","inactiveOpacity","v3ActiveOpacity","v3InactiveOpacity","outlineScale","activeLabelColor","tintColor","hasColor","Boolean","inactiveLabelColor","badgeStyle","String","isV3Shifting","font","fonts","labelMedium","onPress","accessibilityRole","accessibilityState","selected","item","v3Item","v3TouchableContainer","v3NoLabelContainer","iconContainer","v3IconContainer","outline","scaleX","secondaryContainer","iconWrapper","v3IconWrapper","focusedIcon","unfocusedIcon","badgeContainer","labelContainer","labelWrapper","label","SceneMap","scenes","create","flex","overflow","alignItems","flexDirection","paddingVertical","marginTop","alignSelf","justifyContent","absoluteFillObject","paddingBottom","fontSize","textAlign","whiteSpace","paddingTop"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAA,QAAA;AAAA,OAAA,QAAA;AAAA,OAAA,UAAA;AAAA,OAAA,wBAAA;AAAA,OAAA,IAAA;AAc9B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,iBAAiB,QAAQ,gCAAgC;AAElE,SAASC,gBAAgB;AACzB,OAAOC,OAAO;AACd,SAASC,KAAK,EAAEC,KAAK;AAErB,OAAOC,gBAAgB;AACvB,OAAOC,qBAAqB;AAC5B,OAAOC,kBAAkB;AACzB,OAAOC,SAAS;AAChB,OAAOC,KAAK;AACZ,OAAOC,IAAI;AACX,OAAOC,OAAO;AACd,OAAOC,eAAe;AACtB,OAAOC,IAAI;AACX,OAAOC,2BAA2B;AAClC,SACEC,kBAAkB,EAClBC,oBAAoB,EACpBC,aAAa;AAgPf,IAAMC,gBAAgB,GAAG,KAAK;AAC9B,IAAMC,aAAa,GAAG,EAAE;AACxB,IAAMC,aAAa,GAAG,GAAG;AACzB,IAAMC,UAAU,GAAG,EAAE;AACrB,IAAMC,YAAY,GAAGC,QAAQ,CAACC,EAAE,KAAK,KAAK,GAAG,CAAC,GAAG,IAAI;AACrD,IAAMC,aAAa,GAAG,EAAE;AAExB,IAAMC,SAAS,GAAG,SAAZA,SAAS,CAAG,IAAA,EAAA;EAAA,IACTE,EAAE,GAOM,IAAA,CAPfD,KAAK;IACLE,KAAK,GAMU,IAAA,CANfA,KAAK;IACLC,QAAQ,GAKO,IAAA,CALfA,QAAQ;IACRC,UAAU,GAIK,IAAA,CAJfA,UAAU;IACVC,QAAQ,GAGO,IAAA,CAHfA,QAAQ;IACRC,WAAW,GAEI,IAAA,CAFfA,WAAW;IACRC,IAAAA,GAAAA,wBAAAA,CACY,IAAA,EAAA,SAAA;EAAA,OACftB,eAAe,CAACuB,SAAS,GACvB,KAAA,CAAA,aAAA,CAAC,eAAe,EAAA,QAAA,CAAA,CAAA,CAAA,EACVD,IAAI,EAAA;IACR,QAAQ,EAAEA,IAAI,CAACE,QAAQ,IAAIC,SAAU;IACrC,UAAU,EAAEN,UAAW;IACvB,QAAQ,EAAEC,QAAS;IACnB,WAAW,EAAEC,WAAY;IACzB,KAAK,EAAEJ;EAAM,CAAA,CAAA,EAEZC,QAAQ,CACO,GAElB,KAAA,CAAA,aAAA,CAAC,wBAAwB,EAAKI,IAAI,EAChC,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA;IAAC,KAAK,EAAEL;EAAM,CAAA,EAAEC,QAAQ,CAAQ,CAExC;AAAA,CAAA;AAEH,IAAMQ,cAAc,GAAGxC,KAAK,CAACyC,IAAI,CAAC,UAAA,KAAA,EAAA;EAAA,IAAGC,SAAS,GAAgB,KAAA,CAAzBA,SAAS;IAAKN,IAAAA,GAAAA,wBAAAA,CAAW,KAAA,EAAA,UAAA;EAAA,OAC5DpC,KAAK,CAAC2C,aAAa,CAACD,SAAS,EAAEN,IAAI,CAAC;AAAA,CAAA,CACrC;AAwDD,IAAMQ,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAG,KAAA,EA8BZ;EAAA,IAAA,MAAA,EAAA,MAAA,EAAA,MAAA;EA9Ba,IACxBC,eAAe,GA6BT,KAAA,CA7BNA,eAAe;IACfC,WAAW,GA4BL,KAAA,CA5BNA,WAAW;IACXC,UAAU,GA2BJ,KAAA,CA3BNA,UAAU;IACVC,WAAW,GA0BL,KAAA,CA1BNA,WAAW;IAAA,qBAAA,GA0BL,KAAA,CAzBNC,eAAe;IAAfA,eAAe,GAAA,qBAAA,cAAIC,UAAAA,KAAqB;MAAA,OAAK,KAAA,CAAA,aAAA,CAAC,SAAS,EAAKA,KAAK,CAAI;IAAA,IAAA,qBAAA;IAAA,kBAAA,GAyB/D,KAAA,CAxBNC,YAAY;IAAZA,YAAY,GAAA,kBAAA,cAAG,UAAA,KAAA,EAAA;MAAA,IAAGtB,KAAAA,GAAyB,KAAA,CAAzBA,KAAAA;MAAyB,OAAKA,KAAK,CAACuB,KAAK;IAAA,CAAA,GAAA,kBAAA;IAAA,cAAA,GAwBrD,KAAA,CAvBNC,QAAQ;IAARA,QAAQ,GAAA,cAAA,cAAG,UAAA,KAAA,EAAA;MAAA,IAAGxB,KAAAA,GAAyB,KAAA,CAAzBA,KAAAA;MAAyB,OAAKA,KAAK,CAACyB,KAAK;IAAA,CAAA,GAAA,cAAA;IAAA,cAAA,GAuBjD,KAAA,CAtBNC,QAAQ;IAARA,QAAQ,GAAA,cAAA,cAAG,UAAA,KAAA,EAAA;MAAA,IAAG1B,KAAAA,GAAyB,KAAA,CAAzBA,KAAAA;MAAyB,OAAKA,KAAK,CAAC5B,KAAK;IAAA,CAAA,GAAA,cAAA;IAAA,qBAAA,GAsBjD,KAAA,CArBNuD,qBAAqB;IAArBA,qBAAqB,GAAA,qBAAA,cAAG,UAAA,KAAA,EAAA;MAAA,IAAG3B,KAAAA,GAAyB,KAAA,CAAzBA,KAAAA;MAAyB,OAClDA,KAAK,CAAC4B,kBAAkB;IAAA,CAAA,GAAA,qBAAA;IAAA,eAAA,GAoBpB,KAAA,CAnBNC,SAAS;IAATA,SAAS,GAAA,eAAA,cAAG,UAAA,KAAA,EAAA;MAAA,IAAG7B,KAAAA,GAAyB,KAAA,CAAzBA,KAAAA;MAAyB,OAAKA,KAAK,CAAC8B,MAAM;IAAA,CAAA,GAAA,eAAA;IACzDC,WAAW,GAkBL,KAAA,CAlBNA,WAAW;IACXC,aAAa,GAiBP,KAAA,CAjBNA,aAAa;IAAA,qBAAA,GAiBP,KAAA,CAhBNC,0BAA0B;IAA1BA,0BAA0B,GAAA,qBAAA,cAAGrC,QAAQ,CAACC,EAAE,KAAK,SAAS,GAAA,qBAAA;IACtDqC,QAAQ,GAeF,KAAA,CAfNA,QAAQ;IAAA,aAAA,GAeF,KAAA,CAdNC,OAAO;IAAPA,OAAO,GAAA,aAAA,cAAG,IAAI,GAAA,aAAA;IACdjC,KAAK,GAaC,KAAA,CAbNA,KAAK;IAAA,qBAAA,GAaC,KAAA,CAZNkC,qBAAqB;IAArBA,qBAAqB,GAAA,qBAAA,cAAG,KAAK,GAAA,qBAAA;IAAA,qBAAA,GAYvB,KAAA,CAXNC,kBAAkB;IAAlBA,kBAAkB,GAAA,qBAAA,cAAG,SAAS,GAAA,qBAAA;IAC9BC,oBAAoB,GAUd,KAAA,CAVNA,oBAAoB;IACpBC,UAAU,GASJ,KAAA,CATNA,UAAU;IACVC,aAAa,GAQP,KAAA,CARNA,aAAa;IACHE,YAAY,GAOhB,KAAA,CAPND,QAAQ;IACRE,cAAc,GAMR,KAAA,CANNA,cAAc;IAAA,qBAAA,GAMR,KAAA,CALNC,0BAA0B;IAA1BA,0BAA0B,GAAA,qBAAA,cAAG,CAAC,GAAA,qBAAA;IACrBE,WAAW,GAId,KAAA,CAJND,OAAO;IAAA,YAAA,GAID,KAAA,CAHNf,MAAM;IAANA,MAAM,GAAA,YAAA,cAAG,mBAAmB,GAAA,YAAA;IACrBkB,cAAc,GAEf,KAAA,CAFND,KAAK;IAAA,aAAA,GAEC,KAAA,CADNE,OAAO;IAAPA,OAAO,GAAA,aAAA,cAAG,UAAA,KAAA,EAAA;MAAA,IAAGjD,KAAAA,GAAyB,KAAA,CAAzBA,KAAAA;MAAyB,OAAKA,KAAK,CAACkD,IAAI;IAAA,CAAA,GAAA,aAAA;EAErD,IAAMH,KAAK,GAAGzE,gBAAgB,CAAC0E,cAAc,CAAC;EAC9C,IAAA,kBAAA,GAAgC3E,iBAAiB,EAAE;IAA3C8E,MAAM,GAAA,kBAAA,CAANA,MAAM;IAAEC,IAAI,GAAA,kBAAA,CAAJA,IAAI;IAAEC,KAAAA,GAAAA,kBAAAA,CAAAA,KAAAA;EACtB,IAAQC,KAAAA,GAAUP,KAAK,CAACQ,SAAS,CAAzBD,KAAAA;EACR,IAAMT,OAAO,GAAGC,WAAW,WAAXA,WAAW,GAAI,CAACC,KAAK,CAACS,IAAI;EAC1C,IAAIf,QAAQ,GACVC,YAAY,WAAZA,YAAY,GAAKK,KAAK,CAACS,IAAI,GAAG,KAAK,GAAGxC,eAAe,CAACyC,MAAM,CAACC,MAAM,GAAG,CAAE;EAE1E,IAAIjB,QAAQ,IAAIzB,eAAe,CAACyC,MAAM,CAACC,MAAM,GAAG,CAAC,EAAE;IACjDjB,QAAQ,GAAG,KAAK;IAChBkB,OAAO,CAACC,IAAI,CACV,kEAAkE,CACnE;EACH;EAEA,IAAMC,UAAU,GAAG7C,eAAe,CAACyC,MAAM,CAACzC,eAAe,CAAC8C,KAAK,CAAC,CAACC,GAAG;EAKpE,IAAMC,WAAW,GAAGtF,gBAAgB,CAAC,CAAC,CAAC;EAKvC,IAAMuF,SAAS,GAAGtF,qBAAqB,CACrCqC,eAAe,CAACyC,MAAM,CAACS,GAAG,CAExB,UAACC,CAAC,EAAEC,CAAC;IAAA,OAAMA,CAAC,KAAKpD,eAAe,CAAC8C,KAAK,GAAG,CAAC,GAAG,CAAE;EAAA,EAChD,CACF;EAMD,IAAMO,iBAAiB,GAAG1F,qBAAqB,CAC7CqC,eAAe,CAACyC,MAAM,CAACS,GAAG,CAAC,UAACC,CAAC,EAAEC,CAAC;IAAA,OAC9BA,CAAC,KAAKpD,eAAe,CAAC8C,KAAK,GAAG,CAAC,GAAGM,CAAC,IAAIpD,eAAe,CAAC8C,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;EAAA,EACtE,CACF;EAOD,IAAMQ,YAAY,GAAG3F,qBAAqB,CACxCqC,eAAe,CAACyC,MAAM,CAACS,GAAG,CAExB,UAACC,CAAC,EAAEC,CAAC;IAAA,OAAMA,CAAC,KAAKpD,eAAe,CAAC8C,KAAK,GAAG,CAAC,GAAG,CAAE;EAAA,EAChD,CACF;EAMD,IAAMS,SAAS,GAAG7F,gBAAgB,CAACsC,eAAe,CAAC8C,KAAK,CAAC;EAKzD,IAAMU,UAAU,GAAG9F,gBAAgB,CAACa,gBAAgB,CAAC;EAKrD,IAAA,UAAA,GAA2BV,SAAS,EAAE;IAAA,WAAA,GAAA,cAAA,CAAA,UAAA;IAA/B4F,MAAM,GAAA,WAAA;IAAEC,QAAQ,GAAA,WAAA;EAKvB,IAAA,eAAA,GAA4BvG,KAAK,CAAC0G,QAAQ,CAAW,CAAChB,UAAU,CAAC,CAAC;IAAA,gBAAA,GAAA,cAAA,CAAA,eAAA;IAA3Dc,MAAM,GAAA,gBAAA;IAAEC,SAAS,GAAA,gBAAA;EAExB,IAAI,CAACD,MAAM,CAACG,QAAQ,CAACjB,UAAU,CAAC,EAAE;IAEhCe,SAAS,CAAED,UAAAA,MAAM;MAAA,UAAA,MAAA,CAAA,kBAAA,CAASA,MAAM,IAAEd,UAAU;IAAA,CAAC,CAAC;EAChD;EAKA,IAAA,gBAAA,GAA8C1F,KAAK,CAAC0G,QAAQ,CAAC,KAAK,CAAC;IAAA,gBAAA,GAAA,cAAA,CAAA,gBAAA;IAA5DE,eAAe,GAAA,gBAAA;IAAEC,kBAAkB,GAAA,gBAAA;EAE1C,IAAMC,kBAAkB,GAAG9G,KAAK,CAAC+G,WAAW,CAAC,YAAM;IACjDF,kBAAkB,CAAC,IAAI,CAAC;IACxBG,QAAQ,CAACC,MAAM,CAACpB,WAAW,EAAE;MAC3BqB,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,GAAG,GAAGhC,KAAK;MACrBiC,eAAe,EAAE;IACnB,CAAC,CAAC,CAACC,KAAK,EAAE;EACZ,CAAC,EAAE,CAAClC,KAAK,EAAEU,WAAW,CAAC,CAAC;EAExB,IAAMyB,kBAAkB,GAAGtH,KAAK,CAAC+G,WAAW,CAAC,YAAM;IACjDC,QAAQ,CAACC,MAAM,CAACpB,WAAW,EAAE;MAC3BqB,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,GAAG,GAAGhC,KAAK;MACrBiC,eAAe,EAAE;IACnB,CAAC,CAAC,CAACC,KAAK,CAAC,YAAM;MACbR,kBAAkB,CAAC,KAAK,CAAC;IAC3B,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC1B,KAAK,EAAEU,WAAW,CAAC,CAAC;EAExB,IAAM0B,cAAc,GAAGvH,KAAK,CAAC+G,WAAW,CACrCpB,UAAAA,KAAa,EAAK;IAEjBU,UAAU,CAACmB,QAAQ,CAACpG,gBAAgB,CAAC;IAErC4F,QAAQ,CAACS,QAAQ,EACfT,QAAQ,CAACC,MAAM,CAACZ,UAAU,EAAE;MAC1Ba,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAEvC,KAAK,CAACS,IAAI,IAAIf,QAAQ,GAAG,GAAG,GAAGa,KAAK,GAAG,CAAC;MAClDiC,eAAe,EAAE;IACnB,CAAC,CAAC,EAAA,MAAA,CAAA,kBAAA,CACCvE,eAAe,CAACyC,MAAM,CAACS,GAAG,CAAC,UAACC,CAAC,EAAEC,CAAC;MAAA,OACjCe,QAAQ,CAACC,MAAM,CAACnB,SAAS,CAACG,CAAC,CAAC,EAAE;QAC5BiB,OAAO,EAAEjB,CAAC,KAAKN,KAAK,GAAG,CAAC,GAAG,CAAC;QAC5BwB,QAAQ,EAAEvC,KAAK,CAACS,IAAI,IAAIf,QAAQ,GAAG,GAAG,GAAGa,KAAK,GAAG,CAAC;QAClDiC,eAAe,EAAE,IAAI;QACrBM,MAAM,EAAEvD;MACV,CAAC,CAAC;IAAA,EACH,GAAA,kBAAA,CACEtB,eAAe,CAACyC,MAAM,CAACS,GAAG,CAAC,UAACC,CAAC,EAAEC,CAAC;MAAA,OACjCe,QAAQ,CAACC,MAAM,CAACf,iBAAiB,CAACD,CAAC,CAAC,EAAE;QACpCiB,OAAO,EAAEjB,CAAC,KAAKN,KAAK,GAAG,CAAC,GAAGM,CAAC,IAAIN,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;QAC9CwB,QAAQ,EAAEvC,KAAK,CAACS,IAAI,IAAIf,QAAQ,GAAG,GAAG,GAAGa,KAAK,GAAG,CAAC;QAClDiC,eAAe,EAAE,IAAI;QACrBM,MAAM,EAAEvD;MACV,CAAC,CAAC;IAAA,EACH,GACD,CAACkD,KAAK,CAAC,UAAA,MAAA,EAAkB;MAAjB,IAAEM,QAAAA,GAAU,MAAA,CAAVA,QAAAA;MAEV7B,SAAS,CAACC,GAAG,CAAC,UAAC6B,GAAG,EAAE3B,CAAC;QAAA,OAAK2B,GAAG,CAACJ,QAAQ,CAACvB,CAAC,KAAKN,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;MAAA,EAAC;MAG5DS,SAAS,CAACoB,QAAQ,CAAC7B,KAAK,CAAC;MACzBU,UAAU,CAACmB,QAAQ,CAACpG,gBAAgB,CAAC;MAErC,IAAIuG,QAAQ,EAAE;QAGZxB,YAAY,CAAC0B,OAAO,CAAC,UAACC,MAAM,EAAE7B,CAAC,EAAK;UAClC,IAAIA,CAAC,KAAKN,KAAK,EAAE;YACfmC,MAAM,CAACN,QAAQ,CAAC,CAAC,CAAC;UACpB,CAAC,MAAM;YACLM,MAAM,CAACN,QAAQ,CAAC,CAAC,CAAC;UACpB;QACF,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ,CAAC,EACD,CACEpB,SAAS,EACT9B,QAAQ,EACRzB,eAAe,CAACyC,MAAM,EACtBa,YAAY,EACZE,UAAU,EACVlB,KAAK,EACLW,SAAS,EACTI,iBAAiB,EACjB/B,oBAAoB,EACpBS,KAAK,CACN,CACF;EAED5E,KAAK,CAAC+H,SAAS,CAAC,YAAM;IAGpBR,cAAc,CAAC1E,eAAe,CAAC8C,KAAK,CAAC;EAEvC,CAAC,EAAE,EAAE,CAAC;EAENlF,kBAAkB,CAAC;IACjBuH,MAAM,EAAElB,kBAAkB;IAC1BmB,MAAM,EAAEX;EACV,CAAC,CAAC;EAEF,IAAMY,mBAAmB,GAAGlI,KAAK,CAACmI,MAAM,EAAmB;EAE3DnI,KAAK,CAAC+H,SAAS,CAAC,YAAM;IAEpB5B,YAAY,CAAC0B,OAAO,CAAC,UAACC,MAAM,EAAE7B,CAAC,EAAK;MAAA,IAAA,qBAAA;MAClC,IACEA,CAAC,KAAKpD,eAAe,CAAC8C,KAAK,IAC3BM,CAAC,MAAA,CAAA,qBAAA,GAAKiC,mBAAmB,CAACE,OAAO,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAA3BF,qBAAAA,CAA6BvC,KAAK,CAAA,EACxC;QACAmC,MAAM,CAACN,QAAQ,CAAC,CAAC,CAAC;MACpB;IACF,CAAC,CAAC;IAEFD,cAAc,CAAC1E,eAAe,CAAC8C,KAAK,CAAC;EACvC,CAAC,EAAE,CAAC9C,eAAe,CAAC8C,KAAK,EAAE4B,cAAc,EAAEpB,YAAY,CAAC,CAAC;EAEzD,IAAMkC,cAAc,GAAI1C,SAAlB0C,cAAc,CAAI1C,KAAa,EAAK;IACxC,IAAM2C,KAAK,GAAG;MACZzG,KAAK,EAAEgB,eAAe,CAACyC,MAAM,CAACK,KAAK,CAAC;MACpC4C,gBAAgB,EAAE,KAAK;MACvBC,cAAc,EAAE,SAAA,eAAA,EAAM;QACpBF,KAAK,CAACC,gBAAgB,GAAG,IAAI;MAC/B;IACF,CAAC;IAEDnE,UAAU,KAAA,IAAA,IAAVA,UAAU,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAVA,UAAU,CAAGkE,KAAK,CAAC;IAEnB,IAAIA,KAAK,CAACC,gBAAgB,EAAE;MAC1B;IACF;IAEA,IAAI5C,KAAK,KAAK9C,eAAe,CAAC8C,KAAK,EAAE;MACnCuC,mBAAmB,CAACE,OAAO,GAAGvF,eAAe;MAC7CwB,aAAa,CAACsB,KAAK,CAAC;IACtB;EACF,CAAC;EAED,IAAM8C,MAAM,GAAGzI,KAAK,CAAC+G,WAAW,CAC7BnB,UAAAA,GAAW,EAAK;IACf,IAAMD,KAAK,GAAG9C,eAAe,CAACyC,MAAM,CAACoD,SAAS,CAC3C7G,UAAAA,KAAK;MAAA,OAAKA,KAAK,CAAC+D,GAAG,KAAKA,GAAG;IAAA,EAC7B;IAEDsC,mBAAmB,CAACE,OAAO,GAAGvF,eAAe;IAC7CwB,aAAa,CAACsB,KAAK,CAAC;EACtB,CAAC,EACD,CAAC9C,eAAe,CAACyC,MAAM,EAAEjB,aAAa,CAAC,CACxC;EAED,IAAQiB,MAAAA,GAAWzC,eAAe,CAA1ByC,MAAAA;EACR,IAAQqD,MAAM,GAAoC/D,KAAK,CAA/C+D,MAAM;IAAQE,WAAW,GAAiBjE,KAAK,CAAvCgE,IAAI;IAAeE,IAAI,GAAWlE,KAAK,CAApBkE,IAAI;IAAEzD,IAAAA,GAAST,KAAK,CAAdS,IAAAA;EAEzC,IAAA,MAAA,GACG6D,UAAU,CAACC,OAAO,CAACpF,QAAQ,CAAC,IAAI,CAAC,CAGjC;IAJsBiF,gBAAgB,GAAA,MAAA,CAAjCD,eAAe;IAAA,gBAAA,GAAA,MAAA,CAAoBE,SAAS;IAATA,SAAS,GAAA,gBAAA,cAAG,CAAA,GAAA,gBAAA;EAMvD,IAAMG,qBAAqB,GAAGJ,gBAAgB,GAC1CA,gBAAgB,GAChBH,WAAW,IAAIC,IAAI,KAAK,UAAU,GAClC1I,OAAO,CAAC6I,SAAS,EAAEN,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAANA,MAAM,CAAEU,OAAO,CAAC,GACnCV,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAANA,MAAM,CAAEW,OAAO;EAEnB,IAAMC,8BAA8B,GAAGjF,QAAQ,GAC3C8B,SAAS,CAACoD,WAAW,CAAC;IACpBC,UAAU,EAAEnE,MAAM,CAACS,GAAG,CAAC,UAACC,CAAC,EAAEC,CAAC;MAAA,OAAKA,CAAC;IAAA,EAAC;IAGnCyD,WAAW,EAAEpE,MAAM,CAACS,GAAG,CACpBlE,UAAAA,KAAK;MAAA,OAAK0B,QAAQ,CAAC;QAAE1B,KAAAA,EAAAA;MAAM,CAAC,CAAC,IAAIuH,qBAAqB;IAAA;EAE3D,CAAC,CAAC,GACFA,qBAAqB;EAEzB,IAAML,eAAe,GAAG1D,IAAI,GACxB2D,gBAAgB,IAAIpE,KAAK,CAAC+D,MAAM,CAACM,SAAS,CAACU,MAAM,GACjDrF,QAAQ,GACRiF,8BAA8B,GAC9BH,qBAAqB;EAEzB,IAAMQ,MAAM,GACV,OAAOR,qBAAqB,KAAK,QAAQ,GACrC,CAACnJ,KAAK,CAACmJ,qBAAqB,CAAC,CAACS,OAAO,EAAE,GACvC,IAAI;EAEV,IAAMC,SAAS,GAAGF,MAAM,GAAGtJ,KAAK,GAAGD,KAAK;EAExC,IAAM0J,eAAe,GAAG9I,kBAAkB,CAAC;IACzC2C,WAAW,EAAXA,WAAW;IACXoG,YAAY,EAAEF,SAAS;IACvBlF,KAAAA,EAAAA;EACF,CAAC,CAAC;EAEF,IAAMqF,iBAAiB,GAAG/I,oBAAoB,CAAC;IAC7C2C,aAAa,EAAbA,aAAa;IACbmG,YAAY,EAAEF,SAAS;IACvBlF,KAAAA,EAAAA;EACF,CAAC,CAAC;EACF,IAAMsF,UAAU,GAAGjK,KAAK,CAAC8J,eAAe,CAAC,CAACI,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,EAAE,CAACC,MAAM,EAAE;EAEpE,IAAMC,WAAW,GAAGhF,MAAM,CAACC,MAAM,GAAG,CAAC,GAAGlE,aAAa,GAAGC,aAAa;EACrE,IAAMiJ,cAAc,GAAGD,WAAW,GAAGhF,MAAM,CAACC,MAAM;EAElD,IAAMiF,WAAW,GAAGC,IAAI,CAACC,GAAG,CAACpE,MAAM,CAACqE,KAAK,EAAEJ,cAAc,CAAC;EAC1D,IAAMK,QAAQ,GAAGJ,WAAW,GAAGlF,MAAM,CAACC,MAAM;EAE5C,IAAMsF,UAAU,GAAGvE,MAAM,CAACqE,KAAK,GAAG,CAAC;EAEnC,IAAMG,MAAM,GAAG;IACb7F,IAAI,GAAA,MAAA,GAAE,cAAc,KAAA,IAAA,IAAd,cAAc,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAd,cAAc,CAAEA,IAAI,YAAA,MAAA,GAAIA,IAAI;IAClCC,KAAK,GAAA,MAAA,GAAE,cAAc,KAAA,IAAA,IAAd,cAAc,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAd,cAAc,CAAEA,KAAK,YAAA,MAAA,GAAIA,KAAK;IACrCF,MAAM,GAAA,MAAA,GAAE,cAAc,KAAA,IAAA,IAAd,cAAc,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAd,cAAc,CAAEA,MAAM,YAAA,MAAA,GAAIA;EACpC,CAAC;EAED,OACE,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA;IAAC,KAAK,EAAE,CAAC+F,MAAM,CAACC,SAAS,EAAEjJ,KAAK,CAAE;IAAC,MAAM,EAAE4B;EAAO,CAAA,EACrD,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA;IAAC,KAAK,EAAE,CAACoH,MAAM,CAACE,OAAO,EAAE;MAAElC,eAAe,EAAEJ,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAANA,MAAM,CAAEuC;IAAW,CAAC;EAAE,CAAA,EACpE5F,MAAM,CAACS,GAAG,CAAC,UAAClE,KAAK,EAAE8D,KAAK,EAAK;IAAA,IAAA,sBAAA;IAC5B,IAAIb,OAAO,CAAC;MAAEjD,KAAAA,EAAAA;IAAM,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC2E,MAAM,CAACG,QAAQ,CAAC9E,KAAK,CAAC+D,GAAG,CAAC,EAAE;MAE/D,OAAO,IAAI;IACb;IAEA,IAAMuF,OAAO,GAAGtI,eAAe,CAAC8C,KAAK,KAAKA,KAAK;IAC/C,IAAMyF,iBAAiB,GACrB,CAAA,CAAA,sBAAA,GAAA,mBAAmB,CAAChD,OAAO,MAAA,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAA3B,sBAAA,CAA6BzC,KAAK,MAAKA,KAAK;IAC9C,IAAM0F,mBAAmB,GACvBpH,qBAAqB,KAAKkH,OAAO,IAAIC,iBAAiB,CAAC;IACzD,IAAME,8BAA8B,GAClCrH,qBAAqB,IAAIkH,OAAO;IAElC,IAAMI,OAAO,GAAGtH,qBAAqB,GACjCiC,iBAAiB,CAACP,KAAK,CAAC,CAAC6D,WAAW,CAAC;MACnCC,UAAU,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACtBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IACvB,CAAC,CAAC,GACFyB,OAAO,GACP,CAAC,GACD,CAAC;IAEL,IAAMK,GAAG,GAAGvH,qBAAqB,GAC7BkC,YAAY,CAACR,KAAK,CAAC,CAAC6D,WAAW,CAAC;MAC9BC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAClBC,WAAW,EAAE,CAAC,CAAC,EAAElI,YAAY;IAC/B,CAAC,CAAC,GACF2J,OAAO,GACP,CAAC,GACD3J,YAAY;IAEhB,IAAMyD,IAAI,GACRf,kBAAkB,KAAK,UAAU,GAC7BgC,iBAAiB,CAACP,KAAK,CAAC,CAAC6D,WAAW,CAAC;MACnCC,UAAU,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACtBC,WAAW,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE;IAC1B,CAAC,CAAC,GACF,CAAC;IAEP,IAAM+B,MAAM,GAAGN,OAAO,GAAG,CAAC,GAAG,CAAC;IAE9B,OACE,KAAA,CAAA,aAAA,CAAC,2BAA2B,EAAA;MAC1B,GAAG,EAAEtJ,KAAK,CAAC+D,GAAI;MACf,aAAa,EAAEuF,OAAO,GAAG,MAAM,GAAG,MAAO;MACzC,2BAA2B,EAAE,CAACA,OAAQ;MACtC,yBAAyB,EACvBA,OAAO,GAAG,MAAM,GAAG,qBACpB;MACD,KAAK,EAAExF,KAAM;MACb,UAAU,EAAE4F,OAAQ;MACpB,KAAK,EAAE,CAACrC,UAAU,CAACwC,YAAY,EAAE;QAAED,MAAAA,EAAAA;MAAO,CAAC,CAAE;MAC7C,WAAW,EAAE,KAAM;MACnB,qBAAqB,EAGnBhK,QAAQ,CAACC,EAAE,KAAK,KAAK,GAAGmB,eAAe,CAAC8C,KAAK,KAAKA,KAAK,GAAG;IAC3D,CAAA,EAED,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAI,EAAA,QAAA,CAAA,CAAA,CAAA,EACPlE,QAAQ,CAACC,EAAE,KAAK,SAAS,IAAI;MAChCiK,8BAA8B,EAAEN;IAClC,CAAC,EAAA;MACD,8BAA8B,EAAEC,8BAA+B;MAC/D,KAAK,EAAE,CACLP,MAAM,CAACE,OAAO,EACd;QACEM,OAAO,EAAPA,OAAO;QACPK,SAAS,EAAE,CAAC;UAAEC,UAAU,EAAE5G;QAAK,CAAC,EAAE;UAAE6G,UAAU,EAAEN;QAAI,CAAC;MACvD,CAAC;IACD,CAAA,CAAA,EAED1I,WAAW,CAAC;MAAEjB,KAAK,EAALA,KAAK;MAAE4G,MAAAA,EAAAA;IAAO,CAAC,CAAC,CACjB,CACY;EAElC,CAAC,CAAC,CACG,EACP,KAAA,CAAA,aAAA,CAAC,OAAO,EAAA,QAAA,CAAA,CAAA,CAAA,EACD7D,KAAK,CAACS,IAAI,IAAI;IAAE4D,SAAS,EAAE;EAAE,CAAC,EAAA;IACnC,MAAM,EAAKtF,MAAO,aAAU;IAC5B,KAAK,EAAE,CACL,CAACiB,KAAK,CAACS,IAAI,IAAI0F,MAAM,CAAC9B,SAAS,EAC/B8B,MAAM,CAACgB,GAAG,EACVjI,0BAA0B,GACtB;MAEE8H,SAAS,EAAE,CACT;QACEE,UAAU,EAAEjG,WAAW,CAAC2D,WAAW,CAAC;UAClCC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;UAClBC,WAAW,EAAE,CAACpD,MAAM,CAAC0F,MAAM,EAAE,CAAC;QAChC,CAAC;MACH,CAAC,CACF;MAGDC,QAAQ,EAAErF,eAAe,GAAG,UAAU,GAAGrE;IAC3C,CAAC,GACD,IAAI,EACRwB,QAAQ,CACR;IACF,aAAa,EACXuC,MAAM,CAAC4F,QAAQ,GACXpI,0BAA0B,IAAI8C,eAAe,GAC3C,MAAM,GACN,MAAM,GACR,MACL;IACD,QAAQ,EAAEL;EAAS,CAAA,CAAA,EAEnB,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAI,EAAA;IACZ,KAAK,EAAE,CAACwE,MAAM,CAACoB,UAAU,EAAE;MAAEpD,eAAAA,EAAAA;IAAgB,CAAC,CAAE;IAChD,MAAM,EAAKpF,MAAO;EAAc,CAAA,EAEhC,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA;IACH,KAAK,EAAE,CACLoH,MAAM,CAACqB,KAAK,EACZ;MACEC,YAAY,EAAEvB,MAAM,CAAC9F,MAAM;MAC3BsH,gBAAgB,EAAE7B,IAAI,CAAC8B,GAAG,CAACzB,MAAM,CAAC7F,IAAI,EAAE6F,MAAM,CAAC5F,KAAK;IACtD,CAAC,EACDR,OAAO,IAAI;MACT8H,QAAQ,EAAEjC;IACZ,CAAC,CACD;IACF,iBAAiB,EAAE,SAAU;IAC7B,MAAM,EAAK5G,MAAO;EAAsB,CAAA,EAEvCW,QAAQ,GACP,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAI,EAAA;IACZ,aAAa,EAAC,MAAM;IACpB,KAAK,EAAE,CACLyG,MAAM,CAAC0B,MAAM,EACb;MAGEjB,GAAG,EAAE,CAACjK,UAAU,GAAGsJ,UAAU,IAAI,CAAC;MAClC5F,IAAI,EACF2F,QAAQ,IAAI/H,eAAe,CAAC8C,KAAK,GAAG,GAAG,CAAC,GAAGkF,UAAU,GAAG,CAAC;MAC3DmB,MAAM,EAAEnB,UAAU;MAClBF,KAAK,EAAEE,UAAU;MACjB6B,YAAY,EAAE7B,UAAU,GAAG,CAAC;MAC5B9B,eAAe,EAAExF,QAAQ,CAAC;QACxB1B,KAAK,EAAEyD,MAAM,CAACzC,eAAe,CAAC8C,KAAK;MACrC,CAAC,CAAC;MACFiG,SAAS,EAAE,CACT;QAEEzG,KAAK,EAAEkB,UAAU,CAACmD,WAAW,CAAC;UAC5BC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;UAClBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC;QACpB,CAAC;MACH,CAAC,CACF;MACD6B,OAAO,EAAElF,UAAU,CAACmD,WAAW,CAAC;QAC9BC,UAAU,EAAE,CAAC,CAAC,EAAErI,gBAAgB,EAAE,GAAG,EAAE,CAAC,CAAC;QACzCsI,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;MAC1B,CAAC;IACH,CAAC,CACD;IACF,MAAM,EAAK/F,MAAO;EAAqB,CAAA,CACvC,GACA,IAAI,EACP2B,MAAM,CAACS,GAAG,CAAC,UAAClE,KAAK,EAAE8D,KAAK,EAAK;IAC5B,IAAMwF,OAAO,GAAGtI,eAAe,CAAC8C,KAAK,KAAKA,KAAK;IAC/C,IAAMgH,MAAM,GAAG7G,SAAS,CAACH,KAAK,CAAC;IAG/B,IAAMR,KAAK,GACTnB,OAAO,IAAIM,QAAQ,GACfqI,MAAM,CAACnD,WAAW,CAAC;MACjBC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAClBC,WAAW,EAAE,CAAC,GAAG,EAAE,CAAC;IACtB,CAAC,CAAC,GACF,CAAC;IAGP,IAAMoC,UAAU,GAAG9H,OAAO,GACtBM,QAAQ,GACNqI,MAAM,CAACnD,WAAW,CAAC;MACjBC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAClBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC;IACpB,CAAC,CAAC,GACF,CAAC,GACH,CAAC;IAKL,IAAMkD,aAAa,GAAGD,MAAM;IAC5B,IAAME,eAAe,GAAGF,MAAM,CAACnD,WAAW,CAAC;MACzCC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAClBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC;IACpB,CAAC,CAAC;IAEF,IAAMoD,eAAe,GAAG3B,OAAO,GAAG,CAAC,GAAG,CAAC;IACvC,IAAM4B,iBAAiB,GAAGzI,QAAQ,GAC9BuI,eAAe,GACf1B,OAAO,GACP,CAAC,GACD,CAAC;IAGL,IAAM6B,YAAY,GAAG7B,OAAO,GACxBwB,MAAM,CAACnD,WAAW,CAAC;MACjBC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAClBC,WAAW,EAAE,CAAC,GAAG,EAAE,CAAC;IACtB,CAAC,CAAC,GACF,CAAC;IAEL,IAAMpG,KAAK,GAAGD,QAAQ,CAAC;MAAExB,KAAAA,EAAAA;IAAM,CAAC,CAAC;IAEjC,IAAMoL,gBAAgB,GAAG9L,aAAa,CAAC;MACrC+L,SAAS,EAAEnD,eAAe;MAC1BoD,QAAQ,EAAEC,OAAO,CAACxJ,WAAW,CAAC;MAC9BuH,OAAO,EAAPA,OAAO;MACPnB,YAAY,EAAEF,SAAS;MACvBlF,KAAAA,EAAAA;IACF,CAAC,CAAC;IAEF,IAAMyI,kBAAkB,GAAGlM,aAAa,CAAC;MACvC+L,SAAS,EAAEjD,iBAAiB;MAC5BkD,QAAQ,EAAEC,OAAO,CAACvJ,aAAa,CAAC;MAChCsH,OAAO,EAAPA,OAAO;MACPnB,YAAY,EAAEF,SAAS;MACvBlF,KAAAA,EAAAA;IACF,CAAC,CAAC;IAEF,IAAM0I,UAAU,GAAG;MACjB9B,GAAG,EAAE,CAACnG,IAAI,GAAG,CAAC,CAAC,GAAG,OAAO/B,KAAK,KAAK,SAAS,GAAG,CAAC,GAAG,CAAC;MACpD4B,KAAK,EACH,CAAC5B,KAAK,IAAI,IAAI,IAAI,OAAOA,KAAK,KAAK,SAAS,GACxCiK,MAAM,CAACjK,KAAK,CAAC,CAACiC,MAAM,GAAG,CAAC,CAAC,GACzB,CAAC,KAAK,CAACF,IAAI,GAAG,CAAC,GAAG,CAAC;IAC3B,CAAC;IAED,IAAMmI,YAAY,GAAGnI,IAAI,IAAIf,QAAQ,IAAIN,OAAO;IAEhD,IAAMyJ,IAAI,GAAGpI,IAAI,GAAGT,KAAK,CAAC8I,KAAK,CAACC,WAAW,GAAG,CAAC,CAAC;IAEhD,OAAO1K,eAAe,CAAC;MACrB2C,GAAG,EAAE/D,KAAK,CAAC+D,GAAG;MACd/D,KAAK,EAALA,KAAK;MACLI,UAAU,EAAE,IAAI;MAChBC,QAAQ,EAAE,IAAI;MACdC,WAAW,EAAEkD,IAAI,GAAG,aAAa,GAAG6E,UAAU;MAC9C0D,OAAO,EAAE,SAAA,QAAA;QAAA,OAAMvF,cAAc,CAAC1C,KAAK,CAAC;MAAA;MACpChC,MAAM,EAAED,SAAS,CAAC;QAAE7B,KAAAA,EAAAA;MAAM,CAAC,CAAC;MAC5B4B,kBAAkB,EAAED,qBAAqB,CAAC;QAAE3B,KAAAA,EAAAA;MAAM,CAAC,CAAC;MACpDgM,iBAAiB,EAAEpM,QAAQ,CAACC,EAAE,KAAK,KAAK,GAAG,QAAQ,GAAG,KAAK;MAC3DoM,kBAAkB,EAAE;QAAEC,QAAQ,EAAE5C;MAAQ,CAAC;MACzCpJ,KAAK,EAAE,CAACgJ,MAAM,CAACiD,IAAI,EAAE3I,IAAI,IAAI0F,MAAM,CAACkD,MAAM,CAAC;MAC3CjM,QAAQ,EACN,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA;QACH,aAAa,EAAC,MAAM;QACpB,KAAK,EACHqD,IAAI,KACHrB,OAAO,GACJ+G,MAAM,CAACmD,oBAAoB,GAC3BnD,MAAM,CAACoD,kBAAkB;MAC9B,CAAA,EAED,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAI,EAAA;QACZ,KAAK,EAAE,CACLpD,MAAM,CAACqD,aAAa,EACpB/I,IAAI,IAAI0F,MAAM,CAACsD,eAAe,EAC9B,CAAC,CAAChJ,IAAI,IAAImI,YAAY,KAAK;UACzB5B,SAAS,EAAE,CAAC;YAAEE,UAAAA,EAAAA;UAAW,CAAC;QAC5B,CAAC;MACD,CAAA,EAEDzG,IAAI,IAAI8F,OAAO,IACd,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAI,EAAA;QACZ,KAAK,EAAE,CACLJ,MAAM,CAACuD,OAAO,EACd;UACE1C,SAAS,EAAE,CACT;YACE2C,MAAM,EAAEvB;UACV,CAAC,CACF;UACDjE,eAAe,EAAEnE,KAAK,CAAC+D,MAAM,CAAC6F;QAChC,CAAC;MACD,CAAA,CAEL,EACD,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAI,EAAA;QACZ,KAAK,EAAE,CACLzD,MAAM,CAAC0D,WAAW,EAClBpJ,IAAI,IAAI0F,MAAM,CAAC2D,aAAa,EAC5B;UAAEnD,OAAO,EAAElG,IAAI,GAAGyH,eAAe,GAAGF;QAAc,CAAC;MACnD,CAAA,EAED7J,UAAU,GACTA,UAAU,CAAC;QACTlB,KAAK,EAALA,KAAK;QACLsJ,OAAO,EAAE,IAAI;QACblL,KAAK,EAAE8J;MACT,CAAC,CAAC,GAEF,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA;QACH,MAAM,EAAElI,KAAK,CAAC8M,WAA0B;QACxC,KAAK,EAAE5E,eAAgB;QACvB,IAAI,EAAE;MAAG,CAAA,CAEZ,CACa,EAChB,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAI,EAAA;QACZ,KAAK,EAAE,CACLgB,MAAM,CAAC0D,WAAW,EAClBpJ,IAAI,IAAI0F,MAAM,CAAC2D,aAAa,EAC5B;UACEnD,OAAO,EAAElG,IAAI,GAAG0H,iBAAiB,GAAGF;QACtC,CAAC;MACD,CAAA,EAED9J,UAAU,GACTA,UAAU,CAAC;QACTlB,KAAK,EAALA,KAAK;QACLsJ,OAAO,EAAE,KAAK;QACdlL,KAAK,EAAEgK;MACT,CAAC,CAAC,GAEF,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA;QACH,MAAM,EACJrF,KAAK,CAACS,IAAI,IAAIxD,KAAK,CAAC+M,aAAa,KAAKrM,SAAS,GAC3CV,KAAK,CAAC+M,aAAa,GAClB/M,KAAK,CAAC8M,WACZ;QACD,KAAK,EAAE1E,iBAAkB;QACzB,IAAI,EAAE;MAAG,CAAA,CAEZ,CACa,EAChB,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA;QAAC,KAAK,EAAE,CAACc,MAAM,CAAC8D,cAAc,EAAEvB,UAAU;MAAE,CAAA,EAC9C,OAAOhK,KAAK,KAAK,SAAS,GACzB,KAAA,CAAA,aAAA,CAAC,KAAK,EAAA;QAAC,OAAO,EAAEA,KAAM;QAAC,IAAI,EAAE+B,IAAI,GAAG,CAAC,GAAG;MAAE,CAAA,CAAG,GAE7C,KAAA,CAAA,aAAA,CAAC,KAAK,EAAA;QAAC,OAAO,EAAE/B,KAAK,IAAI,IAAK;QAAC,IAAI,EAAE;MAAG,CAAA,EACrCA,KAAK,CAET,CACI,CACO,EACfU,OAAO,GACN,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAI,EAAA;QACZ,KAAK,EAAE,CACL+G,MAAM,CAAC+D,cAAc,EACrB,CAACzJ,IAAI,IAAI;UAAEuG,SAAS,EAAE,CAAC;YAAEzG,KAAAA,EAAAA;UAAM,CAAC;QAAE,CAAC;MACnC,CAAA,EAEF,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAI,EAAA;QACZ,KAAK,EAAE,CACL4F,MAAM,CAACgE,YAAY,EACnB,CAAC,CAAC1J,IAAI,IAAImI,YAAY,KAAK;UACzBjC,OAAO,EAAEqB;QACX,CAAC;MACD,CAAA,EAED5J,WAAW,GACVA,WAAW,CAAC;QACVnB,KAAK,EAALA,KAAK;QACLsJ,OAAO,EAAE,IAAI;QACblL,KAAK,EAAEgN;MACT,CAAC,CAAC,GAEF,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA;QACH,qBAAqB,EAAExI,0BAA2B;QAClD,OAAO,EAAC,aAAa;QACrB,KAAK,EAAE,CACLsG,MAAM,CAACiE,KAAK,EAAA,aAAA;UAEV/O,KAAK,EAAEgN;QAAgB,GACpBQ,IAAAA;MAEL,CAAA,EAEDtK,YAAY,CAAC;QAAEtB,KAAAA,EAAAA;MAAM,CAAC,CAAC,CAE3B,CACa,EACfyC,QAAQ,GAAG,IAAI,GACd,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAI,EAAA;QACZ,KAAK,EAAE,CACLyG,MAAM,CAACgE,YAAY,EACnB;UAAExD,OAAO,EAAEsB;QAAgB,CAAC;MAC5B,CAAA,EAED7J,WAAW,GACVA,WAAW,CAAC;QACVnB,KAAK,EAALA,KAAK;QACLsJ,OAAO,EAAE,KAAK;QACdlL,KAAK,EAAEoN;MACT,CAAC,CAAC,GAEF,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA;QACH,qBAAqB,EACnB5I,0BACD;QACD,OAAO,EAAC,aAAa;QACrB,UAAU,EAAE,KAAM;QAClB,KAAK,EAAE,CACLsG,MAAM,CAACiE,KAAK,EAAA,aAAA;UAEV/O,KAAK,EAAEoN;QAAkB,GACtBI,IAAAA;MAEL,CAAA,EAEDtK,YAAY,CAAC;QAAEtB,KAAAA,EAAAA;MAAM,CAAC,CAAC,CAE3B,CAEJ,CACa,GAEhB,CAACwD,IAAI,IAAI,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA;QAAC,KAAK,EAAE0F,MAAM,CAAC+D;MAAe,CAAA,CAC7C;IAGP,CAAC,CAAC;EACJ,CAAC,CAAC,CACG,CACO,CACR,CACL;AAEX,CAAC;AAODlM,gBAAgB,CAACqM,QAAQ,GAAIC,UAAAA,MAK5B,EAAK;EACJ,OAAO,UAAA,MAAA,EAAA;IAAA,IACLrN,KAAK,GAKN,MAAA,CALCA,KAAK;MACL4G,MAAAA,GAID,MAAA,CAJCA,MAAAA;IAID,OACC,KAAA,CAAA,aAAA,CAAC,cAAc,EAAA;MACb,GAAG,EAAE5G,KAAK,CAAC+D,GAAI;MACf,SAAS,EAAEsJ,MAAM,CAACrN,KAAK,CAAC+D,GAAG,GAAG/D,KAAK,CAAC+D,GAAG,GAAG,EAAE,CAAE;MAC9C,KAAK,EAAE/D,KAAM;MACb,MAAM,EAAE4G;IAAO,CAAA,CACf;EAAA,CACH;AACH,CAAC;AAED,eAAe7F,gBAAgB;AAE/B,IAAMmI,MAAM,GAAG7B,UAAU,CAACiG,MAAM,CAAC;EAC/BnE,SAAS,EAAE;IACToE,IAAI,EAAE,CAAC;IACPC,QAAQ,EAAE;EACZ,CAAC;EACDpE,OAAO,EAAE;IACPmE,IAAI,EAAE;EACR,CAAC;EACDrD,GAAG,EAAE;IACH9G,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,CAAC;IACRF,MAAM,EAAE;EACV,CAAC;EACDmH,UAAU,EAAE;IACVmD,UAAU,EAAE,QAAQ;IACpBD,QAAQ,EAAE;EACZ,CAAC;EACDjD,KAAK,EAAA,aAAA;IACHmD,aAAa,EAAE;EAAK,GAChB9N,QAAQ,CAACC,EAAE,KAAK,KAAK,GACrB;IACEiJ,KAAK,EAAE;EACT,CAAC,GACD,IAAI,CACT;EACDqD,IAAI,EAAE;IACJoB,IAAI,EAAE,CAAC;IAGPI,eAAe,EAAE;EACnB,CAAC;EACDvB,MAAM,EAAE;IACNuB,eAAe,EAAE;EACnB,CAAC;EACD/C,MAAM,EAAE;IACNR,QAAQ,EAAE;EACZ,CAAC;EACDmC,aAAa,EAAE;IACbpC,MAAM,EAAE,EAAE;IACVrB,KAAK,EAAE,EAAE;IACT8E,SAAS,EAAE,CAAC;IACZnD,gBAAgB,EAAE,EAAE;IACpBoD,SAAS,EAAE;EACb,CAAC;EACDrB,eAAe,EAAE;IACfrC,MAAM,EAAE,EAAE;IACVrB,KAAK,EAAE,EAAE;IACT0B,YAAY,EAAE,CAAC;IACfoD,SAAS,EAAE,CAAC;IACZE,cAAc,EAAE;EAClB,CAAC;EACDlB,WAAW,EAAA,aAAA,CAAA,aAAA,KACNvF,UAAU,CAAC0G,kBAAkB;IAChCN,UAAU,EAAE;EAAA,EACb;EACDZ,aAAa,EAAE;IACblD,GAAG,EAAE;EACP,CAAC;EACDsD,cAAc,EAAE;IACd9C,MAAM,EAAE,EAAE;IACV6D,aAAa,EAAE;EACjB,CAAC;EACDd,YAAY,EAAA,aAAA,KACP7F,UAAU,CAAC0G,kBAAAA,CACf;EAEDZ,KAAK,EAAA,aAAA;IACHc,QAAQ,EAAE,EAAE;IACZ9D,MAAM,EAAEzK,UAAU;IAClBwO,SAAS,EAAE,QAAQ;IACnBhH,eAAe,EAAE;EAAa,GAC1BtH,QAAQ,CAACC,EAAE,KAAK,KAAK,GACrB;IACEsO,UAAU,EAAE,QAAQ;IACpBN,SAAS,EAAE;EACb,CAAC,GACD,IAAI,CACT;EACDb,cAAc,EAAE;IACd5C,QAAQ,EAAE,UAAU;IACpBhH,IAAI,EAAE;EACR,CAAC;EACDiJ,oBAAoB,EAAE;IACpB+B,UAAU,EAAE,EAAE;IACdJ,aAAa,EAAE;EACjB,CAAC;EACD1B,kBAAkB,EAAE;IAClBnC,MAAM,EAAE,EAAE;IACV2D,cAAc,EAAE,QAAQ;IACxBL,UAAU,EAAE;EACd,CAAC;EACDhB,OAAO,EAAE;IACP3D,KAAK,EAAEhJ,aAAa;IACpBqK,MAAM,EAAErK,aAAa,GAAG,CAAC;IACzB+K,YAAY,EAAE/K,aAAa,GAAG,CAAC;IAC/B+N,SAAS,EAAE;EACb,CAAC;EACDzG,SAAS,EAAE;IACTA,SAAS,EAAE;EACb;AACF,CAAC,CAAC","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { Animated, Platform, StyleSheet, TouchableWithoutFeedback, View } from 'react-native';\nimport color from 'color';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { useInternalTheme } from '../../core/theming';\nimport overlay from '../../styles/overlay';\nimport { black, white } from '../../styles/themes/v2/colors';\nimport useAnimatedValue from '../../utils/useAnimatedValue';\nimport useAnimatedValueArray from '../../utils/useAnimatedValueArray';\nimport useIsKeyboardShown from '../../utils/useIsKeyboardShown';\nimport useLayout from '../../utils/useLayout';\nimport Badge from '../Badge';\nimport Icon from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport BottomNavigationRouteScreen from './BottomNavigationRouteScreen';\nimport { getActiveTintColor, getInactiveTintColor, getLabelColor } from './utils';\nconst MIN_RIPPLE_SCALE = 0.001; // Minimum scale is not 0 due to bug with animation\nconst MIN_TAB_WIDTH = 96;\nconst MAX_TAB_WIDTH = 168;\nconst BAR_HEIGHT = 56;\nconst FAR_FAR_AWAY = Platform.OS === 'web' ? 0 : 9999;\nconst OUTLINE_WIDTH = 64;\nconst Touchable = _ref => {\n  let {\n    route: _0,\n    style,\n    children,\n    borderless,\n    centered,\n    rippleColor,\n    ...rest\n  } = _ref;\n  return TouchableRipple.supported ? /*#__PURE__*/React.createElement(TouchableRipple, _extends({}, rest, {\n    disabled: rest.disabled || undefined,\n    borderless: borderless,\n    centered: centered,\n    rippleColor: rippleColor,\n    style: style\n  }), children) : /*#__PURE__*/React.createElement(TouchableWithoutFeedback, rest, /*#__PURE__*/React.createElement(View, {\n    style: style\n  }, children));\n};\nconst SceneComponent = /*#__PURE__*/React.memo(_ref2 => {\n  let {\n    component,\n    ...rest\n  } = _ref2;\n  return /*#__PURE__*/React.createElement(component, rest);\n});\n\n/**\n * Bottom navigation provides quick navigation between top-level views of an app with a bottom navigation bar.\n * It is primarily designed for use on mobile.\n *\n * For integration with React Navigation, you can use [react-navigation-material-bottom-tabs](https://github.com/react-navigation/react-navigation/tree/main/packages/material-bottom-tabs) and consult [createMaterialBottomTabNavigator](https://reactnavigation.org/docs/material-bottom-tab-navigator/) documentation.\n *\n * By default Bottom navigation uses primary color as a background, in dark theme with `adaptive` mode it will use surface colour instead.\n * See [Dark InternalTheme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more information.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/bottom-navigation.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { BottomNavigation, Text } from 'react-native-paper';\n *\n * const MusicRoute = () => <Text>Music</Text>;\n *\n * const AlbumsRoute = () => <Text>Albums</Text>;\n *\n * const RecentsRoute = () => <Text>Recents</Text>;\n *\n * const NotificationsRoute = () => <Text>Notifications</Text>;\n *\n * const MyComponent = () => {\n *   const [index, setIndex] = React.useState(0);\n *   const [routes] = React.useState([\n *     { key: 'music', title: 'Favorites', focusedIcon: 'heart', unfocusedIcon: 'heart-outline'},\n *     { key: 'albums', title: 'Albums', focusedIcon: 'album' },\n *     { key: 'recents', title: 'Recents', focusedIcon: 'history' },\n *     { key: 'notifications', title: 'Notifications', focusedIcon: 'bell', unfocusedIcon: 'bell-outline' },\n *   ]);\n *\n *   const renderScene = BottomNavigation.SceneMap({\n *     music: MusicRoute,\n *     albums: AlbumsRoute,\n *     recents: RecentsRoute,\n *     notifications: NotificationsRoute,\n *   });\n *\n *   return (\n *     <BottomNavigation\n *       navigationState={{ index, routes }}\n *       onIndexChange={setIndex}\n *       renderScene={renderScene}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst BottomNavigation = _ref3 => {\n  let {\n    navigationState,\n    renderScene,\n    renderIcon,\n    renderLabel,\n    renderTouchable = props => /*#__PURE__*/React.createElement(Touchable, props),\n    getLabelText = _ref4 => {\n      let {\n        route\n      } = _ref4;\n      return route.title;\n    },\n    getBadge = _ref5 => {\n      let {\n        route\n      } = _ref5;\n      return route.badge;\n    },\n    getColor = _ref6 => {\n      let {\n        route\n      } = _ref6;\n      return route.color;\n    },\n    getAccessibilityLabel = _ref7 => {\n      let {\n        route\n      } = _ref7;\n      return route.accessibilityLabel;\n    },\n    getTestID = _ref8 => {\n      let {\n        route\n      } = _ref8;\n      return route.testID;\n    },\n    activeColor,\n    inactiveColor,\n    keyboardHidesNavigationBar = Platform.OS === 'android',\n    barStyle,\n    labeled = true,\n    style,\n    sceneAnimationEnabled = false,\n    sceneAnimationType = 'opacity',\n    sceneAnimationEasing,\n    onTabPress,\n    onIndexChange,\n    shifting: shiftingProp,\n    safeAreaInsets,\n    labelMaxFontSizeMultiplier = 1,\n    compact: compactProp,\n    testID = 'bottom-navigation',\n    theme: themeOverrides,\n    getLazy = _ref9 => {\n      let {\n        route\n      } = _ref9;\n      return route.lazy;\n    }\n  } = _ref3;\n  const theme = useInternalTheme(themeOverrides);\n  const {\n    bottom,\n    left,\n    right\n  } = useSafeAreaInsets();\n  const {\n    scale\n  } = theme.animation;\n  const compact = compactProp ?? !theme.isV3;\n  let shifting = shiftingProp ?? (theme.isV3 ? false : navigationState.routes.length > 3);\n  if (shifting && navigationState.routes.length < 2) {\n    shifting = false;\n    console.warn('BottomNavigation needs at least 2 tabs to run shifting animation');\n  }\n  const focusedKey = navigationState.routes[navigationState.index].key;\n\n  /**\n   * Visibility of the navigation bar, visible state is 1 and invisible is 0.\n   */\n  const visibleAnim = useAnimatedValue(1);\n\n  /**\n   * Active state of individual tab items, active state is 1 and inactive state is 0.\n   */\n  const tabsAnims = useAnimatedValueArray(navigationState.routes.map(\n  // focused === 1, unfocused === 0\n  (_, i) => i === navigationState.index ? 1 : 0));\n\n  /**\n   * Active state of individual tab item positions:\n   * -1 if they're before the active tab, 0 if they're active, 1 if they're after the active tab\n   */\n  const tabsPositionAnims = useAnimatedValueArray(navigationState.routes.map((_, i) => i === navigationState.index ? 0 : i >= navigationState.index ? 1 : -1));\n\n  /**\n   * The top offset for each tab item to position it offscreen.\n   * Placing items offscreen helps to save memory usage for inactive screens with removeClippedSubviews.\n   * We use animated values for this to prevent unnecessary re-renders.\n   */\n  const offsetsAnims = useAnimatedValueArray(navigationState.routes.map(\n  // offscreen === 1, normal === 0\n  (_, i) => i === navigationState.index ? 0 : 1));\n\n  /**\n   * Index of the currently active tab. Used for setting the background color.\n   * We don't use the color as an animated value directly, because `setValue` seems to be buggy with colors?.\n   */\n  const indexAnim = useAnimatedValue(navigationState.index);\n\n  /**\n   * Animation for the background color ripple, used to determine it's scale and opacity.\n   */\n  const rippleAnim = useAnimatedValue(MIN_RIPPLE_SCALE);\n\n  /**\n   * Layout of the navigation bar. The width is used to determine the size and position of the ripple.\n   */\n  const [layout, onLayout] = useLayout();\n\n  /**\n   * List of loaded tabs, tabs will be loaded when navigated to.\n   */\n  const [loaded, setLoaded] = React.useState([focusedKey]);\n  if (!loaded.includes(focusedKey)) {\n    // Set the current tab to be loaded if it was not loaded before\n    setLoaded(loaded => [...loaded, focusedKey]);\n  }\n\n  /**\n   * Track whether the keyboard is visible to show and hide the navigation bar.\n   */\n  const [keyboardVisible, setKeyboardVisible] = React.useState(false);\n  const handleKeyboardShow = React.useCallback(() => {\n    setKeyboardVisible(true);\n    Animated.timing(visibleAnim, {\n      toValue: 0,\n      duration: 150 * scale,\n      useNativeDriver: true\n    }).start();\n  }, [scale, visibleAnim]);\n  const handleKeyboardHide = React.useCallback(() => {\n    Animated.timing(visibleAnim, {\n      toValue: 1,\n      duration: 100 * scale,\n      useNativeDriver: true\n    }).start(() => {\n      setKeyboardVisible(false);\n    });\n  }, [scale, visibleAnim]);\n  const animateToIndex = React.useCallback(index => {\n    // Reset the ripple to avoid glitch if it's currently animating\n    rippleAnim.setValue(MIN_RIPPLE_SCALE);\n    Animated.parallel([Animated.timing(rippleAnim, {\n      toValue: 1,\n      duration: theme.isV3 || shifting ? 400 * scale : 0,\n      useNativeDriver: true\n    }), ...navigationState.routes.map((_, i) => Animated.timing(tabsAnims[i], {\n      toValue: i === index ? 1 : 0,\n      duration: theme.isV3 || shifting ? 150 * scale : 0,\n      useNativeDriver: true,\n      easing: sceneAnimationEasing\n    })), ...navigationState.routes.map((_, i) => Animated.timing(tabsPositionAnims[i], {\n      toValue: i === index ? 0 : i >= index ? 1 : -1,\n      duration: theme.isV3 || shifting ? 150 * scale : 0,\n      useNativeDriver: true,\n      easing: sceneAnimationEasing\n    }))]).start(_ref10 => {\n      let {\n        finished\n      } = _ref10;\n      // Workaround a bug in native animations where this is reset after first animation\n      tabsAnims.map((tab, i) => tab.setValue(i === index ? 1 : 0));\n\n      // Update the index to change bar's background color and then hide the ripple\n      indexAnim.setValue(index);\n      rippleAnim.setValue(MIN_RIPPLE_SCALE);\n      if (finished) {\n        // Position all inactive screens offscreen to save memory usage\n        // Only do it when animation has finished to avoid glitches mid-transition if switching fast\n        offsetsAnims.forEach((offset, i) => {\n          if (i === index) {\n            offset.setValue(0);\n          } else {\n            offset.setValue(1);\n          }\n        });\n      }\n    });\n  }, [indexAnim, shifting, navigationState.routes, offsetsAnims, rippleAnim, scale, tabsAnims, tabsPositionAnims, sceneAnimationEasing, theme]);\n  React.useEffect(() => {\n    // Workaround for native animated bug in react-native@^0.57\n    // Context: https://github.com/callstack/react-native-paper/pull/637\n    animateToIndex(navigationState.index);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useIsKeyboardShown({\n    onShow: handleKeyboardShow,\n    onHide: handleKeyboardHide\n  });\n  const prevNavigationState = React.useRef();\n  React.useEffect(() => {\n    // Reset offsets of previous and current tabs before animation\n    offsetsAnims.forEach((offset, i) => {\n      var _prevNavigationState$;\n      if (i === navigationState.index || i === ((_prevNavigationState$ = prevNavigationState.current) === null || _prevNavigationState$ === void 0 ? void 0 : _prevNavigationState$.index)) {\n        offset.setValue(0);\n      }\n    });\n    animateToIndex(navigationState.index);\n  }, [navigationState.index, animateToIndex, offsetsAnims]);\n  const handleTabPress = index => {\n    const event = {\n      route: navigationState.routes[index],\n      defaultPrevented: false,\n      preventDefault: () => {\n        event.defaultPrevented = true;\n      }\n    };\n    onTabPress === null || onTabPress === void 0 ? void 0 : onTabPress(event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    if (index !== navigationState.index) {\n      prevNavigationState.current = navigationState;\n      onIndexChange(index);\n    }\n  };\n  const jumpTo = React.useCallback(key => {\n    const index = navigationState.routes.findIndex(route => route.key === key);\n    prevNavigationState.current = navigationState;\n    onIndexChange(index);\n  }, [navigationState.routes, onIndexChange]);\n  const {\n    routes\n  } = navigationState;\n  const {\n    colors,\n    dark: isDarkTheme,\n    mode,\n    isV3\n  } = theme;\n  const {\n    backgroundColor: customBackground,\n    elevation = 4\n  } = StyleSheet.flatten(barStyle) || {};\n  const approxBackgroundColor = customBackground ? customBackground : isDarkTheme && mode === 'adaptive' ? overlay(elevation, colors === null || colors === void 0 ? void 0 : colors.surface) : colors === null || colors === void 0 ? void 0 : colors.primary;\n  const v2BackgroundColorInterpolation = shifting ? indexAnim.interpolate({\n    inputRange: routes.map((_, i) => i),\n    // FIXME: does outputRange support ColorValue or just strings?\n    // @ts-expect-error\n    outputRange: routes.map(route => getColor({\n      route\n    }) || approxBackgroundColor)\n  }) : approxBackgroundColor;\n  const backgroundColor = isV3 ? customBackground || theme.colors.elevation.level2 : shifting ? v2BackgroundColorInterpolation : approxBackgroundColor;\n  const isDark = typeof approxBackgroundColor === 'string' ? !color(approxBackgroundColor).isLight() : true;\n  const textColor = isDark ? white : black;\n  const activeTintColor = getActiveTintColor({\n    activeColor,\n    defaultColor: textColor,\n    theme\n  });\n  const inactiveTintColor = getInactiveTintColor({\n    inactiveColor,\n    defaultColor: textColor,\n    theme\n  });\n  const touchColor = color(activeTintColor).alpha(0.12).rgb().string();\n  const maxTabWidth = routes.length > 3 ? MIN_TAB_WIDTH : MAX_TAB_WIDTH;\n  const maxTabBarWidth = maxTabWidth * routes.length;\n  const tabBarWidth = Math.min(layout.width, maxTabBarWidth);\n  const tabWidth = tabBarWidth / routes.length;\n  const rippleSize = layout.width / 4;\n  const insets = {\n    left: (safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.left) ?? left,\n    right: (safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.right) ?? right,\n    bottom: (safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.bottom) ?? bottom\n  };\n  return /*#__PURE__*/React.createElement(View, {\n    style: [styles.container, style],\n    testID: testID\n  }, /*#__PURE__*/React.createElement(View, {\n    style: [styles.content, {\n      backgroundColor: colors === null || colors === void 0 ? void 0 : colors.background\n    }]\n  }, routes.map((route, index) => {\n    var _prevNavigationState$2;\n    if (getLazy({\n      route\n    }) !== false && !loaded.includes(route.key)) {\n      // Don't render a screen if we've never navigated to it\n      return null;\n    }\n    const focused = navigationState.index === index;\n    const previouslyFocused = ((_prevNavigationState$2 = prevNavigationState.current) === null || _prevNavigationState$2 === void 0 ? void 0 : _prevNavigationState$2.index) === index;\n    const countAlphaOffscreen = sceneAnimationEnabled && (focused || previouslyFocused);\n    const renderToHardwareTextureAndroid = sceneAnimationEnabled && focused;\n    const opacity = sceneAnimationEnabled ? tabsPositionAnims[index].interpolate({\n      inputRange: [-1, 0, 1],\n      outputRange: [0, 1, 0]\n    }) : focused ? 1 : 0;\n    const top = sceneAnimationEnabled ? offsetsAnims[index].interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, FAR_FAR_AWAY]\n    }) : focused ? 0 : FAR_FAR_AWAY;\n    const left = sceneAnimationType === 'shifting' ? tabsPositionAnims[index].interpolate({\n      inputRange: [-1, 0, 1],\n      outputRange: [-50, 0, 50]\n    }) : 0;\n    const zIndex = focused ? 1 : 0;\n    return /*#__PURE__*/React.createElement(BottomNavigationRouteScreen, {\n      key: route.key,\n      pointerEvents: focused ? 'auto' : 'none',\n      accessibilityElementsHidden: !focused,\n      importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',\n      index: index,\n      visibility: opacity,\n      style: [StyleSheet.absoluteFill, {\n        zIndex\n      }],\n      collapsable: false,\n      removeClippedSubviews:\n      // On iOS, set removeClippedSubviews to true only when not focused\n      // This is an workaround for a bug where the clipped view never re-appears\n      Platform.OS === 'ios' ? navigationState.index !== index : true\n    }, /*#__PURE__*/React.createElement(Animated.View, _extends({}, Platform.OS === 'android' && {\n      needsOffscreenAlphaCompositing: countAlphaOffscreen\n    }, {\n      renderToHardwareTextureAndroid: renderToHardwareTextureAndroid,\n      style: [styles.content, {\n        opacity,\n        transform: [{\n          translateX: left\n        }, {\n          translateY: top\n        }]\n      }]\n    }), renderScene({\n      route,\n      jumpTo\n    })));\n  })), /*#__PURE__*/React.createElement(Surface, _extends({}, theme.isV3 && {\n    elevation: 0\n  }, {\n    testID: `${testID}-surface`,\n    style: [!theme.isV3 && styles.elevation, styles.bar, keyboardHidesNavigationBar // eslint-disable-next-line react-native/no-inline-styles\n    ? {\n      // When the keyboard is shown, slide down the navigation bar\n      transform: [{\n        translateY: visibleAnim.interpolate({\n          inputRange: [0, 1],\n          outputRange: [layout.height, 0]\n        })\n      }],\n      // Absolutely position the navigation bar so that the content is below it\n      // This is needed to avoid gap at bottom when the navigation bar is hidden\n      position: keyboardVisible ? 'absolute' : undefined\n    } : null, barStyle],\n    pointerEvents: layout.measured ? keyboardHidesNavigationBar && keyboardVisible ? 'none' : 'auto' : 'none',\n    onLayout: onLayout\n  }), /*#__PURE__*/React.createElement(Animated.View, {\n    style: [styles.barContent, {\n      backgroundColor\n    }],\n    testID: `${testID}-bar-content`\n  }, /*#__PURE__*/React.createElement(View, {\n    style: [styles.items, {\n      marginBottom: insets.bottom,\n      marginHorizontal: Math.max(insets.left, insets.right)\n    }, compact && {\n      maxWidth: maxTabBarWidth\n    }],\n    accessibilityRole: 'tablist',\n    testID: `${testID}-bar-content-wrapper`\n  }, shifting ? /*#__PURE__*/React.createElement(Animated.View, {\n    pointerEvents: \"none\",\n    style: [styles.ripple, {\n      // Since we have a single ripple, we have to reposition it so that it appears to expand from active tab.\n      // We need to move it from the top to center of the navigation bar and from the left to the active tab.\n      top: (BAR_HEIGHT - rippleSize) / 2,\n      left: tabWidth * (navigationState.index + 0.5) - rippleSize / 2,\n      height: rippleSize,\n      width: rippleSize,\n      borderRadius: rippleSize / 2,\n      backgroundColor: getColor({\n        route: routes[navigationState.index]\n      }),\n      transform: [{\n        // Scale to twice the size  to ensure it covers the whole navigation bar\n        scale: rippleAnim.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 8]\n        })\n      }],\n      opacity: rippleAnim.interpolate({\n        inputRange: [0, MIN_RIPPLE_SCALE, 0.3, 1],\n        outputRange: [0, 0, 1, 1]\n      })\n    }],\n    testID: `${testID}-bar-content-ripple`\n  }) : null, routes.map((route, index) => {\n    const focused = navigationState.index === index;\n    const active = tabsAnims[index];\n\n    // Scale the label up\n    const scale = labeled && shifting ? active.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.5, 1]\n    }) : 1;\n\n    // Move down the icon to account for no-label in shifting and smaller label in non-shifting.\n    const translateY = labeled ? shifting ? active.interpolate({\n      inputRange: [0, 1],\n      outputRange: [7, 0]\n    }) : 0 : 7;\n\n    // We render the active icon and label on top of inactive ones and cross-fade them on change.\n    // This trick gives the illusion that we are animating between active and inactive colors.\n    // This is to ensure that we can use native driver, as colors cannot be animated with native driver.\n    const activeOpacity = active;\n    const inactiveOpacity = active.interpolate({\n      inputRange: [0, 1],\n      outputRange: [1, 0]\n    });\n    const v3ActiveOpacity = focused ? 1 : 0;\n    const v3InactiveOpacity = shifting ? inactiveOpacity : focused ? 0 : 1;\n\n    // Scale horizontally the outline pill\n    const outlineScale = focused ? active.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.5, 1]\n    }) : 0;\n    const badge = getBadge({\n      route\n    });\n    const activeLabelColor = getLabelColor({\n      tintColor: activeTintColor,\n      hasColor: Boolean(activeColor),\n      focused,\n      defaultColor: textColor,\n      theme\n    });\n    const inactiveLabelColor = getLabelColor({\n      tintColor: inactiveTintColor,\n      hasColor: Boolean(inactiveColor),\n      focused,\n      defaultColor: textColor,\n      theme\n    });\n    const badgeStyle = {\n      top: !isV3 ? -2 : typeof badge === 'boolean' ? 4 : 2,\n      right: (badge != null && typeof badge !== 'boolean' ? String(badge).length * -2 : 0) - (!isV3 ? 2 : 0)\n    };\n    const isV3Shifting = isV3 && shifting && labeled;\n    const font = isV3 ? theme.fonts.labelMedium : {};\n    return renderTouchable({\n      key: route.key,\n      route,\n      borderless: true,\n      centered: true,\n      rippleColor: isV3 ? 'transparent' : touchColor,\n      onPress: () => handleTabPress(index),\n      testID: getTestID({\n        route\n      }),\n      accessibilityLabel: getAccessibilityLabel({\n        route\n      }),\n      accessibilityRole: Platform.OS === 'ios' ? 'button' : 'tab',\n      accessibilityState: {\n        selected: focused\n      },\n      style: [styles.item, isV3 && styles.v3Item],\n      children: /*#__PURE__*/React.createElement(View, {\n        pointerEvents: \"none\",\n        style: isV3 && (labeled ? styles.v3TouchableContainer : styles.v3NoLabelContainer)\n      }, /*#__PURE__*/React.createElement(Animated.View, {\n        style: [styles.iconContainer, isV3 && styles.v3IconContainer, (!isV3 || isV3Shifting) && {\n          transform: [{\n            translateY\n          }]\n        }]\n      }, isV3 && focused && /*#__PURE__*/React.createElement(Animated.View, {\n        style: [styles.outline, {\n          transform: [{\n            scaleX: outlineScale\n          }],\n          backgroundColor: theme.colors.secondaryContainer\n        }]\n      }), /*#__PURE__*/React.createElement(Animated.View, {\n        style: [styles.iconWrapper, isV3 && styles.v3IconWrapper, {\n          opacity: isV3 ? v3ActiveOpacity : activeOpacity\n        }]\n      }, renderIcon ? renderIcon({\n        route,\n        focused: true,\n        color: activeTintColor\n      }) : /*#__PURE__*/React.createElement(Icon, {\n        source: route.focusedIcon,\n        color: activeTintColor,\n        size: 24\n      })), /*#__PURE__*/React.createElement(Animated.View, {\n        style: [styles.iconWrapper, isV3 && styles.v3IconWrapper, {\n          opacity: isV3 ? v3InactiveOpacity : inactiveOpacity\n        }]\n      }, renderIcon ? renderIcon({\n        route,\n        focused: false,\n        color: inactiveTintColor\n      }) : /*#__PURE__*/React.createElement(Icon, {\n        source: theme.isV3 && route.unfocusedIcon !== undefined ? route.unfocusedIcon : route.focusedIcon,\n        color: inactiveTintColor,\n        size: 24\n      })), /*#__PURE__*/React.createElement(View, {\n        style: [styles.badgeContainer, badgeStyle]\n      }, typeof badge === 'boolean' ? /*#__PURE__*/React.createElement(Badge, {\n        visible: badge,\n        size: isV3 ? 6 : 8\n      }) : /*#__PURE__*/React.createElement(Badge, {\n        visible: badge != null,\n        size: 16\n      }, badge))), labeled ? /*#__PURE__*/React.createElement(Animated.View, {\n        style: [styles.labelContainer, !isV3 && {\n          transform: [{\n            scale\n          }]\n        }]\n      }, /*#__PURE__*/React.createElement(Animated.View, {\n        style: [styles.labelWrapper, (!isV3 || isV3Shifting) && {\n          opacity: activeOpacity\n        }]\n      }, renderLabel ? renderLabel({\n        route,\n        focused: true,\n        color: activeLabelColor\n      }) : /*#__PURE__*/React.createElement(Text, {\n        maxFontSizeMultiplier: labelMaxFontSizeMultiplier,\n        variant: \"labelMedium\",\n        style: [styles.label, {\n          color: activeLabelColor,\n          ...font\n        }]\n      }, getLabelText({\n        route\n      }))), shifting ? null : /*#__PURE__*/React.createElement(Animated.View, {\n        style: [styles.labelWrapper, {\n          opacity: inactiveOpacity\n        }]\n      }, renderLabel ? renderLabel({\n        route,\n        focused: false,\n        color: inactiveLabelColor\n      }) : /*#__PURE__*/React.createElement(Text, {\n        maxFontSizeMultiplier: labelMaxFontSizeMultiplier,\n        variant: \"labelMedium\",\n        selectable: false,\n        style: [styles.label, {\n          color: inactiveLabelColor,\n          ...font\n        }]\n      }, getLabelText({\n        route\n      })))) : !isV3 && /*#__PURE__*/React.createElement(View, {\n        style: styles.labelContainer\n      }))\n    });\n  })))));\n};\n\n/**\n * Function which takes a map of route keys to components.\n * Pure components are used to minimize re-rendering of the pages.\n * This drastically improves the animation performance.\n */\nBottomNavigation.SceneMap = scenes => {\n  return _ref11 => {\n    let {\n      route,\n      jumpTo\n    } = _ref11;\n    return /*#__PURE__*/React.createElement(SceneComponent, {\n      key: route.key,\n      component: scenes[route.key ? route.key : ''],\n      route: route,\n      jumpTo: jumpTo\n    });\n  };\n};\nexport default BottomNavigation;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  content: {\n    flex: 1\n  },\n  bar: {\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  barContent: {\n    alignItems: 'center',\n    overflow: 'hidden'\n  },\n  items: {\n    flexDirection: 'row',\n    ...(Platform.OS === 'web' ? {\n      width: '100%'\n    } : null)\n  },\n  item: {\n    flex: 1,\n    // Top padding is 6 and bottom padding is 10\n    // The extra 4dp bottom padding is offset by label's height\n    paddingVertical: 6\n  },\n  v3Item: {\n    paddingVertical: 0\n  },\n  ripple: {\n    position: 'absolute'\n  },\n  iconContainer: {\n    height: 24,\n    width: 24,\n    marginTop: 2,\n    marginHorizontal: 12,\n    alignSelf: 'center'\n  },\n  v3IconContainer: {\n    height: 32,\n    width: 32,\n    marginBottom: 4,\n    marginTop: 0,\n    justifyContent: 'center'\n  },\n  iconWrapper: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center'\n  },\n  v3IconWrapper: {\n    top: 4\n  },\n  labelContainer: {\n    height: 16,\n    paddingBottom: 2\n  },\n  labelWrapper: {\n    ...StyleSheet.absoluteFillObject\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  label: {\n    fontSize: 12,\n    height: BAR_HEIGHT,\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n    ...(Platform.OS === 'web' ? {\n      whiteSpace: 'nowrap',\n      alignSelf: 'center'\n    } : null)\n  },\n  badgeContainer: {\n    position: 'absolute',\n    left: 0\n  },\n  v3TouchableContainer: {\n    paddingTop: 12,\n    paddingBottom: 16\n  },\n  v3NoLabelContainer: {\n    height: 80,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  outline: {\n    width: OUTLINE_WIDTH,\n    height: OUTLINE_WIDTH / 2,\n    borderRadius: OUTLINE_WIDTH / 4,\n    alignSelf: 'center'\n  },\n  elevation: {\n    elevation: 4\n  }\n});\n//# sourceMappingURL=BottomNavigation.js.map"]},"metadata":{},"sourceType":"module"}