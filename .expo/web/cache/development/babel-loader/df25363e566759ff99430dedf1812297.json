{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"clearAccessibilityLabel\", \"clearIcon\", \"icon\", \"iconColor\", \"inputStyle\", \"onIconPress\", \"placeholder\", \"searchAccessibilityLabel\", \"elevation\", \"style\", \"theme\", \"value\", \"loading\", \"testID\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport { useInternalTheme } from \"../core/theming\";\nimport { forwardRef } from \"../utils/forwardRef\";\nimport ActivityIndicator from \"./ActivityIndicator\";\nimport IconButton from \"./IconButton/IconButton\";\nimport MaterialCommunityIcon from \"./MaterialCommunityIcon\";\nimport Surface from \"./Surface\";\nvar Searchbar = forwardRef(function (_ref, ref) {\n  var _theme$colors;\n  var _ref$clearAccessibili = _ref.clearAccessibilityLabel,\n    clearAccessibilityLabel = _ref$clearAccessibili === void 0 ? 'clear' : _ref$clearAccessibili,\n    clearIcon = _ref.clearIcon,\n    icon = _ref.icon,\n    customIconColor = _ref.iconColor,\n    inputStyle = _ref.inputStyle,\n    onIconPress = _ref.onIconPress,\n    placeholder = _ref.placeholder,\n    _ref$searchAccessibil = _ref.searchAccessibilityLabel,\n    searchAccessibilityLabel = _ref$searchAccessibil === void 0 ? 'search' : _ref$searchAccessibil,\n    _ref$elevation = _ref.elevation,\n    elevation = _ref$elevation === void 0 ? 1 : _ref$elevation,\n    style = _ref.style,\n    themeOverrides = _ref.theme,\n    value = _ref.value,\n    _ref$loading = _ref.loading,\n    loading = _ref$loading === void 0 ? false : _ref$loading,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? 'search-bar' : _ref$testID,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var root = React.useRef(null);\n  React.useImperativeHandle(ref, function () {\n    var input = root.current;\n    if (input) {\n      return {\n        focus: function focus() {\n          return input.focus();\n        },\n        clear: function clear() {\n          return input.clear();\n        },\n        setNativeProps: function setNativeProps(args) {\n          return input.setNativeProps(args);\n        },\n        isFocused: function isFocused() {\n          return input.isFocused();\n        },\n        blur: function blur() {\n          return input.blur();\n        }\n      };\n    }\n    var noop = function noop() {\n      throw new Error('TextInput is not available');\n    };\n    return {\n      focus: noop,\n      clear: noop,\n      setNativeProps: noop,\n      isFocused: noop,\n      blur: noop\n    };\n  });\n  var handleClearPress = function handleClearPress() {\n    var _root$current, _rest$onChangeText;\n    (_root$current = root.current) === null || _root$current === void 0 ? void 0 : _root$current.clear();\n    (_rest$onChangeText = rest.onChangeText) === null || _rest$onChangeText === void 0 ? void 0 : _rest$onChangeText.call(rest, '');\n  };\n  var colors = theme.colors,\n    roundness = theme.roundness,\n    dark = theme.dark,\n    isV3 = theme.isV3;\n  var textColor = isV3 ? theme.colors.onSurface : theme.colors.text;\n  var iconColor = customIconColor || (dark ? textColor : color(textColor).alpha(0.54).rgb().string());\n  var rippleColor = color(textColor).alpha(0.32).rgb().string();\n  return React.createElement(Surface, _extends({\n    style: [{\n      borderRadius: roundness\n    }, !isV3 && styles.elevation, styles.container, style]\n  }, theme.isV3 && {\n    elevation: elevation\n  }, {\n    theme: theme,\n    testID: testID + \"-container\"\n  }), React.createElement(IconButton, {\n    accessibilityRole: \"button\",\n    borderless: true,\n    rippleColor: rippleColor,\n    onPress: onIconPress,\n    iconColor: iconColor,\n    icon: icon || function (_ref2) {\n      var size = _ref2.size,\n        color = _ref2.color;\n      return React.createElement(MaterialCommunityIcon, {\n        name: \"magnify\",\n        color: color,\n        size: size,\n        direction: I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    theme: theme,\n    accessibilityLabel: searchAccessibilityLabel\n  }), React.createElement(TextInput, _extends({\n    style: [styles.input, _objectSpread(_objectSpread({\n      color: textColor\n    }, theme.isV3 ? theme.fonts.default : theme.fonts.regular), Platform.select({\n      web: {\n        outline: 'none'\n      }\n    })), inputStyle],\n    placeholder: placeholder || '',\n    placeholderTextColor: theme.isV3 ? theme.colors.onSurface : (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.placeholder,\n    selectionColor: colors === null || colors === void 0 ? void 0 : colors.primary,\n    underlineColorAndroid: \"transparent\",\n    returnKeyType: \"search\",\n    keyboardAppearance: dark ? 'dark' : 'light',\n    accessibilityRole: \"search\",\n    ref: root,\n    value: value,\n    testID: testID\n  }, rest)), loading ? React.createElement(ActivityIndicator, {\n    testID: \"activity-indicator\",\n    style: styles.loader\n  }) : React.createElement(View, {\n    pointerEvents: value ? 'auto' : 'none',\n    testID: testID + \"-icon-wrapper\"\n  }, React.createElement(IconButton, {\n    borderless: true,\n    accessibilityLabel: clearAccessibilityLabel,\n    iconColor: value ? iconColor : 'rgba(255, 255, 255, 0)',\n    rippleColor: rippleColor,\n    onPress: handleClearPress,\n    icon: clearIcon || function (_ref3) {\n      var size = _ref3.size,\n        color = _ref3.color;\n      return React.createElement(MaterialCommunityIcon, {\n        name: \"close\",\n        color: color,\n        size: size,\n        direction: I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    accessibilityRole: \"button\",\n    theme: theme\n  })));\n});\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  input: {\n    flex: 1,\n    fontSize: 18,\n    paddingLeft: 8,\n    alignSelf: 'stretch',\n    textAlign: I18nManager.getConstants().isRTL ? 'right' : 'left',\n    minWidth: 0\n  },\n  elevation: {\n    elevation: 4\n  },\n  loader: {\n    margin: 10\n  }\n});\nexport default Searchbar;","map":{"version":3,"sources":["Searchbar.tsx"],"names":["React","color","useInternalTheme","forwardRef","ActivityIndicator","IconButton","MaterialCommunityIcon","Surface","Searchbar","clearAccessibilityLabel","clearIcon","icon","iconColor","customIconColor","inputStyle","onIconPress","placeholder","searchAccessibilityLabel","elevation","style","theme","themeOverrides","value","loading","testID","rest","ref","root","useRef","useImperativeHandle","input","current","focus","clear","setNativeProps","args","isFocused","blur","noop","Error","handleClearPress","onChangeText","colors","roundness","dark","isV3","textColor","onSurface","text","alpha","rgb","string","rippleColor","borderRadius","styles","container","size","I18nManager","getConstants","isRTL","fonts","default","regular","Platform","select","web","outline","primary","loader","StyleSheet","create","flexDirection","alignItems","flex","fontSize","paddingLeft","alignSelf","textAlign","minWidth","margin"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { I18nManager, Platform, StyleSheet, TextInput, View } from 'react-native';\nimport color from 'color';\nimport { useInternalTheme } from '../core/theming';\nimport { forwardRef } from '../utils/forwardRef';\nimport ActivityIndicator from './ActivityIndicator';\nimport IconButton from './IconButton/IconButton';\nimport MaterialCommunityIcon from './MaterialCommunityIcon';\nimport Surface from './Surface';\n/**\n * Searchbar is a simple input box where users can type search queries.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/searchbar.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Searchbar } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [searchQuery, setSearchQuery] = React.useState('');\n *\n *   const onChangeSearch = query => setSearchQuery(query);\n *\n *   return (\n *     <Searchbar\n *       placeholder=\"Search\"\n *       onChangeText={onChangeSearch}\n *       value={searchQuery}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n\n * ```\n */\nconst Searchbar = forwardRef((_ref, ref) => {\n  var _theme$colors;\n  let {\n    clearAccessibilityLabel = 'clear',\n    clearIcon,\n    icon,\n    iconColor: customIconColor,\n    inputStyle,\n    onIconPress,\n    placeholder,\n    searchAccessibilityLabel = 'search',\n    elevation = 1,\n    style,\n    theme: themeOverrides,\n    value,\n    loading = false,\n    testID = 'search-bar',\n    ...rest\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const root = React.useRef(null);\n  React.useImperativeHandle(ref, () => {\n    const input = root.current;\n    if (input) {\n      return {\n        focus: () => input.focus(),\n        clear: () => input.clear(),\n        setNativeProps: args => input.setNativeProps(args),\n        isFocused: () => input.isFocused(),\n        blur: () => input.blur()\n      };\n    }\n    const noop = () => {\n      throw new Error('TextInput is not available');\n    };\n    return {\n      focus: noop,\n      clear: noop,\n      setNativeProps: noop,\n      isFocused: noop,\n      blur: noop\n    };\n  });\n  const handleClearPress = () => {\n    var _root$current, _rest$onChangeText;\n    (_root$current = root.current) === null || _root$current === void 0 ? void 0 : _root$current.clear();\n    (_rest$onChangeText = rest.onChangeText) === null || _rest$onChangeText === void 0 ? void 0 : _rest$onChangeText.call(rest, '');\n  };\n  const {\n    colors,\n    roundness,\n    dark,\n    isV3\n  } = theme;\n  const textColor = isV3 ? theme.colors.onSurface : theme.colors.text;\n  const iconColor = customIconColor || (dark ? textColor : color(textColor).alpha(0.54).rgb().string());\n  const rippleColor = color(textColor).alpha(0.32).rgb().string();\n  return /*#__PURE__*/React.createElement(Surface, _extends({\n    style: [{\n      borderRadius: roundness\n    }, !isV3 && styles.elevation, styles.container, style]\n  }, theme.isV3 && {\n    elevation\n  }, {\n    theme: theme,\n    testID: `${testID}-container`\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    accessibilityRole: \"button\",\n    borderless: true,\n    rippleColor: rippleColor,\n    onPress: onIconPress,\n    iconColor: iconColor,\n    icon: icon || (_ref2 => {\n      let {\n        size,\n        color\n      } = _ref2;\n      return /*#__PURE__*/React.createElement(MaterialCommunityIcon, {\n        name: \"magnify\",\n        color: color,\n        size: size,\n        direction: I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    }),\n    theme: theme,\n    accessibilityLabel: searchAccessibilityLabel\n  }), /*#__PURE__*/React.createElement(TextInput, _extends({\n    style: [styles.input, {\n      color: textColor,\n      ...(theme.isV3 ? theme.fonts.default : theme.fonts.regular),\n      ...Platform.select({\n        web: {\n          outline: 'none'\n        }\n      })\n    }, inputStyle],\n    placeholder: placeholder || '',\n    placeholderTextColor: theme.isV3 ? theme.colors.onSurface : (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.placeholder,\n    selectionColor: colors === null || colors === void 0 ? void 0 : colors.primary,\n    underlineColorAndroid: \"transparent\",\n    returnKeyType: \"search\",\n    keyboardAppearance: dark ? 'dark' : 'light',\n    accessibilityRole: \"search\",\n    ref: root,\n    value: value,\n    testID: testID\n  }, rest)), loading ? /*#__PURE__*/React.createElement(ActivityIndicator, {\n    testID: \"activity-indicator\",\n    style: styles.loader\n  }) :\n  /*#__PURE__*/\n  // Clear icon should be always rendered within Searchbar – it's transparent,\n  // without touch events, when there is no value. It's done to avoid issues\n  // with the abruptly stopping ripple effect and changing bar width on web,\n  // when clearing the value.\n  React.createElement(View, {\n    pointerEvents: value ? 'auto' : 'none',\n    testID: `${testID}-icon-wrapper`\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    borderless: true,\n    accessibilityLabel: clearAccessibilityLabel,\n    iconColor: value ? iconColor : 'rgba(255, 255, 255, 0)',\n    rippleColor: rippleColor,\n    onPress: handleClearPress,\n    icon: clearIcon || (_ref3 => {\n      let {\n        size,\n        color\n      } = _ref3;\n      return /*#__PURE__*/React.createElement(MaterialCommunityIcon, {\n        name: \"close\",\n        color: color,\n        size: size,\n        direction: I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    }),\n    accessibilityRole: \"button\",\n    theme: theme\n  })));\n});\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  input: {\n    flex: 1,\n    fontSize: 18,\n    paddingLeft: 8,\n    alignSelf: 'stretch',\n    textAlign: I18nManager.getConstants().isRTL ? 'right' : 'left',\n    minWidth: 0\n  },\n  elevation: {\n    elevation: 4\n  },\n  loader: {\n    margin: 10\n  }\n});\nexport default Searchbar;\n//# sourceMappingURL=Searchbar.js.map"]},"metadata":{},"sourceType":"module"}