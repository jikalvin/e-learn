{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"onPress\", \"style\", \"children\", \"pointerEvents\", \"theme\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport { useInternalTheme } from \"../../core/theming\";\nimport { black, white } from \"../../styles/themes/v2/colors\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nvar DataTableRow = function DataTableRow(_ref) {\n  var onPress = _ref.onPress,\n    style = _ref.style,\n    children = _ref.children,\n    pointerEvents = _ref.pointerEvents,\n    themeOverrides = _ref.theme,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var borderBottomColor = theme.isV3 ? theme.colors.surfaceVariant : color(theme.dark ? white : black).alpha(0.12).rgb().string();\n  return React.createElement(TouchableRipple, _extends({}, rest, {\n    onPress: onPress,\n    style: [styles.container, {\n      borderBottomColor: borderBottomColor\n    }, style]\n  }), React.createElement(View, {\n    style: styles.content,\n    pointerEvents: pointerEvents\n  }, children));\n};\nDataTableRow.displayName = 'DataTable.Row';\nvar styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});\nexport default DataTableRow;\nexport { DataTableRow };","map":{"version":3,"sources":["DataTableRow.tsx"],"names":["React","color","useInternalTheme","black","white","TouchableRipple","DataTableRow","onPress","style","children","pointerEvents","theme","themeOverrides","rest","borderBottomColor","isV3","colors","surfaceVariant","dark","alpha","rgb","string","styles","container","content","displayName","StyleSheet","create","borderStyle","borderBottomWidth","hairlineWidth","minHeight","paddingHorizontal","flex","flexDirection"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAA,UAAA;AAAA,OAAA,IAAA;AAU9B,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,gBAAgB;AACzB,SAASC,KAAK,EAAEC,KAAK;AAErB,OAAOC,eAAe;AAkDtB,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAG,IAAA,EAOR;EAPS,IACpBC,OAAO,GAMD,IAAA,CANNA,OAAO;IACPC,KAAK,GAKC,IAAA,CALNA,KAAK;IACLC,QAAQ,GAIF,IAAA,CAJNA,QAAQ;IACRC,aAAa,GAGP,IAAA,CAHNA,aAAa;IACNE,cAAc,GAEf,IAAA,CAFND,KAAK;IACFE,IAAAA,GAAAA,wBAAAA,CACG,IAAA,EAAA,SAAA;EACN,IAAMF,KAAK,GAAGT,gBAAgB,CAACU,cAAc,CAAC;EAC9C,IAAME,iBAAiB,GAAGH,KAAK,CAACI,IAAI,GAChCJ,KAAK,CAACK,MAAM,CAACC,cAAc,GAC3BhB,KAAK,CAACU,KAAK,CAACO,IAAI,GAAGd,KAAK,GAAGD,KAAK,CAAC,CAC9BgB,KAAK,CAAC,IAAI,CAAC,CACXC,GAAG,EAAE,CACLC,MAAM,EAAE;EAEf,OACE,KAAA,CAAA,aAAA,CAAC,eAAe,EAAA,QAAA,CAAA,CAAA,CAAA,EACVR,IAAI,EAAA;IACR,OAAO,EAAEN,OAAQ;IACjB,KAAK,EAAE,CAACe,MAAM,CAACC,SAAS,EAAE;MAAET,iBAAAA,EAAAA;IAAkB,CAAC,EAAEN,KAAK;EAAE,CAAA,CAAA,EAExD,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA;IAAC,KAAK,EAAEc,MAAM,CAACE,OAAQ;IAAC,aAAa,EAAEd;EAAc,CAAA,EACvDD,QAAQ,CACJ,CACS;AAEtB,CAAC;AAEDH,YAAY,CAACmB,WAAW,GAAG,eAAe;AAE1C,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAM,CAAC;EAC/BJ,SAAS,EAAE;IACTK,WAAW,EAAE,OAAO;IACpBC,iBAAiB,EAAEH,UAAU,CAACI,aAAa;IAC3CC,SAAS,EAAE,EAAE;IACbC,iBAAiB,EAAE;EACrB,CAAC;EACDR,OAAO,EAAE;IACPS,IAAI,EAAE,CAAC;IACPC,aAAa,EAAE;EACjB;AACF,CAAC,CAAC;AAEF,eAAe5B,YAAY;AAG3B,SAASA,YAAY","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport color from 'color';\nimport { useInternalTheme } from '../../core/theming';\nimport { black, white } from '../../styles/themes/v2/colors';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\n/**\n * A component to show a single row inside of a table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-row-cell.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableRow = _ref => {\n  let {\n    onPress,\n    style,\n    children,\n    pointerEvents,\n    theme: themeOverrides,\n    ...rest\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const borderBottomColor = theme.isV3 ? theme.colors.surfaceVariant : color(theme.dark ? white : black).alpha(0.12).rgb().string();\n  return /*#__PURE__*/React.createElement(TouchableRipple, _extends({}, rest, {\n    onPress: onPress,\n    style: [styles.container, {\n      borderBottomColor\n    }, style]\n  }), /*#__PURE__*/React.createElement(View, {\n    style: styles.content,\n    pointerEvents: pointerEvents\n  }, children));\n};\nDataTableRow.displayName = 'DataTable.Row';\nconst styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});\nexport default DataTableRow;\n\n// @component-docs ignore-next-line\nexport { DataTableRow };\n//# sourceMappingURL=DataTableRow.js.map"]},"metadata":{},"sourceType":"module"}