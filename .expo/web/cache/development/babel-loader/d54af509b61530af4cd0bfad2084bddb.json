{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useInternalTheme } from \"../../core/theming\";\nimport MaterialCommunityIcon from \"../MaterialCommunityIcon\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport Text from \"../Typography/Text\";\nimport { ListAccordionGroupContext } from \"./ListAccordionGroup\";\nimport { getAccordionColors } from \"./utils\";\nvar ListAccordion = function ListAccordion(_ref) {\n  var _theme$colors, _theme$colors2;\n  var left = _ref.left,\n    right = _ref.right,\n    title = _ref.title,\n    description = _ref.description,\n    children = _ref.children,\n    themeOverrides = _ref.theme,\n    titleStyle = _ref.titleStyle,\n    descriptionStyle = _ref.descriptionStyle,\n    _ref$titleNumberOfLin = _ref.titleNumberOfLines,\n    titleNumberOfLines = _ref$titleNumberOfLin === void 0 ? 1 : _ref$titleNumberOfLin,\n    _ref$descriptionNumbe = _ref.descriptionNumberOfLines,\n    descriptionNumberOfLines = _ref$descriptionNumbe === void 0 ? 2 : _ref$descriptionNumbe,\n    style = _ref.style,\n    id = _ref.id,\n    testID = _ref.testID,\n    onPress = _ref.onPress,\n    onLongPress = _ref.onLongPress,\n    delayLongPress = _ref.delayLongPress,\n    expandedProp = _ref.expanded,\n    accessibilityLabel = _ref.accessibilityLabel,\n    _ref$pointerEvents = _ref.pointerEvents,\n    pointerEvents = _ref$pointerEvents === void 0 ? 'none' : _ref$pointerEvents;\n  var theme = useInternalTheme(themeOverrides);\n  var _React$useState = React.useState(expandedProp || false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    expanded = _React$useState2[0],\n    setExpanded = _React$useState2[1];\n  var handlePressAction = function handlePressAction(e) {\n    onPress === null || onPress === void 0 ? void 0 : onPress(e);\n    if (expandedProp === undefined) {\n      setExpanded(function (expanded) {\n        return !expanded;\n      });\n    }\n  };\n  var expandedInternal = expandedProp !== undefined ? expandedProp : expanded;\n  var groupContext = React.useContext(ListAccordionGroupContext);\n  if (groupContext !== null && !id) {\n    throw new Error('List.Accordion is used inside a List.AccordionGroup without specifying an id prop.');\n  }\n  var isExpanded = groupContext ? groupContext.expandedId === id : expandedInternal;\n  var _getAccordionColors = getAccordionColors({\n      theme: theme,\n      isExpanded: isExpanded\n    }),\n    titleColor = _getAccordionColors.titleColor,\n    descriptionColor = _getAccordionColors.descriptionColor,\n    titleTextColor = _getAccordionColors.titleTextColor,\n    rippleColor = _getAccordionColors.rippleColor;\n  var handlePress = groupContext && id !== undefined ? function () {\n    return groupContext.onAccordionPress(id);\n  } : handlePressAction;\n  return React.createElement(View, null, React.createElement(View, {\n    style: {\n      backgroundColor: theme === null || theme === void 0 ? void 0 : (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.background\n    }\n  }, React.createElement(TouchableRipple, {\n    style: [styles.container, style],\n    onPress: handlePress,\n    onLongPress: onLongPress,\n    delayLongPress: delayLongPress,\n    rippleColor: rippleColor,\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      expanded: isExpanded\n    },\n    accessibilityLabel: accessibilityLabel,\n    testID: testID,\n    theme: theme,\n    borderless: true\n  }, React.createElement(View, {\n    style: styles.row,\n    pointerEvents: pointerEvents\n  }, left ? left({\n    color: isExpanded ? (_theme$colors2 = theme.colors) === null || _theme$colors2 === void 0 ? void 0 : _theme$colors2.primary : descriptionColor\n  }) : null, React.createElement(View, {\n    style: [styles.item, styles.content]\n  }, React.createElement(Text, {\n    selectable: false,\n    numberOfLines: titleNumberOfLines,\n    style: [styles.title, {\n      color: titleTextColor\n    }, titleStyle]\n  }, title), description ? React.createElement(Text, {\n    selectable: false,\n    numberOfLines: descriptionNumberOfLines,\n    style: [styles.description, {\n      color: descriptionColor\n    }, descriptionStyle]\n  }, description) : null), React.createElement(View, {\n    style: [styles.item, description ? styles.multiline : undefined]\n  }, right ? right({\n    isExpanded: isExpanded\n  }) : React.createElement(MaterialCommunityIcon, {\n    name: isExpanded ? 'chevron-up' : 'chevron-down',\n    color: theme.isV3 ? descriptionColor : titleColor,\n    size: 24,\n    direction: I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n  }))))), isExpanded ? React.Children.map(children, function (child) {\n    if (left && React.isValidElement(child) && !child.props.left && !child.props.right) {\n      return React.cloneElement(child, {\n        style: [styles.child, child.props.style],\n        theme: theme\n      });\n    }\n    return child;\n  }) : null);\n};\nListAccordion.displayName = 'List.Accordion';\nvar styles = StyleSheet.create({\n  container: {\n    padding: 8\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  multiline: {\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 16\n  },\n  description: {\n    fontSize: 14\n  },\n  item: {\n    margin: 8\n  },\n  child: {\n    paddingLeft: 64\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center'\n  }\n});\nexport default ListAccordion;","map":{"version":3,"sources":["ListAccordion.tsx"],"names":["React","useInternalTheme","MaterialCommunityIcon","TouchableRipple","Text","ListAccordionGroupContext","getAccordionColors","ListAccordion","left","right","title","description","children","theme","themeOverrides","titleStyle","descriptionStyle","titleNumberOfLines","descriptionNumberOfLines","style","id","testID","onPress","onLongPress","delayLongPress","expanded","expandedProp","accessibilityLabel","pointerEvents","setExpanded","useState","handlePressAction","e","undefined","expandedInternal","groupContext","useContext","Error","isExpanded","expandedId","titleColor","descriptionColor","titleTextColor","rippleColor","handlePress","onAccordionPress","backgroundColor","colors","background","styles","container","row","color","primary","item","content","multiline","isV3","I18nManager","getConstants","isRTL","Children","map","child","isValidElement","props","cloneElement","displayName","StyleSheet","create","padding","flexDirection","alignItems","height","justifyContent","fontSize","margin","paddingLeft","flex"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["import * as React from 'react';\nimport { I18nManager, StyleSheet, View } from 'react-native';\nimport { useInternalTheme } from '../../core/theming';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport { ListAccordionGroupContext } from './ListAccordionGroup';\nimport { getAccordionColors } from './utils';\n/**\n * A component used to display an expandable list item.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/list-accordion-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/list-accordion-2.png\" />\n *   <img class=\"medium\" src=\"screenshots/list-accordion-3.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [expanded, setExpanded] = React.useState(true);\n *\n *   const handlePress = () => setExpanded(!expanded);\n *\n *   return (\n *     <List.Section title=\"Accordions\">\n *       <List.Accordion\n *         title=\"Uncontrolled Accordion\"\n *         left={props => <List.Icon {...props} icon=\"folder\" />}>\n *         <List.Item title=\"First item\" />\n *         <List.Item title=\"Second item\" />\n *       </List.Accordion>\n *\n *       <List.Accordion\n *         title=\"Controlled Accordion\"\n *         left={props => <List.Icon {...props} icon=\"folder\" />}\n *         expanded={expanded}\n *         onPress={handlePress}>\n *         <List.Item title=\"First item\" />\n *         <List.Item title=\"Second item\" />\n *       </List.Accordion>\n *     </List.Section>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst ListAccordion = _ref => {\n  var _theme$colors, _theme$colors2;\n  let {\n    left,\n    right,\n    title,\n    description,\n    children,\n    theme: themeOverrides,\n    titleStyle,\n    descriptionStyle,\n    titleNumberOfLines = 1,\n    descriptionNumberOfLines = 2,\n    style,\n    id,\n    testID,\n    onPress,\n    onLongPress,\n    delayLongPress,\n    expanded: expandedProp,\n    accessibilityLabel,\n    pointerEvents = 'none'\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const [expanded, setExpanded] = React.useState(expandedProp || false);\n  const handlePressAction = e => {\n    onPress === null || onPress === void 0 ? void 0 : onPress(e);\n    if (expandedProp === undefined) {\n      // Only update state of the `expanded` prop was not passed\n      // If it was passed, the component will act as a controlled component\n      setExpanded(expanded => !expanded);\n    }\n  };\n  const expandedInternal = expandedProp !== undefined ? expandedProp : expanded;\n  const groupContext = React.useContext(ListAccordionGroupContext);\n  if (groupContext !== null && !id) {\n    throw new Error('List.Accordion is used inside a List.AccordionGroup without specifying an id prop.');\n  }\n  const isExpanded = groupContext ? groupContext.expandedId === id : expandedInternal;\n  const {\n    titleColor,\n    descriptionColor,\n    titleTextColor,\n    rippleColor\n  } = getAccordionColors({\n    theme,\n    isExpanded\n  });\n  const handlePress = groupContext && id !== undefined ? () => groupContext.onAccordionPress(id) : handlePressAction;\n  return /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(View, {\n    style: {\n      backgroundColor: theme === null || theme === void 0 ? void 0 : (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.background\n    }\n  }, /*#__PURE__*/React.createElement(TouchableRipple, {\n    style: [styles.container, style],\n    onPress: handlePress,\n    onLongPress: onLongPress,\n    delayLongPress: delayLongPress,\n    rippleColor: rippleColor,\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      expanded: isExpanded\n    },\n    accessibilityLabel: accessibilityLabel,\n    testID: testID,\n    theme: theme,\n    borderless: true\n  }, /*#__PURE__*/React.createElement(View, {\n    style: styles.row,\n    pointerEvents: pointerEvents\n  }, left ? left({\n    color: isExpanded ? (_theme$colors2 = theme.colors) === null || _theme$colors2 === void 0 ? void 0 : _theme$colors2.primary : descriptionColor\n  }) : null, /*#__PURE__*/React.createElement(View, {\n    style: [styles.item, styles.content]\n  }, /*#__PURE__*/React.createElement(Text, {\n    selectable: false,\n    numberOfLines: titleNumberOfLines,\n    style: [styles.title, {\n      color: titleTextColor\n    }, titleStyle]\n  }, title), description ? /*#__PURE__*/React.createElement(Text, {\n    selectable: false,\n    numberOfLines: descriptionNumberOfLines,\n    style: [styles.description, {\n      color: descriptionColor\n    }, descriptionStyle]\n  }, description) : null), /*#__PURE__*/React.createElement(View, {\n    style: [styles.item, description ? styles.multiline : undefined]\n  }, right ? right({\n    isExpanded: isExpanded\n  }) : /*#__PURE__*/React.createElement(MaterialCommunityIcon, {\n    name: isExpanded ? 'chevron-up' : 'chevron-down',\n    color: theme.isV3 ? descriptionColor : titleColor,\n    size: 24,\n    direction: I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n  }))))), isExpanded ? React.Children.map(children, child => {\n    if (left && /*#__PURE__*/React.isValidElement(child) && !child.props.left && !child.props.right) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        style: [styles.child, child.props.style],\n        theme\n      });\n    }\n    return child;\n  }) : null);\n};\nListAccordion.displayName = 'List.Accordion';\nconst styles = StyleSheet.create({\n  container: {\n    padding: 8\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  multiline: {\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 16\n  },\n  description: {\n    fontSize: 14\n  },\n  item: {\n    margin: 8\n  },\n  child: {\n    paddingLeft: 64\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center'\n  }\n});\nexport default ListAccordion;\n//# sourceMappingURL=ListAccordion.js.map"]},"metadata":{},"sourceType":"module"}