{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"name\", \"color\", \"size\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { black } from \"../styles/themes/v2/colors\";\nvar MaterialCommunityIcons;\ntry {\n  MaterialCommunityIcons = require(\"@expo/vector-icons/MaterialCommunityIcons\").default;\n} catch (e) {\n  var isErrorLogged = false;\n  MaterialCommunityIcons = function MaterialCommunityIcons(_ref) {\n    var name = _ref.name,\n      color = _ref.color,\n      size = _ref.size,\n      rest = _objectWithoutProperties(_ref, _excluded);\n    if (!isErrorLogged) {\n      if (!/(Cannot find module|Module not found|Cannot resolve module)/.test(e.message)) {\n        console.error(e);\n      }\n      console.warn(\"Tried to use the icon '\" + name + \"' in a component from 'react-native-paper', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.\", \"To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/icons.html.\");\n      isErrorLogged = true;\n    }\n    return React.createElement(Text, _extends({}, rest, {\n      style: [styles.icon, {\n        color: color,\n        fontSize: size\n      }],\n      pointerEvents: \"none\",\n      selectable: false\n    }), \"\\u25A1\");\n  };\n}\nexport var accessibilityProps = Platform.OS === 'web' ? {\n  role: 'img',\n  focusable: false\n} : {\n  accessibilityElementsHidden: true,\n  importantForAccessibility: 'no-hide-descendants'\n};\nvar defaultIcon = function defaultIcon(_ref2) {\n  var name = _ref2.name,\n    _ref2$color = _ref2.color,\n    color = _ref2$color === void 0 ? black : _ref2$color,\n    size = _ref2.size,\n    direction = _ref2.direction,\n    allowFontScaling = _ref2.allowFontScaling;\n  return React.createElement(MaterialCommunityIcons, _extends({\n    allowFontScaling: allowFontScaling,\n    name: name,\n    color: color,\n    size: size,\n    style: [{\n      transform: [{\n        scaleX: direction === 'rtl' ? -1 : 1\n      }],\n      lineHeight: size\n    }, styles.icon],\n    pointerEvents: \"none\",\n    selectable: false\n  }, accessibilityProps));\n};\nvar styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent'\n  }\n});\nexport default defaultIcon;","map":{"version":3,"sources":["MaterialCommunityIcon.tsx"],"names":["React","black","MaterialCommunityIcons","require","default","e","isErrorLogged","name","color","size","rest","test","message","console","error","warn","styles","icon","fontSize","accessibilityProps","Platform","OS","role","focusable","accessibilityElementsHidden","importantForAccessibility","defaultIcon","direction","allowFontScaling","transform","scaleX","lineHeight","StyleSheet","create","backgroundColor"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAA,UAAA;AAAA,OAAA,IAAA;AAAA,OAAA,QAAA;AAG9B,SAASC,KAAK;AAUd,IAAIC,sBAOH;AAED,IAAI;EAEFA,sBAAsB,GACpBC,OAAO,6CAAoD,CAACC,OAAO;AACvE,CAAC,CAAC,OAAOC,CAAC,EAAE;EACV,IAAIC,aAAa,GAAG,KAAK;EAGzBJ,sBAAsB,GAAG,SAAA,uBAAA,IAAA,EAAoC;IAAnC,IAAEK,IAAI,GAAwB,IAAA,CAA5BA,IAAI;MAAEC,KAAK,GAAiB,IAAA,CAAtBA,KAAK;MAAEC,IAAI,GAAW,IAAA,CAAfA,IAAI;MAAKC,IAAAA,GAAAA,wBAAAA,CAAM,IAAA,EAAA,SAAA;IAEtD,IAAI,CAACJ,aAAa,EAAE;MAClB,IACE,CAAC,6DAA6D,CAACK,IAAI,CAChEN,CAAC,CAASO,OAAO,CACnB,EACD;QACAC,OAAO,CAACC,KAAK,CAACT,CAAC,CAAC;MAClB;MAEAQ,OAAO,CAACE,IAAI,6BACgBR,IAAK,qSAEhC;MAEDD,aAAa,GAAG,IAAI;IACtB;IAEA,OACE,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA,QAAA,CAAA,CAAA,CAAA,EACCI,IAAI,EAAA;MACR,KAAK,EAAE,CAACM,MAAM,CAACC,IAAI,EAAE;QAAET,KAAK,EAALA,KAAK;QAAEU,QAAQ,EAAET;MAAK,CAAC,CAAA;MAE9C,aAAa,EAAC,MAAM;MACpB,UAAU,EAAE;IAAM,CAAA,CAAA,EAAA,QAAA,CAGb;EAEX,CAAC;AACH;AAEA,OAAO,IAAMU,kBAAkB,GAC7BC,QAAQ,CAACC,EAAE,KAAK,KAAK,GACjB;EACEC,IAAI,EAAE,KAAK;EACXC,SAAS,EAAE;AACb,CAAC,GACD;EACEC,2BAA2B,EAAE,IAAI;EACjCC,yBAAyB,EACvB;AACJ,CAAC;AAEP,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAG,KAAA,EAAA;EAAA,IAClBnB,IAAI,GAKM,KAAA,CALVA,IAAI;IAAA,WAAA,GAKM,KAAA,CAJVC,KAAK;IAALA,KAAK,GAAA,WAAA,cAAGP,KAAK,GAAA,WAAA;IACbQ,IAAI,GAGM,KAAA,CAHVA,IAAI;IACJkB,SAAS,GAEC,KAAA,CAFVA,SAAS;IACTC,gBAAAA,GACU,KAAA,CADVA,gBAAAA;EACU,OACV,KAAA,CAAA,aAAA,CAAC,sBAAsB,EAAA,QAAA,CAAA;IACrB,gBAAgB,EAAEA,gBAAiB;IACnC,IAAI,EAAErB,IAAK;IACX,KAAK,EAAEC,KAAM;IACb,IAAI,EAAEC,IAAK;IACX,KAAK,EAAE,CACL;MACEoB,SAAS,EAAE,CAAC;QAAEC,MAAM,EAAEH,SAAS,KAAK,KAAK,GAAG,CAAC,CAAC,GAAG;MAAE,CAAC,CAAC;MACrDI,UAAU,EAAEtB;IACd,CAAC,EACDO,MAAM,CAACC,IAAI,CACX;IACF,aAAa,EAAC,MAAM;IACpB,UAAU,EAAE;EAAM,CAAA,EACdE,kBAAkB,CAAA,CACtB;AAAA,CACH;AAED,IAAMH,MAAM,GAAGgB,UAAU,CAACC,MAAM,CAAC;EAE/BhB,IAAI,EAAE;IACJiB,eAAe,EAAE;EACnB;AACF,CAAC,CAAC;AAEF,eAAeR,WAAW","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { StyleSheet, Text, Platform } from 'react-native';\nimport { black } from '../styles/themes/v2/colors';\nlet MaterialCommunityIcons;\ntry {\n  // Optionally require vector-icons\n  MaterialCommunityIcons = require('react-native-vector-icons/MaterialCommunityIcons').default;\n} catch (e) {\n  let isErrorLogged = false;\n\n  // Fallback component for icons\n  MaterialCommunityIcons = _ref => {\n    let {\n      name,\n      color,\n      size,\n      ...rest\n    } = _ref;\n    /* eslint-disable no-console */\n    if (!isErrorLogged) {\n      if (!/(Cannot find module|Module not found|Cannot resolve module)/.test(e.message)) {\n        console.error(e);\n      }\n      console.warn(`Tried to use the icon '${name}' in a component from 'react-native-paper', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.`, `To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/icons.html.`);\n      isErrorLogged = true;\n    }\n    return /*#__PURE__*/React.createElement(Text, _extends({}, rest, {\n      style: [styles.icon, {\n        color,\n        fontSize: size\n      }]\n      // @ts-expect-error: Text doesn't support this, but it seems to affect TouchableNativeFeedback\n      ,\n      pointerEvents: \"none\",\n      selectable: false\n    }), \"\\u25A1\");\n  };\n}\nexport const accessibilityProps = Platform.OS === 'web' ? {\n  role: 'img',\n  focusable: false\n} : {\n  accessibilityElementsHidden: true,\n  importantForAccessibility: 'no-hide-descendants'\n};\nconst defaultIcon = _ref2 => {\n  let {\n    name,\n    color = black,\n    size,\n    direction,\n    allowFontScaling\n  } = _ref2;\n  return /*#__PURE__*/React.createElement(MaterialCommunityIcons, _extends({\n    allowFontScaling: allowFontScaling,\n    name: name,\n    color: color,\n    size: size,\n    style: [{\n      transform: [{\n        scaleX: direction === 'rtl' ? -1 : 1\n      }],\n      lineHeight: size\n    }, styles.icon],\n    pointerEvents: \"none\",\n    selectable: false\n  }, accessibilityProps));\n};\nconst styles = StyleSheet.create({\n  // eslint-disable-next-line react-native/no-color-literals\n  icon: {\n    backgroundColor: 'transparent'\n  }\n});\nexport default defaultIcon;\n//# sourceMappingURL=MaterialCommunityIcon.js.map"]},"metadata":{},"sourceType":"module"}