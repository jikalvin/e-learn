{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"disabled\", \"compact\", \"mode\", \"dark\", \"loading\", \"icon\", \"buttonColor\", \"textColor\", \"children\", \"accessibilityLabel\", \"accessibilityHint\", \"onPress\", \"onPressIn\", \"onPressOut\", \"onLongPress\", \"delayLongPress\", \"style\", \"theme\", \"uppercase\", \"contentStyle\", \"labelStyle\", \"testID\", \"accessible\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport { useInternalTheme } from \"../../core/theming\";\nimport ActivityIndicator from \"../ActivityIndicator\";\nimport Icon from \"../Icon\";\nimport Surface from \"../Surface\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport Text from \"../Typography/Text\";\nimport { getButtonColors } from \"./utils\";\nvar Button = function Button(_ref) {\n  var _borderRadius;\n  var _StyleSheet$flatten;\n  var disabled = _ref.disabled,\n    compact = _ref.compact,\n    _ref$mode = _ref.mode,\n    mode = _ref$mode === void 0 ? 'text' : _ref$mode,\n    dark = _ref.dark,\n    loading = _ref.loading,\n    icon = _ref.icon,\n    customButtonColor = _ref.buttonColor,\n    customTextColor = _ref.textColor,\n    children = _ref.children,\n    accessibilityLabel = _ref.accessibilityLabel,\n    accessibilityHint = _ref.accessibilityHint,\n    onPress = _ref.onPress,\n    onPressIn = _ref.onPressIn,\n    onPressOut = _ref.onPressOut,\n    onLongPress = _ref.onLongPress,\n    delayLongPress = _ref.delayLongPress,\n    style = _ref.style,\n    themeOverrides = _ref.theme,\n    uppercaseProp = _ref.uppercase,\n    contentStyle = _ref.contentStyle,\n    labelStyle = _ref.labelStyle,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? 'button' : _ref$testID,\n    accessible = _ref.accessible,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var isMode = React.useCallback(function (modeToCompare) {\n    return mode === modeToCompare;\n  }, [mode]);\n  var roundness = theme.roundness,\n    isV3 = theme.isV3,\n    animation = theme.animation;\n  var uppercase = uppercaseProp != null ? uppercaseProp : !theme.isV3;\n  var isElevationEntitled = !disabled && (isV3 ? isMode('elevated') : isMode('contained'));\n  var initialElevation = isV3 ? 1 : 2;\n  var activeElevation = isV3 ? 2 : 8;\n  var _React$useRef = React.useRef(new Animated.Value(isElevationEntitled ? initialElevation : 0)),\n    elevation = _React$useRef.current;\n  React.useEffect(function () {\n    elevation.setValue(isElevationEntitled ? initialElevation : 0);\n  }, [isElevationEntitled, elevation, initialElevation]);\n  var handlePressIn = function handlePressIn(e) {\n    onPressIn === null || onPressIn === void 0 ? void 0 : onPressIn(e);\n    if (isV3 ? isMode('elevated') : isMode('contained')) {\n      var scale = animation.scale;\n      Animated.timing(elevation, {\n        toValue: activeElevation,\n        duration: 200 * scale,\n        useNativeDriver: true\n      }).start();\n    }\n  };\n  var handlePressOut = function handlePressOut(e) {\n    onPressOut === null || onPressOut === void 0 ? void 0 : onPressOut(e);\n    if (isV3 ? isMode('elevated') : isMode('contained')) {\n      var scale = animation.scale;\n      Animated.timing(elevation, {\n        toValue: initialElevation,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    }\n  };\n  var borderRadius = (isV3 ? 5 : 1) * roundness;\n  var iconSize = isV3 ? 18 : 16;\n  var _getButtonColors = getButtonColors({\n      customButtonColor: customButtonColor,\n      customTextColor: customTextColor,\n      theme: theme,\n      mode: mode,\n      disabled: disabled,\n      dark: dark\n    }),\n    backgroundColor = _getButtonColors.backgroundColor,\n    borderColor = _getButtonColors.borderColor,\n    textColor = _getButtonColors.textColor,\n    borderWidth = _getButtonColors.borderWidth;\n  var rippleColor = color(textColor).alpha(0.12).rgb().string();\n  var buttonStyle = {\n    backgroundColor: backgroundColor,\n    borderColor: borderColor,\n    borderWidth: borderWidth,\n    borderRadius: borderRadius\n  };\n  var touchableStyle = {\n    borderRadius: style ? (_borderRadius = (StyleSheet.flatten(style) || {}).borderRadius) != null ? _borderRadius : borderRadius : borderRadius\n  };\n  var _ref2 = StyleSheet.flatten(labelStyle) || {},\n    customLabelColor = _ref2.color,\n    customLabelSize = _ref2.fontSize;\n  var font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n  var textStyle = _objectSpread({\n    color: textColor\n  }, font);\n  var iconStyle = ((_StyleSheet$flatten = StyleSheet.flatten(contentStyle)) === null || _StyleSheet$flatten === void 0 ? void 0 : _StyleSheet$flatten.flexDirection) === 'row-reverse' ? [styles.iconReverse, isV3 && styles[\"md3IconReverse\" + (compact ? 'Compact' : '')], isV3 && isMode('text') && styles[\"md3IconReverseTextMode\" + (compact ? 'Compact' : '')]] : [styles.icon, isV3 && styles[\"md3Icon\" + (compact ? 'Compact' : '')], isV3 && isMode('text') && styles[\"md3IconTextMode\" + (compact ? 'Compact' : '')]];\n  return React.createElement(Surface, _extends({}, rest, {\n    testID: testID + \"-container\",\n    style: [styles.button, compact && styles.compact, buttonStyle, style, !isV3 && {\n      elevation: elevation\n    }]\n  }, isV3 && {\n    elevation: elevation\n  }), React.createElement(TouchableRipple, {\n    borderless: true,\n    onPress: onPress,\n    onLongPress: onLongPress,\n    onPressIn: handlePressIn,\n    onPressOut: handlePressOut,\n    delayLongPress: delayLongPress,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityHint: accessibilityHint,\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      disabled: disabled\n    },\n    accessible: accessible,\n    disabled: disabled,\n    rippleColor: rippleColor,\n    style: touchableStyle,\n    testID: testID,\n    theme: theme\n  }, React.createElement(View, {\n    style: [styles.content, contentStyle]\n  }, icon && loading !== true ? React.createElement(View, {\n    style: iconStyle,\n    testID: testID + \"-icon-container\"\n  }, React.createElement(Icon, {\n    source: icon,\n    size: customLabelSize != null ? customLabelSize : iconSize,\n    color: typeof customLabelColor === 'string' ? customLabelColor : textColor\n  })) : null, loading ? React.createElement(ActivityIndicator, {\n    size: customLabelSize != null ? customLabelSize : iconSize,\n    color: typeof customLabelColor === 'string' ? customLabelColor : textColor,\n    style: iconStyle\n  }) : null, React.createElement(Text, {\n    variant: \"labelLarge\",\n    selectable: false,\n    numberOfLines: 1,\n    testID: testID + \"-text\",\n    style: [styles.label, !isV3 && styles.md2Label, isV3 && (isMode('text') ? icon || loading ? styles.md3LabelTextAddons : styles.md3LabelText : styles.md3Label), compact && styles.compactLabel, uppercase && styles.uppercaseLabel, textStyle, labelStyle]\n  }, children))));\n};\nvar styles = StyleSheet.create({\n  button: {\n    minWidth: 64,\n    borderStyle: 'solid'\n  },\n  compact: {\n    minWidth: 'auto'\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  icon: {\n    marginLeft: 12,\n    marginRight: -4\n  },\n  iconReverse: {\n    marginRight: 12,\n    marginLeft: -4\n  },\n  md3Icon: {\n    marginLeft: 16,\n    marginRight: -16\n  },\n  md3IconCompact: {\n    marginLeft: 8,\n    marginRight: 0\n  },\n  md3IconReverse: {\n    marginLeft: -16,\n    marginRight: 16\n  },\n  md3IconReverseCompact: {\n    marginLeft: 0,\n    marginRight: 8\n  },\n  md3IconTextMode: {\n    marginLeft: 12,\n    marginRight: -8\n  },\n  md3IconTextModeCompact: {\n    marginLeft: 6,\n    marginRight: 0\n  },\n  md3IconReverseTextMode: {\n    marginLeft: -8,\n    marginRight: 12\n  },\n  md3IconReverseTextModeCompact: {\n    marginLeft: 0,\n    marginRight: 6\n  },\n  label: {\n    textAlign: 'center',\n    marginVertical: 9,\n    marginHorizontal: 16\n  },\n  md2Label: {\n    letterSpacing: 1\n  },\n  compactLabel: {\n    marginHorizontal: 8\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase'\n  },\n  md3Label: {\n    marginVertical: 10,\n    marginHorizontal: 24\n  },\n  md3LabelText: {\n    marginHorizontal: 12\n  },\n  md3LabelTextAddons: {\n    marginHorizontal: 16\n  }\n});\nexport default Button;","map":{"version":3,"sources":["Button.tsx"],"names":["React","color","useInternalTheme","ActivityIndicator","Icon","Surface","TouchableRipple","Text","getButtonColors","Button","disabled","compact","mode","dark","loading","icon","buttonColor","customButtonColor","textColor","customTextColor","children","accessibilityLabel","accessibilityHint","onPress","onPressIn","onPressOut","onLongPress","delayLongPress","style","theme","themeOverrides","uppercase","uppercaseProp","contentStyle","labelStyle","testID","accessible","rest","isMode","useCallback","modeToCompare","roundness","isV3","animation","isElevationEntitled","initialElevation","activeElevation","current","elevation","useRef","Animated","Value","useEffect","setValue","handlePressIn","e","scale","timing","toValue","duration","useNativeDriver","start","handlePressOut","borderRadius","iconSize","backgroundColor","borderColor","borderWidth","rippleColor","alpha","rgb","string","buttonStyle","touchableStyle","StyleSheet","flatten","customLabelColor","fontSize","customLabelSize","font","fonts","labelLarge","medium","textStyle","iconStyle","flexDirection","styles","iconReverse","button","content","label","md2Label","md3LabelTextAddons","md3LabelText","md3Label","compactLabel","uppercaseLabel","create","minWidth","borderStyle","alignItems","justifyContent","marginLeft","marginRight","md3Icon","md3IconCompact","md3IconReverse","md3IconReverseCompact","md3IconTextMode","md3IconTextModeCompact","md3IconReverseTextMode","md3IconReverseTextModeCompact","textAlign","marginVertical","marginHorizontal","letterSpacing","textTransform"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport color from 'color';\nimport { useInternalTheme } from '../../core/theming';\nimport ActivityIndicator from '../ActivityIndicator';\nimport Icon from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport { getButtonColors } from './utils';\n/**\n * A button is component that the user can press to trigger an action.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/button-1.png\" />\n *     <figcaption>Text button</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/button-2.png\" />\n *     <figcaption>Outlined button</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/button-3.png\" />\n *     <figcaption>Contained button</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/button-4.png\" />\n *     <figcaption>Elevated button</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/button-5.png\" />\n *     <figcaption>Contained-tonal button</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Button } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Button icon=\"camera\" mode=\"contained\" onPress={() => console.log('Pressed')}>\n *     Press me\n *   </Button>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Button = _ref => {\n  var _StyleSheet$flatten;\n  let {\n    disabled,\n    compact,\n    mode = 'text',\n    dark,\n    loading,\n    icon,\n    buttonColor: customButtonColor,\n    textColor: customTextColor,\n    children,\n    accessibilityLabel,\n    accessibilityHint,\n    onPress,\n    onPressIn,\n    onPressOut,\n    onLongPress,\n    delayLongPress,\n    style,\n    theme: themeOverrides,\n    uppercase: uppercaseProp,\n    contentStyle,\n    labelStyle,\n    testID = 'button',\n    accessible,\n    ...rest\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const isMode = React.useCallback(modeToCompare => {\n    return mode === modeToCompare;\n  }, [mode]);\n  const {\n    roundness,\n    isV3,\n    animation\n  } = theme;\n  const uppercase = uppercaseProp ?? !theme.isV3;\n  const isElevationEntitled = !disabled && (isV3 ? isMode('elevated') : isMode('contained'));\n  const initialElevation = isV3 ? 1 : 2;\n  const activeElevation = isV3 ? 2 : 8;\n  const {\n    current: elevation\n  } = React.useRef(new Animated.Value(isElevationEntitled ? initialElevation : 0));\n  React.useEffect(() => {\n    elevation.setValue(isElevationEntitled ? initialElevation : 0);\n  }, [isElevationEntitled, elevation, initialElevation]);\n  const handlePressIn = e => {\n    onPressIn === null || onPressIn === void 0 ? void 0 : onPressIn(e);\n    if (isV3 ? isMode('elevated') : isMode('contained')) {\n      const {\n        scale\n      } = animation;\n      Animated.timing(elevation, {\n        toValue: activeElevation,\n        duration: 200 * scale,\n        useNativeDriver: true\n      }).start();\n    }\n  };\n  const handlePressOut = e => {\n    onPressOut === null || onPressOut === void 0 ? void 0 : onPressOut(e);\n    if (isV3 ? isMode('elevated') : isMode('contained')) {\n      const {\n        scale\n      } = animation;\n      Animated.timing(elevation, {\n        toValue: initialElevation,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    }\n  };\n  const borderRadius = (isV3 ? 5 : 1) * roundness;\n  const iconSize = isV3 ? 18 : 16;\n  const {\n    backgroundColor,\n    borderColor,\n    textColor,\n    borderWidth\n  } = getButtonColors({\n    customButtonColor,\n    customTextColor,\n    theme,\n    mode,\n    disabled,\n    dark\n  });\n  const rippleColor = color(textColor).alpha(0.12).rgb().string();\n  const buttonStyle = {\n    backgroundColor,\n    borderColor,\n    borderWidth,\n    borderRadius\n  };\n  const touchableStyle = {\n    borderRadius: style ? (StyleSheet.flatten(style) || {}).borderRadius ?? borderRadius : borderRadius\n  };\n  const {\n    color: customLabelColor,\n    fontSize: customLabelSize\n  } = StyleSheet.flatten(labelStyle) || {};\n  const font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n  const textStyle = {\n    color: textColor,\n    ...font\n  };\n  const iconStyle = ((_StyleSheet$flatten = StyleSheet.flatten(contentStyle)) === null || _StyleSheet$flatten === void 0 ? void 0 : _StyleSheet$flatten.flexDirection) === 'row-reverse' ? [styles.iconReverse, isV3 && styles[`md3IconReverse${compact ? 'Compact' : ''}`], isV3 && isMode('text') && styles[`md3IconReverseTextMode${compact ? 'Compact' : ''}`]] : [styles.icon, isV3 && styles[`md3Icon${compact ? 'Compact' : ''}`], isV3 && isMode('text') && styles[`md3IconTextMode${compact ? 'Compact' : ''}`]];\n  return /*#__PURE__*/React.createElement(Surface, _extends({}, rest, {\n    testID: `${testID}-container`,\n    style: [styles.button, compact && styles.compact, buttonStyle, style, !isV3 && {\n      elevation\n    }]\n  }, isV3 && {\n    elevation: elevation\n  }), /*#__PURE__*/React.createElement(TouchableRipple, {\n    borderless: true,\n    onPress: onPress,\n    onLongPress: onLongPress,\n    onPressIn: handlePressIn,\n    onPressOut: handlePressOut,\n    delayLongPress: delayLongPress,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityHint: accessibilityHint,\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      disabled\n    },\n    accessible: accessible,\n    disabled: disabled,\n    rippleColor: rippleColor,\n    style: touchableStyle,\n    testID: testID,\n    theme: theme\n  }, /*#__PURE__*/React.createElement(View, {\n    style: [styles.content, contentStyle]\n  }, icon && loading !== true ? /*#__PURE__*/React.createElement(View, {\n    style: iconStyle,\n    testID: `${testID}-icon-container`\n  }, /*#__PURE__*/React.createElement(Icon, {\n    source: icon,\n    size: customLabelSize ?? iconSize,\n    color: typeof customLabelColor === 'string' ? customLabelColor : textColor\n  })) : null, loading ? /*#__PURE__*/React.createElement(ActivityIndicator, {\n    size: customLabelSize ?? iconSize,\n    color: typeof customLabelColor === 'string' ? customLabelColor : textColor,\n    style: iconStyle\n  }) : null, /*#__PURE__*/React.createElement(Text, {\n    variant: \"labelLarge\",\n    selectable: false,\n    numberOfLines: 1,\n    testID: `${testID}-text`,\n    style: [styles.label, !isV3 && styles.md2Label, isV3 && (isMode('text') ? icon || loading ? styles.md3LabelTextAddons : styles.md3LabelText : styles.md3Label), compact && styles.compactLabel, uppercase && styles.uppercaseLabel, textStyle, labelStyle]\n  }, children))));\n};\nconst styles = StyleSheet.create({\n  button: {\n    minWidth: 64,\n    borderStyle: 'solid'\n  },\n  compact: {\n    minWidth: 'auto'\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  icon: {\n    marginLeft: 12,\n    marginRight: -4\n  },\n  iconReverse: {\n    marginRight: 12,\n    marginLeft: -4\n  },\n  /* eslint-disable react-native/no-unused-styles */\n  md3Icon: {\n    marginLeft: 16,\n    marginRight: -16\n  },\n  md3IconCompact: {\n    marginLeft: 8,\n    marginRight: 0\n  },\n  md3IconReverse: {\n    marginLeft: -16,\n    marginRight: 16\n  },\n  md3IconReverseCompact: {\n    marginLeft: 0,\n    marginRight: 8\n  },\n  md3IconTextMode: {\n    marginLeft: 12,\n    marginRight: -8\n  },\n  md3IconTextModeCompact: {\n    marginLeft: 6,\n    marginRight: 0\n  },\n  md3IconReverseTextMode: {\n    marginLeft: -8,\n    marginRight: 12\n  },\n  md3IconReverseTextModeCompact: {\n    marginLeft: 0,\n    marginRight: 6\n  },\n  /* eslint-enable react-native/no-unused-styles */\n  label: {\n    textAlign: 'center',\n    marginVertical: 9,\n    marginHorizontal: 16\n  },\n  md2Label: {\n    letterSpacing: 1\n  },\n  compactLabel: {\n    marginHorizontal: 8\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase'\n  },\n  md3Label: {\n    marginVertical: 10,\n    marginHorizontal: 24\n  },\n  md3LabelText: {\n    marginHorizontal: 12\n  },\n  md3LabelTextAddons: {\n    marginHorizontal: 16\n  }\n});\nexport default Button;\n//# sourceMappingURL=Button.js.map"]},"metadata":{},"sourceType":"module"}