{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"index\", \"total\", \"style\", \"theme\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useInternalTheme } from \"../../core/theming\";\nimport { grey200 } from \"../../styles/themes/v2/colors\";\nimport { getCardCoverStyle } from \"./utils\";\nvar CardCover = function CardCover(_ref) {\n  var index = _ref.index,\n    total = _ref.total,\n    style = _ref.style,\n    themeOverrides = _ref.theme,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var coverStyle = getCardCoverStyle({\n    theme: theme,\n    index: index,\n    total: total\n  });\n  return React.createElement(View, {\n    style: [styles.container, coverStyle, style]\n  }, React.createElement(Image, _extends({}, rest, {\n    style: [styles.image, coverStyle],\n    accessibilityIgnoresInvertColors: true\n  })));\n};\nCardCover.displayName = 'Card.Cover';\nvar styles = StyleSheet.create({\n  container: {\n    height: 195,\n    backgroundColor: grey200,\n    overflow: 'hidden'\n  },\n  image: {\n    flex: 1,\n    height: undefined,\n    width: undefined,\n    padding: 16,\n    justifyContent: 'flex-end'\n  }\n});\nexport default CardCover;\nexport { CardCover };","map":{"version":3,"sources":["CardCover.tsx"],"names":["React","useInternalTheme","grey200","getCardCoverStyle","CardCover","index","total","style","theme","themeOverrides","rest","coverStyle","styles","container","image","displayName","StyleSheet","create","height","backgroundColor","overflow","flex","undefined","width","padding","justifyContent"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAA,KAAA;AAAA,OAAA,UAAA;AAAA,OAAA,IAAA;AAG9B,SAASC,gBAAgB;AACzB,SAASC,OAAO;AAEhB,SAASC,iBAAiB;AA2C1B,IAAMC,SAAS,GAAG,SAAZA,SAAS,CAAG,IAAA,EAML;EANM,IACjBC,KAAK,GAKC,IAAA,CALNA,KAAK;IACLC,KAAK,GAIC,IAAA,CAJNA,KAAK;IACLC,KAAK,GAGC,IAAA,CAHNA,KAAK;IACEE,cAAc,GAEf,IAAA,CAFND,KAAK;IACFE,IAAAA,GAAAA,wBAAAA,CACG,IAAA,EAAA,SAAA;EACN,IAAMF,KAAK,GAAGP,gBAAgB,CAACQ,cAAc,CAAC;EAC9C,IAAME,UAAU,GAAGR,iBAAiB,CAAC;IAAEK,KAAK,EAALA,KAAK;IAAEH,KAAK,EAALA,KAAK;IAAEC,KAAAA,EAAAA;EAAM,CAAC,CAAC;EAE7D,OACE,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA;IAAC,KAAK,EAAE,CAACM,MAAM,CAACC,SAAS,EAAEF,UAAU,EAAEJ,KAAK;EAAE,CAAA,EACjD,KAAA,CAAA,aAAA,CAAC,KAAK,EAAA,QAAA,CAAA,CAAA,CAAA,EACAG,IAAI,EAAA;IACR,KAAK,EAAE,CAACE,MAAM,CAACE,KAAK,EAAEH,UAAU,CAAE;IAClC,gCAAgC,EAAA;EAAA,CAAA,CAAA,CAChC,CACG;AAEX,CAAC;AAEDP,SAAS,CAACW,WAAW,GAAG,YAAY;AACpC,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAM,CAAC;EAC/BJ,SAAS,EAAE;IACTK,MAAM,EAAE,GAAG;IACXC,eAAe,EAAEjB,OAAO;IACxBkB,QAAQ,EAAE;EACZ,CAAC;EACDN,KAAK,EAAE;IACLO,IAAI,EAAE,CAAC;IACPH,MAAM,EAAEI,SAAS;IACjBC,KAAK,EAAED,SAAS;IAChBE,OAAO,EAAE,EAAE;IACXC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAerB,SAAS;AAGxB,SAASA,SAAS","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { Image, StyleSheet, View } from 'react-native';\nimport { useInternalTheme } from '../../core/theming';\nimport { grey200 } from '../../styles/themes/v2/colors';\nimport { getCardCoverStyle } from './utils';\n/**\n * A component to show a cover image inside a Card.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/card-cover.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Card } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends Image props https://reactnative.dev/docs/image#props\n */\nconst CardCover = _ref => {\n  let {\n    index,\n    total,\n    style,\n    theme: themeOverrides,\n    ...rest\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const coverStyle = getCardCoverStyle({\n    theme,\n    index,\n    total\n  });\n  return /*#__PURE__*/React.createElement(View, {\n    style: [styles.container, coverStyle, style]\n  }, /*#__PURE__*/React.createElement(Image, _extends({}, rest, {\n    style: [styles.image, coverStyle],\n    accessibilityIgnoresInvertColors: true\n  })));\n};\nCardCover.displayName = 'Card.Cover';\nconst styles = StyleSheet.create({\n  container: {\n    height: 195,\n    backgroundColor: grey200,\n    overflow: 'hidden'\n  },\n  image: {\n    flex: 1,\n    height: undefined,\n    width: undefined,\n    padding: 16,\n    justifyContent: 'flex-end'\n  }\n});\nexport default CardCover;\n\n// @component-docs ignore-next-line\nexport { CardCover };\n//# sourceMappingURL=CardCover.js.map"]},"metadata":{},"sourceType":"module"}