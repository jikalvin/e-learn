{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"disabled\", \"editable\", \"label\", \"error\", \"selectionColor\", \"underlineColor\", \"outlineColor\", \"activeOutlineColor\", \"outlineStyle\", \"textColor\", \"dense\", \"style\", \"theme\", \"render\", \"multiline\", \"parentState\", \"innerRef\", \"onFocus\", \"forceFocus\", \"onBlur\", \"onChangeText\", \"onLayoutAnimatedText\", \"onLeftAffixLayoutChange\", \"onRightAffixLayoutChange\", \"left\", \"right\", \"placeholderTextColor\", \"testID\", \"contentStyle\"],\n  _excluded2 = [\"fontSize\", \"fontWeight\", \"lineHeight\", \"height\", \"backgroundColor\", \"textAlign\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport NativeTextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { AdornmentType, AdornmentSide } from \"./Adornment/enums\";\nimport TextInputAdornment, { getAdornmentConfig, getAdornmentStyleAdjustmentForNativeInput } from \"./Adornment/TextInputAdornment\";\nimport { MAXIMIZED_LABEL_FONT_SIZE, MINIMIZED_LABEL_FONT_SIZE, LABEL_WIGGLE_X_OFFSET, ADORNMENT_SIZE, OUTLINE_MINIMIZED_LABEL_Y_OFFSET, LABEL_PADDING_TOP, MIN_DENSE_HEIGHT_OUTLINED, LABEL_PADDING_TOP_DENSE } from \"./constants\";\nimport { calculateLabelTopPosition, calculateInputHeight, calculatePadding, adjustPaddingOut, calculateOutlinedIconAndAffixTopPosition, getOutlinedInputColors, getConstants } from \"./helpers\";\nimport InputLabel from \"./Label/InputLabel\";\nimport LabelBackground from \"./Label/LabelBackground\";\nvar TextInputOutlined = function TextInputOutlined(_ref) {\n  var _affixTopPosition, _onAffixChange, _topPosition;\n  var _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    _ref$editable = _ref.editable,\n    editable = _ref$editable === void 0 ? true : _ref$editable,\n    label = _ref.label,\n    _ref$error = _ref.error,\n    error = _ref$error === void 0 ? false : _ref$error,\n    selectionColor = _ref.selectionColor,\n    _underlineColor = _ref.underlineColor,\n    customOutlineColor = _ref.outlineColor,\n    activeOutlineColor = _ref.activeOutlineColor,\n    outlineStyle = _ref.outlineStyle,\n    textColor = _ref.textColor,\n    dense = _ref.dense,\n    style = _ref.style,\n    theme = _ref.theme,\n    _ref$render = _ref.render,\n    render = _ref$render === void 0 ? function (props) {\n      return React.createElement(NativeTextInput, props);\n    } : _ref$render,\n    _ref$multiline = _ref.multiline,\n    multiline = _ref$multiline === void 0 ? false : _ref$multiline,\n    parentState = _ref.parentState,\n    innerRef = _ref.innerRef,\n    onFocus = _ref.onFocus,\n    forceFocus = _ref.forceFocus,\n    onBlur = _ref.onBlur,\n    onChangeText = _ref.onChangeText,\n    onLayoutAnimatedText = _ref.onLayoutAnimatedText,\n    onLeftAffixLayoutChange = _ref.onLeftAffixLayoutChange,\n    onRightAffixLayoutChange = _ref.onRightAffixLayoutChange,\n    left = _ref.left,\n    right = _ref.right,\n    placeholderTextColor = _ref.placeholderTextColor,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? 'text-input-outlined' : _ref$testID,\n    contentStyle = _ref.contentStyle,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var adornmentConfig = getAdornmentConfig({\n    left: left,\n    right: right\n  });\n  var colors = theme.colors,\n    isV3 = theme.isV3,\n    roundness = theme.roundness;\n  var font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  var hasActiveOutline = parentState.focused || error;\n  var _getConstants = getConstants(isV3),\n    INPUT_PADDING_HORIZONTAL = _getConstants.INPUT_PADDING_HORIZONTAL,\n    MIN_HEIGHT = _getConstants.MIN_HEIGHT,\n    ADORNMENT_OFFSET = _getConstants.ADORNMENT_OFFSET;\n  var _ref4 = StyleSheet.flatten(style) || {},\n    fontSizeStyle = _ref4.fontSize,\n    fontWeight = _ref4.fontWeight,\n    lineHeight = _ref4.lineHeight,\n    height = _ref4.height,\n    _ref4$backgroundColor = _ref4.backgroundColor,\n    backgroundColor = _ref4$backgroundColor === void 0 ? colors === null || colors === void 0 ? void 0 : colors.background : _ref4$backgroundColor,\n    textAlign = _ref4.textAlign,\n    viewStyle = _objectWithoutProperties(_ref4, _excluded2);\n  var fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n  var _getOutlinedInputColo = getOutlinedInputColors({\n      activeOutlineColor: activeOutlineColor,\n      customOutlineColor: customOutlineColor,\n      textColor: textColor,\n      disabled: disabled,\n      error: error,\n      theme: theme\n    }),\n    inputTextColor = _getOutlinedInputColo.inputTextColor,\n    activeColor = _getOutlinedInputColo.activeColor,\n    outlineColor = _getOutlinedInputColo.outlineColor,\n    placeholderColor = _getOutlinedInputColo.placeholderColor,\n    errorColor = _getOutlinedInputColo.errorColor;\n  var labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  var fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n  var labelWidth = parentState.labelLayout.width;\n  var labelHeight = parentState.labelLayout.height;\n  var labelHalfWidth = labelWidth / 2;\n  var labelHalfHeight = labelHeight / 2;\n  var baseLabelTranslateX = (I18nManager.getConstants().isRTL ? 1 : -1) * (labelHalfWidth - labelScale * labelWidth / 2 - (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n  var labelTranslationXOffset = 0;\n  var isAdornmentLeftIcon = adornmentConfig.some(function (_ref2) {\n    var side = _ref2.side,\n      type = _ref2.type;\n    return side === AdornmentSide.Left && type === AdornmentType.Icon;\n  });\n  if (isAdornmentLeftIcon) {\n    labelTranslationXOffset = (I18nManager.getConstants().isRTL ? -1 : 1) * (ADORNMENT_SIZE + ADORNMENT_OFFSET - (isV3 ? 0 : 8));\n  }\n  var minInputHeight = (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT) - LABEL_PADDING_TOP;\n  var inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n  var topPosition = calculateLabelTopPosition(labelHeight, inputHeight, LABEL_PADDING_TOP);\n  if (height && typeof height !== 'number') {\n    console.warn('Currently we support only numbers in height prop');\n  }\n  var paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight: labelHalfHeight,\n    offset: LABEL_PADDING_TOP,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition: topPosition,\n    fontSize: fontSize,\n    lineHeight: lineHeight,\n    label: label,\n    scale: fontScale,\n    isAndroid: Platform.OS === 'android',\n    styles: StyleSheet.flatten(dense ? styles.inputOutlinedDense : styles.inputOutlined)\n  };\n  var pad = calculatePadding(paddingSettings);\n  var paddingOut = adjustPaddingOut(_objectSpread(_objectSpread({}, paddingSettings), {}, {\n    pad: pad\n  }));\n  var baseLabelTranslateY = -labelHalfHeight - (topPosition + OUTLINE_MINIMIZED_LABEL_Y_OFFSET);\n  var placeholderOpacity = hasActiveOutline ? parentState.labeled : parentState.labelLayout.measured ? 1 : 0;\n  var placeholderStyle = {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL\n  };\n  var labelProps = {\n    label: label,\n    onLayoutAnimatedText: onLayoutAnimatedText,\n    placeholderOpacity: placeholderOpacity,\n    error: error,\n    placeholderStyle: placeholderStyle,\n    baseLabelTranslateY: baseLabelTranslateY,\n    baseLabelTranslateX: baseLabelTranslateX,\n    font: font,\n    fontSize: fontSize,\n    lineHeight: lineHeight,\n    fontWeight: fontWeight,\n    labelScale: labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition: topPosition,\n    hasActiveOutline: hasActiveOutline,\n    activeColor: activeColor,\n    placeholderColor: placeholderColor,\n    backgroundColor: backgroundColor,\n    errorColor: errorColor,\n    labelTranslationXOffset: labelTranslationXOffset,\n    roundness: roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID: testID,\n    contentStyle: contentStyle,\n    theme: theme\n  };\n  var minHeight = height || (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT);\n  var outlinedHeight = inputHeight + (!height ? dense ? LABEL_PADDING_TOP_DENSE / 2 : LABEL_PADDING_TOP : 0);\n  var leftLayout = parentState.leftLayout,\n    rightLayout = parentState.rightLayout;\n  var leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: leftLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET\n  });\n  var rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: rightLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET\n  });\n  var iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: ADORNMENT_SIZE,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET\n  });\n  var rightAffixWidth = right ? rightLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n  var leftAffixWidth = left ? leftLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n  var adornmentStyleAdjustmentForNativeInput = getAdornmentStyleAdjustmentForNativeInput({\n    adornmentConfig: adornmentConfig,\n    rightAffixWidth: rightAffixWidth,\n    leftAffixWidth: leftAffixWidth,\n    mode: 'outlined',\n    isV3: isV3\n  });\n  var affixTopPosition = (_affixTopPosition = {}, _defineProperty(_affixTopPosition, AdornmentSide.Left, leftAffixTopPosition), _defineProperty(_affixTopPosition, AdornmentSide.Right, rightAffixTopPosition), _affixTopPosition);\n  var onAffixChange = (_onAffixChange = {}, _defineProperty(_onAffixChange, AdornmentSide.Left, onLeftAffixLayoutChange), _defineProperty(_onAffixChange, AdornmentSide.Right, onRightAffixLayoutChange), _onAffixChange);\n  var adornmentProps = {\n    adornmentConfig: adornmentConfig,\n    forceFocus: forceFocus,\n    topPosition: (_topPosition = {}, _defineProperty(_topPosition, AdornmentType.Icon, iconTopPosition), _defineProperty(_topPosition, AdornmentType.Affix, affixTopPosition), _topPosition),\n    onAffixChange: onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = _objectSpread(_objectSpread({}, adornmentProps), {}, {\n      left: left,\n      right: right,\n      textStyle: _objectSpread(_objectSpread({}, font), {}, {\n        fontSize: fontSize,\n        lineHeight: lineHeight,\n        fontWeight: fontWeight\n      }),\n      visible: parentState.labeled\n    });\n  }\n  return React.createElement(View, {\n    style: viewStyle\n  }, React.createElement(Outline, {\n    isV3: isV3,\n    style: outlineStyle,\n    roundness: roundness,\n    hasActiveOutline: hasActiveOutline,\n    focused: parentState.focused,\n    activeColor: activeColor,\n    outlineColor: outlineColor,\n    backgroundColor: backgroundColor\n  }), React.createElement(View, null, React.createElement(View, {\n    style: [styles.labelContainer, {\n      paddingTop: LABEL_PADDING_TOP,\n      minHeight: minHeight\n    }]\n  }, label ? React.createElement(InputLabel, {\n    parentState: parentState,\n    labelProps: labelProps,\n    labelBackground: LabelBackground,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier\n  }) : null, render === null || render === void 0 ? void 0 : render(_objectSpread(_objectSpread({\n    testID: testID\n  }, rest), {}, {\n    ref: innerRef,\n    onChangeText: onChangeText,\n    placeholder: label ? parentState.placeholder : rest.placeholder,\n    placeholderTextColor: placeholderTextColor || placeholderColor,\n    editable: !disabled && editable,\n    selectionColor: typeof selectionColor === 'undefined' ? activeColor : selectionColor,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    underlineColorAndroid: 'transparent',\n    multiline: multiline,\n    style: [styles.input, !multiline || multiline && height ? {\n      height: inputHeight\n    } : {}, paddingOut, _objectSpread(_objectSpread({}, font), {}, {\n      fontSize: fontSize,\n      lineHeight: lineHeight,\n      fontWeight: fontWeight,\n      color: inputTextColor,\n      textAlignVertical: multiline ? 'top' : 'center',\n      textAlign: textAlign ? textAlign : I18nManager.getConstants().isRTL ? 'right' : 'left',\n      paddingHorizontal: INPUT_PADDING_HORIZONTAL\n    }), Platform.OS === 'web' && {\n      outline: 'none'\n    }, adornmentStyleAdjustmentForNativeInput, contentStyle]\n  }))), React.createElement(TextInputAdornment, adornmentProps)));\n};\nexport default TextInputOutlined;\nvar Outline = function Outline(_ref3) {\n  var isV3 = _ref3.isV3,\n    activeColor = _ref3.activeColor,\n    backgroundColor = _ref3.backgroundColor,\n    hasActiveOutline = _ref3.hasActiveOutline,\n    focused = _ref3.focused,\n    outlineColor = _ref3.outlineColor,\n    roundness = _ref3.roundness,\n    style = _ref3.style;\n  return React.createElement(View, {\n    testID: \"text-input-outline\",\n    pointerEvents: \"none\",\n    style: [styles.outline, {\n      backgroundColor: backgroundColor,\n      borderRadius: roundness,\n      borderWidth: (isV3 ? hasActiveOutline : focused) ? 2 : 1,\n      borderColor: hasActiveOutline ? activeColor : outlineColor\n    }, style]\n  });\n};\nvar styles = StyleSheet.create({\n  outline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 6,\n    bottom: 0\n  },\n  labelContainer: {\n    paddingBottom: 0\n  },\n  input: {\n    margin: 0,\n    zIndex: 1\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4\n  }\n});","map":{"version":3,"sources":["TextInputOutlined.tsx"],"names":["React","AdornmentType","AdornmentSide","TextInputAdornment","getAdornmentConfig","getAdornmentStyleAdjustmentForNativeInput","MAXIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_FONT_SIZE","LABEL_WIGGLE_X_OFFSET","ADORNMENT_SIZE","OUTLINE_MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","MIN_DENSE_HEIGHT_OUTLINED","LABEL_PADDING_TOP_DENSE","calculateLabelTopPosition","calculateInputHeight","calculatePadding","adjustPaddingOut","calculateOutlinedIconAndAffixTopPosition","getOutlinedInputColors","getConstants","InputLabel","LabelBackground","TextInputOutlined","disabled","editable","label","error","selectionColor","underlineColor","_underlineColor","outlineColor","customOutlineColor","activeOutlineColor","outlineStyle","textColor","dense","style","theme","render","props","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","testID","contentStyle","rest","adornmentConfig","colors","isV3","roundness","font","fonts","bodyLarge","regular","hasActiveOutline","focused","INPUT_PADDING_HORIZONTAL","MIN_HEIGHT","ADORNMENT_OFFSET","fontSize","fontSizeStyle","fontWeight","lineHeight","height","backgroundColor","background","textAlign","viewStyle","StyleSheet","flatten","inputTextColor","activeColor","placeholderColor","errorColor","labelScale","fontScale","labelWidth","labelLayout","width","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","isRTL","labelTranslationXOffset","isAdornmentLeftIcon","some","side","type","Left","Icon","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","isAndroid","Platform","OS","styles","inputOutlinedDense","inputOutlined","pad","paddingOut","baseLabelTranslateY","placeholderOpacity","labeled","measured","placeholderStyle","position","paddingHorizontal","labelProps","wiggleOffsetX","maxFontSizeMultiplier","minHeight","outlinedHeight","leftLayout","rightLayout","leftAffixTopPosition","affixHeight","labelYOffset","rightAffixTopPosition","iconTopPosition","rightAffixWidth","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","mode","affixTopPosition","Right","onAffixChange","adornmentProps","Affix","isTextInputFocused","length","textStyle","visible","labelContainer","paddingTop","ref","placeholder","underlineColorAndroid","input","color","textAlignVertical","outline","Outline","borderRadius","borderWidth","borderColor","create","top","bottom","paddingBottom","margin","zIndex"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["import * as React from 'react';\nimport { View, TextInput as NativeTextInput, StyleSheet, I18nManager, Platform } from 'react-native';\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\nimport TextInputAdornment, { getAdornmentConfig, getAdornmentStyleAdjustmentForNativeInput } from './Adornment/TextInputAdornment';\nimport { MAXIMIZED_LABEL_FONT_SIZE, MINIMIZED_LABEL_FONT_SIZE, LABEL_WIGGLE_X_OFFSET, ADORNMENT_SIZE, OUTLINE_MINIMIZED_LABEL_Y_OFFSET, LABEL_PADDING_TOP, MIN_DENSE_HEIGHT_OUTLINED, LABEL_PADDING_TOP_DENSE } from './constants';\nimport { calculateLabelTopPosition, calculateInputHeight, calculatePadding, adjustPaddingOut, calculateOutlinedIconAndAffixTopPosition, getOutlinedInputColors, getConstants } from './helpers';\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nconst TextInputOutlined = _ref => {\n  let {\n    disabled = false,\n    editable = true,\n    label,\n    error = false,\n    selectionColor,\n    underlineColor: _underlineColor,\n    outlineColor: customOutlineColor,\n    activeOutlineColor,\n    outlineStyle,\n    textColor,\n    dense,\n    style,\n    theme,\n    render = props => /*#__PURE__*/React.createElement(NativeTextInput, props),\n    multiline = false,\n    parentState,\n    innerRef,\n    onFocus,\n    forceFocus,\n    onBlur,\n    onChangeText,\n    onLayoutAnimatedText,\n    onLeftAffixLayoutChange,\n    onRightAffixLayoutChange,\n    left,\n    right,\n    placeholderTextColor,\n    testID = 'text-input-outlined',\n    contentStyle,\n    ...rest\n  } = _ref;\n  const adornmentConfig = getAdornmentConfig({\n    left,\n    right\n  });\n  const {\n    colors,\n    isV3,\n    roundness\n  } = theme;\n  const font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n  const {\n    INPUT_PADDING_HORIZONTAL,\n    MIN_HEIGHT,\n    ADORNMENT_OFFSET\n  } = getConstants(isV3);\n  const {\n    fontSize: fontSizeStyle,\n    fontWeight,\n    lineHeight,\n    height,\n    backgroundColor = colors === null || colors === void 0 ? void 0 : colors.background,\n    textAlign,\n    ...viewStyle\n  } = StyleSheet.flatten(style) || {};\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n  const {\n    inputTextColor,\n    activeColor,\n    outlineColor,\n    placeholderColor,\n    errorColor\n  } = getOutlinedInputColors({\n    activeOutlineColor,\n    customOutlineColor,\n    textColor,\n    disabled,\n    error,\n    theme\n  });\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n  const baseLabelTranslateX = (I18nManager.getConstants().isRTL ? 1 : -1) * (labelHalfWidth - labelScale * labelWidth / 2 - (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n  let labelTranslationXOffset = 0;\n  const isAdornmentLeftIcon = adornmentConfig.some(_ref2 => {\n    let {\n      side,\n      type\n    } = _ref2;\n    return side === AdornmentSide.Left && type === AdornmentType.Icon;\n  });\n  if (isAdornmentLeftIcon) {\n    labelTranslationXOffset = (I18nManager.getConstants().isRTL ? -1 : 1) * (ADORNMENT_SIZE + ADORNMENT_OFFSET - (isV3 ? 0 : 8));\n  }\n  const minInputHeight = (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT) - LABEL_PADDING_TOP;\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n  const topPosition = calculateLabelTopPosition(labelHeight, inputHeight, LABEL_PADDING_TOP);\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: LABEL_PADDING_TOP,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    lineHeight,\n    label,\n    scale: fontScale,\n    isAndroid: Platform.OS === 'android',\n    styles: StyleSheet.flatten(dense ? styles.inputOutlinedDense : styles.inputOutlined)\n  };\n  const pad = calculatePadding(paddingSettings);\n  const paddingOut = adjustPaddingOut({\n    ...paddingSettings,\n    pad\n  });\n  const baseLabelTranslateY = -labelHalfHeight - (topPosition + OUTLINE_MINIMIZED_LABEL_Y_OFFSET);\n  const placeholderOpacity = hasActiveOutline ? parentState.labeled : parentState.labelLayout.measured ? 1 : 0;\n  const placeholderStyle = {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL\n  };\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    placeholderOpacity,\n    error,\n    placeholderStyle,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    backgroundColor: backgroundColor,\n    errorColor,\n    labelTranslationXOffset,\n    roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID,\n    contentStyle,\n    theme\n  };\n  const minHeight = height || (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT);\n  const outlinedHeight = inputHeight + (!height ? dense ? LABEL_PADDING_TOP_DENSE / 2 : LABEL_PADDING_TOP : 0);\n  const {\n    leftLayout,\n    rightLayout\n  } = parentState;\n  const leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: leftLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET\n  });\n  const rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: rightLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET\n  });\n  const iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: ADORNMENT_SIZE,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET\n  });\n  const rightAffixWidth = right ? rightLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n  const leftAffixWidth = left ? leftLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n  const adornmentStyleAdjustmentForNativeInput = getAdornmentStyleAdjustmentForNativeInput({\n    adornmentConfig,\n    rightAffixWidth,\n    leftAffixWidth,\n    mode: 'outlined',\n    isV3\n  });\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange\n  };\n  let adornmentProps = {\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Icon]: iconTopPosition,\n      [AdornmentType.Affix]: affixTopPosition\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: {\n        ...font,\n        fontSize,\n        lineHeight,\n        fontWeight\n      },\n      visible: parentState.labeled\n    };\n  }\n  return /*#__PURE__*/React.createElement(View, {\n    style: viewStyle\n  }, /*#__PURE__*/React.createElement(Outline, {\n    isV3: isV3,\n    style: outlineStyle,\n    roundness: roundness,\n    hasActiveOutline: hasActiveOutline,\n    focused: parentState.focused,\n    activeColor: activeColor,\n    outlineColor: outlineColor,\n    backgroundColor: backgroundColor\n  }), /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(View, {\n    style: [styles.labelContainer, {\n      paddingTop: LABEL_PADDING_TOP,\n      minHeight\n    }]\n  }, label ? /*#__PURE__*/React.createElement(InputLabel, {\n    parentState: parentState,\n    labelProps: labelProps,\n    labelBackground: LabelBackground,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier\n  }) : null, render === null || render === void 0 ? void 0 : render({\n    testID,\n    ...rest,\n    ref: innerRef,\n    onChangeText,\n    placeholder: label ? parentState.placeholder : rest.placeholder,\n    placeholderTextColor: placeholderTextColor || placeholderColor,\n    editable: !disabled && editable,\n    selectionColor: typeof selectionColor === 'undefined' ? activeColor : selectionColor,\n    onFocus,\n    onBlur,\n    underlineColorAndroid: 'transparent',\n    multiline,\n    style: [styles.input, !multiline || multiline && height ? {\n      height: inputHeight\n    } : {}, paddingOut, {\n      ...font,\n      fontSize,\n      lineHeight,\n      fontWeight,\n      color: inputTextColor,\n      textAlignVertical: multiline ? 'top' : 'center',\n      textAlign: textAlign ? textAlign : I18nManager.getConstants().isRTL ? 'right' : 'left',\n      paddingHorizontal: INPUT_PADDING_HORIZONTAL\n    }, Platform.OS === 'web' && {\n      outline: 'none'\n    }, adornmentStyleAdjustmentForNativeInput, contentStyle]\n  })), /*#__PURE__*/React.createElement(TextInputAdornment, adornmentProps)));\n};\nexport default TextInputOutlined;\nconst Outline = _ref3 => {\n  let {\n    isV3,\n    activeColor,\n    backgroundColor,\n    hasActiveOutline,\n    focused,\n    outlineColor,\n    roundness,\n    style\n  } = _ref3;\n  return /*#__PURE__*/React.createElement(View, {\n    testID: \"text-input-outline\",\n    pointerEvents: \"none\",\n    style: [styles.outline,\n    // eslint-disable-next-line react-native/no-inline-styles\n    {\n      backgroundColor,\n      borderRadius: roundness,\n      borderWidth: (isV3 ? hasActiveOutline : focused) ? 2 : 1,\n      borderColor: hasActiveOutline ? activeColor : outlineColor\n    }, style]\n  });\n};\nconst styles = StyleSheet.create({\n  outline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 6,\n    bottom: 0\n  },\n  labelContainer: {\n    paddingBottom: 0\n  },\n  input: {\n    margin: 0,\n    zIndex: 1\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4\n  }\n});\n//# sourceMappingURL=TextInputOutlined.js.map"]},"metadata":{},"sourceType":"module"}