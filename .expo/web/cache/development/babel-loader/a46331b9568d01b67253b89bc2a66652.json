{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"focusedIcon\", \"unfocusedIcon\", \"label\", \"active\", \"theme\", \"style\", \"onPress\", \"accessibilityLabel\", \"badge\", \"testID\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useInternalTheme } from \"../../core/theming\";\nimport Badge from \"../Badge\";\nimport Icon from \"../Icon\";\nimport Text from \"../Typography/Text\";\nvar badgeSize = 8;\nvar iconSize = 24;\nvar itemSize = 56;\nvar outlineHeight = 32;\nvar DrawerCollapsedItem = function DrawerCollapsedItem(_ref) {\n  var focusedIcon = _ref.focusedIcon,\n    unfocusedIcon = _ref.unfocusedIcon,\n    label = _ref.label,\n    active = _ref.active,\n    themeOverrides = _ref.theme,\n    style = _ref.style,\n    onPress = _ref.onPress,\n    accessibilityLabel = _ref.accessibilityLabel,\n    _ref$badge = _ref.badge,\n    badge = _ref$badge === void 0 ? false : _ref$badge,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? 'drawer-collapsed-item' : _ref$testID,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var isV3 = theme.isV3;\n  var scale = theme.animation.scale;\n  var _React$useState = React.useState(1),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    numOfLines = _React$useState2[0],\n    setNumOfLines = _React$useState2[1];\n  var _React$useRef = React.useRef(new Animated.Value(active ? 1 : 0.5)),\n    animScale = _React$useRef.current;\n  React.useEffect(function () {\n    if (!active) {\n      animScale.setValue(0.5);\n    }\n  }, [animScale, active]);\n  if (!isV3) {\n    return null;\n  }\n  var handlePressOut = function handlePressOut() {\n    Animated.timing(animScale, {\n      toValue: 1,\n      duration: 150 * scale,\n      useNativeDriver: true\n    }).start();\n  };\n  var iconPadding = ((!label ? itemSize : outlineHeight) - iconSize) / 2;\n  var backgroundColor = active ? theme.colors.secondaryContainer : 'transparent';\n  var labelColor = active ? theme.colors.onSurface : theme.colors.onSurfaceVariant;\n  var iconColor = active ? theme.colors.onSecondaryContainer : theme.colors.onSurfaceVariant;\n  var onTextLayout = function onTextLayout(_ref2) {\n    var nativeEvent = _ref2.nativeEvent;\n    setNumOfLines(nativeEvent.lines.length);\n  };\n  var androidLetterSpacingStyle = Platform.OS === 'android' && numOfLines > 4 && styles.letterSpacing;\n  var labelTextStyle = _objectSpread({\n    color: labelColor\n  }, isV3 ? theme.fonts.labelMedium : {});\n  var icon = !active && unfocusedIcon !== undefined ? unfocusedIcon : focusedIcon;\n  return React.createElement(View, rest, React.createElement(TouchableWithoutFeedback, {\n    onPress: onPress,\n    onPressOut: onPress ? handlePressOut : undefined,\n    accessibilityTraits: active ? ['button', 'selected'] : 'button',\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      selected: active\n    },\n    accessibilityLabel: accessibilityLabel,\n    testID: testID\n  }, React.createElement(View, {\n    style: styles.wrapper\n  }, React.createElement(Animated.View, {\n    style: [styles.outline, !label && styles.roundedOutline, {\n      transform: [label ? {\n        scaleX: animScale\n      } : {\n        scale: animScale\n      }],\n      backgroundColor: backgroundColor\n    }, style],\n    testID: testID + \"-outline\"\n  }), React.createElement(View, {\n    style: [styles.icon, {\n      top: iconPadding\n    }],\n    testID: testID + \"-container\"\n  }, badge && React.createElement(View, {\n    style: styles.badgeContainer\n  }, typeof badge === 'boolean' ? React.createElement(Badge, {\n    visible: badge,\n    size: badgeSize\n  }) : React.createElement(Badge, {\n    visible: badge != null,\n    size: 2 * badgeSize\n  }, badge)), React.createElement(Icon, {\n    source: icon,\n    size: iconSize,\n    color: iconColor\n  })), label ? React.createElement(Text, {\n    variant: \"labelMedium\",\n    selectable: false,\n    numberOfLines: 2,\n    onTextLayout: onTextLayout,\n    style: [styles.label, androidLetterSpacingStyle, labelTextStyle]\n  }, label) : null)));\n};\nDrawerCollapsedItem.displayName = 'Drawer.CollapsedItem';\nvar styles = StyleSheet.create({\n  wrapper: {\n    width: 80,\n    marginBottom: 12,\n    minHeight: itemSize,\n    alignItems: 'center'\n  },\n  outline: {\n    width: itemSize,\n    height: outlineHeight,\n    borderRadius: itemSize / 2,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  roundedOutline: {\n    height: itemSize\n  },\n  icon: {\n    position: 'absolute'\n  },\n  letterSpacing: {\n    letterSpacing: 0.3,\n    alignSelf: 'stretch'\n  },\n  label: {\n    marginHorizontal: 12,\n    marginTop: 4,\n    textAlign: 'center'\n  },\n  badgeContainer: {\n    position: 'absolute',\n    left: 20,\n    bottom: 20,\n    zIndex: 2\n  }\n});\nexport default DrawerCollapsedItem;","map":{"version":3,"sources":["DrawerCollapsedItem.tsx"],"names":["React","useInternalTheme","Badge","Icon","Text","badgeSize","iconSize","itemSize","outlineHeight","DrawerCollapsedItem","focusedIcon","unfocusedIcon","label","active","theme","themeOverrides","style","onPress","accessibilityLabel","badge","testID","rest","isV3","scale","animation","numOfLines","setNumOfLines","useState","current","animScale","useRef","Animated","Value","useEffect","setValue","handlePressOut","timing","toValue","duration","useNativeDriver","start","iconPadding","backgroundColor","colors","secondaryContainer","labelColor","onSurface","onSurfaceVariant","iconColor","onSecondaryContainer","onTextLayout","nativeEvent","lines","length","androidLetterSpacingStyle","Platform","OS","styles","letterSpacing","labelTextStyle","color","fonts","labelMedium","icon","undefined","selected","wrapper","outline","roundedOutline","transform","scaleX","top","badgeContainer","displayName","StyleSheet","create","width","marginBottom","minHeight","alignItems","height","borderRadius","justifyContent","position","alignSelf","marginHorizontal","marginTop","textAlign","left","bottom","zIndex"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["import * as React from 'react';\nimport { Animated, Platform, StyleSheet, TouchableWithoutFeedback, View } from 'react-native';\nimport { useInternalTheme } from '../../core/theming';\nimport Badge from '../Badge';\nimport Icon from '../Icon';\nimport Text from '../Typography/Text';\nconst badgeSize = 8;\nconst iconSize = 24;\nconst itemSize = 56;\nconst outlineHeight = 32;\n\n/**\n * @supported Available in v5.x with theme version 3\n * Collapsed component used to show an action item with an icon and optionally label in a navigation drawer.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/drawer-collapsed.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *    <Drawer.CollapsedItem\n *      focusedIcon=\"inbox\"\n *      unfocusedIcon=\"inbox-outline\"\n *      label=\"Inbox\"\n *    />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst DrawerCollapsedItem = _ref => {\n  let {\n    focusedIcon,\n    unfocusedIcon,\n    label,\n    active,\n    theme: themeOverrides,\n    style,\n    onPress,\n    accessibilityLabel,\n    badge = false,\n    testID = 'drawer-collapsed-item',\n    ...rest\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const {\n    isV3\n  } = theme;\n  const {\n    scale\n  } = theme.animation;\n  const [numOfLines, setNumOfLines] = React.useState(1);\n  const {\n    current: animScale\n  } = React.useRef(new Animated.Value(active ? 1 : 0.5));\n  React.useEffect(() => {\n    if (!active) {\n      animScale.setValue(0.5);\n    }\n  }, [animScale, active]);\n  if (!isV3) {\n    return null;\n  }\n  const handlePressOut = () => {\n    Animated.timing(animScale, {\n      toValue: 1,\n      duration: 150 * scale,\n      useNativeDriver: true\n    }).start();\n  };\n  const iconPadding = ((!label ? itemSize : outlineHeight) - iconSize) / 2;\n  const backgroundColor = active ? theme.colors.secondaryContainer : 'transparent';\n  const labelColor = active ? theme.colors.onSurface : theme.colors.onSurfaceVariant;\n  const iconColor = active ? theme.colors.onSecondaryContainer : theme.colors.onSurfaceVariant;\n  const onTextLayout = _ref2 => {\n    let {\n      nativeEvent\n    } = _ref2;\n    setNumOfLines(nativeEvent.lines.length);\n  };\n\n  // Label is cut off on Android, when centered \"labelMedium\" text\n  // has more than 4 lines, so there is a need to decrease the letter spacing.\n  const androidLetterSpacingStyle = Platform.OS === 'android' && numOfLines > 4 && styles.letterSpacing;\n  const labelTextStyle = {\n    color: labelColor,\n    ...(isV3 ? theme.fonts.labelMedium : {})\n  };\n  const icon = !active && unfocusedIcon !== undefined ? unfocusedIcon : focusedIcon;\n  return /*#__PURE__*/React.createElement(View, rest, /*#__PURE__*/React.createElement(TouchableWithoutFeedback, {\n    onPress: onPress,\n    onPressOut: onPress ? handlePressOut : undefined\n    // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n    ,\n    accessibilityTraits: active ? ['button', 'selected'] : 'button',\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      selected: active\n    },\n    accessibilityLabel: accessibilityLabel,\n    testID: testID\n  }, /*#__PURE__*/React.createElement(View, {\n    style: styles.wrapper\n  }, /*#__PURE__*/React.createElement(Animated.View, {\n    style: [styles.outline, !label && styles.roundedOutline, {\n      transform: [label ? {\n        scaleX: animScale\n      } : {\n        scale: animScale\n      }],\n      backgroundColor\n    }, style],\n    testID: `${testID}-outline`\n  }), /*#__PURE__*/React.createElement(View, {\n    style: [styles.icon, {\n      top: iconPadding\n    }],\n    testID: `${testID}-container`\n  }, badge && /*#__PURE__*/React.createElement(View, {\n    style: styles.badgeContainer\n  }, typeof badge === 'boolean' ? /*#__PURE__*/React.createElement(Badge, {\n    visible: badge,\n    size: badgeSize\n  }) : /*#__PURE__*/React.createElement(Badge, {\n    visible: badge != null,\n    size: 2 * badgeSize\n  }, badge)), /*#__PURE__*/React.createElement(Icon, {\n    source: icon,\n    size: iconSize,\n    color: iconColor\n  })), label ? /*#__PURE__*/React.createElement(Text, {\n    variant: \"labelMedium\",\n    selectable: false,\n    numberOfLines: 2,\n    onTextLayout: onTextLayout,\n    style: [styles.label, androidLetterSpacingStyle, labelTextStyle]\n  }, label) : null)));\n};\nDrawerCollapsedItem.displayName = 'Drawer.CollapsedItem';\nconst styles = StyleSheet.create({\n  wrapper: {\n    width: 80,\n    marginBottom: 12,\n    minHeight: itemSize,\n    alignItems: 'center'\n  },\n  outline: {\n    width: itemSize,\n    height: outlineHeight,\n    borderRadius: itemSize / 2,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  roundedOutline: {\n    height: itemSize\n  },\n  icon: {\n    position: 'absolute'\n  },\n  letterSpacing: {\n    letterSpacing: 0.3,\n    alignSelf: 'stretch'\n  },\n  label: {\n    marginHorizontal: 12,\n    marginTop: 4,\n    textAlign: 'center'\n  },\n  badgeContainer: {\n    position: 'absolute',\n    left: 20,\n    bottom: 20,\n    zIndex: 2\n  }\n});\nexport default DrawerCollapsedItem;\n//# sourceMappingURL=DrawerCollapsedItem.js.map"]},"metadata":{},"sourceType":"module"}