{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"theme\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useInternalTheme } from \"../../core/theming\";\nimport CheckboxAndroid from \"./CheckboxAndroid\";\nimport CheckboxIOS from \"./CheckboxIOS\";\nvar Checkbox = function Checkbox(_ref) {\n  var themeOverrides = _ref.theme,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  return Platform.OS === 'ios' ? React.createElement(CheckboxIOS, _extends({}, props, {\n    theme: theme\n  })) : React.createElement(CheckboxAndroid, _extends({}, props, {\n    theme: theme\n  }));\n};\nexport default Checkbox;\nvar CheckboxWithTheme = Checkbox;\nexport { CheckboxWithTheme as Checkbox };","map":{"version":3,"sources":["Checkbox.tsx"],"names":["React","useInternalTheme","CheckboxAndroid","CheckboxIOS","Checkbox","theme","themeOverrides","props","Platform","OS","CheckboxWithTheme"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAA,QAAA;AAG9B,SAASC,gBAAgB;AAEzB,OAAOC,eAAe;AACtB,OAAOC,WAAW;AA4ElB,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAG,IAAA,EAAgD;EAA/C,IAASE,cAAc,GAAmB,IAAA,CAAxCD,KAAK;IAAqBE,KAAAA,GAAAA,wBAAAA,CAAc,IAAA,EAAA,SAAA;EAC1D,IAAMF,KAAK,GAAGJ,gBAAgB,CAACK,cAAc,CAAC;EAC9C,OAAOE,QAAQ,CAACC,EAAE,KAAK,KAAK,GAC1B,KAAA,CAAA,aAAA,CAAC,WAAW,EAAA,QAAA,CAAA,CAAA,CAAA,EAAKF,KAAK,EAAA;IAAE,KAAK,EAAEF;EAAM,CAAA,CAAA,CAAG,GAExC,KAAA,CAAA,aAAA,CAAC,eAAe,EAAA,QAAA,CAAA,CAAA,CAAA,EAAKE,KAAK,EAAA;IAAE,KAAK,EAAEF;EAAM,CAAA,CAAA,CAC1C;AACH,CAAC;AAED,eAAeD,QAAQ;AAGvB,IAAMM,iBAAiB,GAAGN,QAAQ;AAElC,SAASM,iBAAiB,IAAIN,QAAQ","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { Platform } from 'react-native';\nimport { useInternalTheme } from '../../core/theming';\nimport CheckboxAndroid from './CheckboxAndroid';\nimport CheckboxIOS from './CheckboxIOS';\n/**\n * Checkboxes allow the selection of multiple options from a set.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Checkbox } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [checked, setChecked] = React.useState(false);\n *\n *   return (\n *     <Checkbox\n *       status={checked ? 'checked' : 'unchecked'}\n *       onPress={() => {\n *         setChecked(!checked);\n *       }}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst Checkbox = _ref => {\n  let {\n    theme: themeOverrides,\n    ...props\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  return Platform.OS === 'ios' ? /*#__PURE__*/React.createElement(CheckboxIOS, _extends({}, props, {\n    theme: theme\n  })) : /*#__PURE__*/React.createElement(CheckboxAndroid, _extends({}, props, {\n    theme: theme\n  }));\n};\nexport default Checkbox;\n\n// @component-docs ignore-next-line\nconst CheckboxWithTheme = Checkbox;\n// @component-docs ignore-next-line\nexport { CheckboxWithTheme as Checkbox };\n//# sourceMappingURL=Checkbox.js.map"]},"metadata":{},"sourceType":"module"}