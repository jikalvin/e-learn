{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"type\", \"visible\", \"theme\", \"onLayout\", \"padding\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport color from 'color';\nimport { useInternalTheme } from \"../core/theming\";\nimport AnimatedText from \"./Typography/AnimatedText\";\nvar HelperText = function HelperText(_ref) {\n  var _theme$colors;\n  var style = _ref.style,\n    _ref$type = _ref.type,\n    type = _ref$type === void 0 ? 'info' : _ref$type,\n    _ref$visible = _ref.visible,\n    visible = _ref$visible === void 0 ? true : _ref$visible,\n    themeOverrides = _ref.theme,\n    onLayout = _ref.onLayout,\n    _ref$padding = _ref.padding,\n    padding = _ref$padding === void 0 ? 'normal' : _ref$padding,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var _React$useRef = React.useRef(new Animated.Value(visible ? 1 : 0)),\n    shown = _React$useRef.current;\n  var _React$useRef2 = React.useRef(0),\n    textHeight = _React$useRef2.current;\n  var scale = theme.animation.scale;\n  var _rest$maxFontSizeMult = rest.maxFontSizeMultiplier,\n    maxFontSizeMultiplier = _rest$maxFontSizeMult === void 0 ? 1.5 : _rest$maxFontSizeMult;\n  React.useEffect(function () {\n    if (visible) {\n      Animated.timing(shown, {\n        toValue: 1,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    } else {\n      Animated.timing(shown, {\n        toValue: 0,\n        duration: 180 * scale,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [visible, scale, shown]);\n  var handleTextLayout = function handleTextLayout(e) {\n    onLayout === null || onLayout === void 0 ? void 0 : onLayout(e);\n    textHeight = e.nativeEvent.layout.height;\n  };\n  var colors = theme.colors,\n    dark = theme.dark;\n  var textColor = type === 'error' ? colors === null || colors === void 0 ? void 0 : colors.error : color(theme.isV3 ? theme.colors.onSurface : theme === null || theme === void 0 ? void 0 : (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.text).alpha(dark ? 0.7 : 0.54).rgb().string();\n  return React.createElement(AnimatedText, _extends({\n    onLayout: handleTextLayout,\n    style: [styles.text, padding !== 'none' ? styles.padding : {}, {\n      color: textColor,\n      opacity: shown,\n      transform: visible && type === 'error' ? [{\n        translateY: shown.interpolate({\n          inputRange: [0, 1],\n          outputRange: [-textHeight / 2, 0]\n        })\n      }] : []\n    }, style],\n    maxFontSizeMultiplier: maxFontSizeMultiplier\n  }, rest), rest.children);\n};\nvar styles = StyleSheet.create({\n  text: {\n    fontSize: 12,\n    paddingVertical: 4\n  },\n  padding: {\n    paddingHorizontal: 12\n  }\n});\nexport default HelperText;","map":{"version":3,"sources":["HelperText.tsx"],"names":["React","color","useInternalTheme","AnimatedText","HelperText","style","type","visible","theme","themeOverrides","onLayout","padding","rest","current","shown","useRef","Animated","Value","textHeight","scale","animation","maxFontSizeMultiplier","useEffect","timing","toValue","duration","useNativeDriver","start","handleTextLayout","e","nativeEvent","layout","height","colors","dark","textColor","error","isV3","onSurface","text","alpha","rgb","string","styles","opacity","transform","translateY","interpolate","inputRange","outputRange","children","StyleSheet","create","fontSize","paddingVertical","paddingHorizontal"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\nimport color from 'color';\nimport { useInternalTheme } from '../core/theming';\nimport AnimatedText from './Typography/AnimatedText';\n/**\n * Helper text is used in conjuction with input elements to provide additional hints for the user.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/helper-text.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { HelperText, TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState('');\n *\n *    const onChangeText = text => setText(text);\n *\n *   const hasErrors = () => {\n *     return !text.includes('@');\n *   };\n *\n *  return (\n *     <View>\n *       <TextInput label=\"Email\" value={text} onChangeText={onChangeText} />\n *       <HelperText type=\"error\" visible={hasErrors()}>\n *         Email address is invalid!\n *       </HelperText>\n *     </View>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst HelperText = _ref => {\n  var _theme$colors;\n  let {\n    style,\n    type = 'info',\n    visible = true,\n    theme: themeOverrides,\n    onLayout,\n    padding = 'normal',\n    ...rest\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const {\n    current: shown\n  } = React.useRef(new Animated.Value(visible ? 1 : 0));\n  let {\n    current: textHeight\n  } = React.useRef(0);\n  const {\n    scale\n  } = theme.animation;\n  const {\n    maxFontSizeMultiplier = 1.5\n  } = rest;\n  React.useEffect(() => {\n    if (visible) {\n      // show text\n      Animated.timing(shown, {\n        toValue: 1,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    } else {\n      // hide text\n      Animated.timing(shown, {\n        toValue: 0,\n        duration: 180 * scale,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [visible, scale, shown]);\n  const handleTextLayout = e => {\n    onLayout === null || onLayout === void 0 ? void 0 : onLayout(e);\n    textHeight = e.nativeEvent.layout.height;\n  };\n  const {\n    colors,\n    dark\n  } = theme;\n  const textColor = type === 'error' ? colors === null || colors === void 0 ? void 0 : colors.error : color(theme.isV3 ? theme.colors.onSurface : theme === null || theme === void 0 ? void 0 : (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.text).alpha(dark ? 0.7 : 0.54).rgb().string();\n  return /*#__PURE__*/React.createElement(AnimatedText, _extends({\n    onLayout: handleTextLayout,\n    style: [styles.text, padding !== 'none' ? styles.padding : {}, {\n      color: textColor,\n      opacity: shown,\n      transform: visible && type === 'error' ? [{\n        translateY: shown.interpolate({\n          inputRange: [0, 1],\n          outputRange: [-textHeight / 2, 0]\n        })\n      }] : []\n    }, style],\n    maxFontSizeMultiplier: maxFontSizeMultiplier\n  }, rest), rest.children);\n};\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 12,\n    paddingVertical: 4\n  },\n  padding: {\n    paddingHorizontal: 12\n  }\n});\nexport default HelperText;\n//# sourceMappingURL=HelperText.js.map"]},"metadata":{},"sourceType":"module"}