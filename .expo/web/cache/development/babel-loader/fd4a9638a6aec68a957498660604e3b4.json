{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"theme\", \"style\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useInternalTheme } from \"../../core/theming\";\nimport Text from \"../Typography/Text\";\nimport Title from \"../Typography/v2/Title\";\nvar DialogTitle = function DialogTitle(_ref) {\n  var children = _ref.children,\n    themeOverrides = _ref.theme,\n    style = _ref.style,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var isV3 = theme.isV3,\n    colors = theme.colors,\n    fonts = theme.fonts;\n  var TextComponent = isV3 ? Text : Title;\n  var headerTextStyle = _objectSpread({\n    color: isV3 ? colors.onSurface : colors === null || colors === void 0 ? void 0 : colors.text\n  }, isV3 ? fonts.headlineSmall : {});\n  return React.createElement(TextComponent, _extends({\n    variant: \"headlineSmall\",\n    accessibilityRole: \"header\",\n    style: [styles.text, isV3 && styles.v3Text, headerTextStyle, style]\n  }, rest), children);\n};\nDialogTitle.displayName = 'Dialog.Title';\nvar styles = StyleSheet.create({\n  text: {\n    marginTop: 22,\n    marginBottom: 18,\n    marginHorizontal: 24\n  },\n  v3Text: {\n    marginTop: 16,\n    marginBottom: 16\n  }\n});\nexport default DialogTitle;\nexport { DialogTitle };","map":{"version":3,"sources":["DialogTitle.tsx"],"names":["React","useInternalTheme","Text","Title","DialogTitle","children","theme","themeOverrides","style","rest","isV3","colors","fonts","TextComponent","headerTextStyle","color","onSurface","text","headlineSmall","styles","v3Text","displayName","StyleSheet","create","marginTop","marginBottom","marginHorizontal"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAA,UAAA;AAG9B,SAASC,gBAAgB;AAEzB,OAAOC,IAAI;AACX,OAAOC,KAAK;AAgDZ,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAG,IAAA,EAKP;EALQ,IACnBC,QAAQ,GAIF,IAAA,CAJNA,QAAQ;IACDE,cAAc,GAGf,IAAA,CAHND,KAAK;IACLE,KAAK,GAEC,IAAA,CAFNA,KAAK;IACFC,IAAAA,GAAAA,wBAAAA,CACG,IAAA,EAAA,SAAA;EACN,IAAMH,KAAK,GAAGL,gBAAgB,CAACM,cAAc,CAAC;EAC9C,IAAQG,IAAI,GAAoBJ,KAAK,CAA7BI,IAAI;IAAEC,MAAM,GAAYL,KAAK,CAAvBK,MAAM;IAAEC,KAAAA,GAAUN,KAAK,CAAfM,KAAAA;EAEtB,IAAMC,aAAa,GAAGH,IAAI,GAAGR,IAAI,GAAGC,KAAK;EAEzC,IAAMW,eAAe,GAAA,aAAA;IACnBC,KAAK,EAAEL,IAAI,GAAGC,MAAM,CAACK,SAAS,GAAGL,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAANA,MAAM,CAAEM;EAAI,GACzCP,IAAI,GAAGE,KAAK,CAACM,aAAa,GAAG,CAAC,CAAC,CACpC;EAED,OACE,KAAA,CAAA,aAAA,CAAC,aAAa,EAAA,QAAA,CAAA;IACZ,OAAO,EAAC,eAAe;IACvB,iBAAiB,EAAC,QAAQ;IAC1B,KAAK,EAAE,CAACC,MAAM,CAACF,IAAI,EAAEP,IAAI,IAAIS,MAAM,CAACC,MAAM,EAAEN,eAAe,EAAEN,KAAK;EAAE,CAAA,EAChEC,IAAI,CAAA,EAEPJ,QAAQ,CACK;AAEpB,CAAC;AAEDD,WAAW,CAACiB,WAAW,GAAG,cAAc;AAExC,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAM,CAAC;EAC/BN,IAAI,EAAE;IACJO,SAAS,EAAE,EAAE;IACbC,YAAY,EAAE,EAAE;IAChBC,gBAAgB,EAAE;EACpB,CAAC;EACDN,MAAM,EAAE;IACNI,SAAS,EAAE,EAAE;IACbC,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEF,eAAerB,WAAW;AAG1B,SAASA,WAAW","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { useInternalTheme } from '../../core/theming';\nimport Text from '../Typography/Text';\nimport Title from '../Typography/v2/Title';\n/**\n * A component to show a title in a Dialog.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/dialog-title.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Dialog, Portal, Text } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.Title>This is a title</Dialog.Title>\n *         <Dialog.Content>\n *           <Text variant=\"bodyMedium\">This is simple dialog</Text>\n *         </Dialog.Content>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DialogTitle = _ref => {\n  let {\n    children,\n    theme: themeOverrides,\n    style,\n    ...rest\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const {\n    isV3,\n    colors,\n    fonts\n  } = theme;\n  const TextComponent = isV3 ? Text : Title;\n  const headerTextStyle = {\n    color: isV3 ? colors.onSurface : colors === null || colors === void 0 ? void 0 : colors.text,\n    ...(isV3 ? fonts.headlineSmall : {})\n  };\n  return /*#__PURE__*/React.createElement(TextComponent, _extends({\n    variant: \"headlineSmall\",\n    accessibilityRole: \"header\",\n    style: [styles.text, isV3 && styles.v3Text, headerTextStyle, style]\n  }, rest), children);\n};\nDialogTitle.displayName = 'Dialog.Title';\nconst styles = StyleSheet.create({\n  text: {\n    marginTop: 22,\n    marginBottom: 18,\n    marginHorizontal: 24\n  },\n  v3Text: {\n    marginTop: 16,\n    marginBottom: 16\n  }\n});\nexport default DialogTitle;\n\n// @component-docs ignore-next-line\nexport { DialogTitle };\n//# sourceMappingURL=DialogTitle.js.map"]},"metadata":{},"sourceType":"module"}