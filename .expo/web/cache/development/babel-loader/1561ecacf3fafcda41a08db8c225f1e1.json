{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useInternalTheme } from \"../../core/theming\";\nimport Icon from \"../Icon\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport Text from \"../Typography/Text\";\nimport { getContentMaxWidth, getMenuItemColor, MAX_WIDTH, MIN_WIDTH } from \"./utils\";\nvar MenuItem = function MenuItem(_ref) {\n  var leadingIcon = _ref.leadingIcon,\n    trailingIcon = _ref.trailingIcon,\n    dense = _ref.dense,\n    title = _ref.title,\n    disabled = _ref.disabled,\n    onPress = _ref.onPress,\n    style = _ref.style,\n    contentStyle = _ref.contentStyle,\n    testID = _ref.testID,\n    titleStyle = _ref.titleStyle,\n    accessibilityLabel = _ref.accessibilityLabel,\n    themeOverrides = _ref.theme;\n  var theme = useInternalTheme(themeOverrides);\n  var _getMenuItemColor = getMenuItemColor({\n      theme: theme,\n      disabled: disabled\n    }),\n    titleColor = _getMenuItemColor.titleColor,\n    iconColor = _getMenuItemColor.iconColor,\n    underlayColor = _getMenuItemColor.underlayColor;\n  var isV3 = theme.isV3;\n  var containerPadding = isV3 ? 12 : 8;\n  var iconWidth = isV3 ? 24 : 40;\n  var minWidth = MIN_WIDTH - (isV3 ? 12 : 16);\n  var maxWidth = getContentMaxWidth({\n    isV3: isV3,\n    iconWidth: iconWidth,\n    leadingIcon: leadingIcon,\n    trailingIcon: trailingIcon\n  });\n  var titleTextStyle = _objectSpread({\n    color: titleColor\n  }, isV3 ? theme.fonts.bodyLarge : {});\n  return React.createElement(TouchableRipple, {\n    style: [styles.container, {\n      paddingHorizontal: containerPadding\n    }, dense && styles.md3DenseContainer, style],\n    onPress: onPress,\n    disabled: disabled,\n    testID: testID,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"menuitem\",\n    accessibilityState: {\n      disabled: disabled\n    },\n    underlayColor: underlayColor\n  }, React.createElement(View, {\n    style: styles.row\n  }, leadingIcon ? React.createElement(View, {\n    style: [!isV3 && styles.item, {\n      width: iconWidth\n    }],\n    pointerEvents: \"box-none\"\n  }, React.createElement(Icon, {\n    source: leadingIcon,\n    size: 24,\n    color: iconColor\n  })) : null, React.createElement(View, {\n    style: [!isV3 && styles.item, styles.content, {\n      minWidth: minWidth,\n      maxWidth: maxWidth\n    }, isV3 && (leadingIcon ? styles.md3LeadingIcon : styles.md3WithoutLeadingIcon), contentStyle],\n    pointerEvents: \"none\"\n  }, React.createElement(Text, {\n    variant: \"bodyLarge\",\n    selectable: false,\n    numberOfLines: 1,\n    style: [!isV3 && styles.title, titleTextStyle, titleStyle]\n  }, title)), isV3 && trailingIcon ? React.createElement(View, {\n    style: [!isV3 && styles.item, {\n      width: iconWidth\n    }],\n    pointerEvents: \"box-none\"\n  }, React.createElement(Icon, {\n    source: trailingIcon,\n    size: 24,\n    color: iconColor\n  })) : null));\n};\nMenuItem.displayName = 'Menu.Item';\nvar styles = StyleSheet.create({\n  container: {\n    minWidth: MIN_WIDTH,\n    maxWidth: MAX_WIDTH,\n    height: 48,\n    justifyContent: 'center'\n  },\n  md3DenseContainer: {\n    height: 32\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  title: {\n    fontSize: 16\n  },\n  item: {\n    marginHorizontal: 8\n  },\n  content: {\n    justifyContent: 'center'\n  },\n  md3LeadingIcon: {\n    marginLeft: 12\n  },\n  md3WithoutLeadingIcon: {\n    marginLeft: 4\n  }\n});\nexport default MenuItem;","map":{"version":3,"sources":["MenuItem.tsx"],"names":["React","useInternalTheme","Icon","TouchableRipple","Text","getContentMaxWidth","getMenuItemColor","MAX_WIDTH","MIN_WIDTH","MenuItem","leadingIcon","trailingIcon","dense","title","disabled","onPress","style","contentStyle","testID","titleStyle","accessibilityLabel","theme","themeOverrides","titleColor","iconColor","underlayColor","isV3","containerPadding","iconWidth","minWidth","maxWidth","titleTextStyle","color","fonts","bodyLarge","styles","container","paddingHorizontal","md3DenseContainer","row","item","width","content","md3LeadingIcon","md3WithoutLeadingIcon","displayName","StyleSheet","create","height","justifyContent","flexDirection","fontSize","marginHorizontal","marginLeft"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useInternalTheme } from '../../core/theming';\nimport Icon from '../Icon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport { getContentMaxWidth, getMenuItemColor, MAX_WIDTH, MIN_WIDTH } from './utils';\n/**\n * A component to show a single list item inside a Menu.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/menu-item.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Menu } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View style={{ flex: 1 }}>\n *     <Menu.Item leadingIcon=\"redo\" onPress={() => {}} title=\"Redo\" />\n *     <Menu.Item leadingIcon=\"undo\" onPress={() => {}} title=\"Undo\" />\n *     <Menu.Item leadingIcon=\"content-cut\" onPress={() => {}} title=\"Cut\" disabled />\n *     <Menu.Item leadingIcon=\"content-copy\" onPress={() => {}} title=\"Copy\" disabled />\n *     <Menu.Item leadingIcon=\"content-paste\" onPress={() => {}} title=\"Paste\" />\n *   </View>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst MenuItem = _ref => {\n  let {\n    leadingIcon,\n    trailingIcon,\n    dense,\n    title,\n    disabled,\n    onPress,\n    style,\n    contentStyle,\n    testID,\n    titleStyle,\n    accessibilityLabel,\n    theme: themeOverrides\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const {\n    titleColor,\n    iconColor,\n    underlayColor\n  } = getMenuItemColor({\n    theme,\n    disabled\n  });\n  const {\n    isV3\n  } = theme;\n  const containerPadding = isV3 ? 12 : 8;\n  const iconWidth = isV3 ? 24 : 40;\n  const minWidth = MIN_WIDTH - (isV3 ? 12 : 16);\n  const maxWidth = getContentMaxWidth({\n    isV3,\n    iconWidth,\n    leadingIcon,\n    trailingIcon\n  });\n  const titleTextStyle = {\n    color: titleColor,\n    ...(isV3 ? theme.fonts.bodyLarge : {})\n  };\n  return /*#__PURE__*/React.createElement(TouchableRipple, {\n    style: [styles.container, {\n      paddingHorizontal: containerPadding\n    }, dense && styles.md3DenseContainer, style],\n    onPress: onPress,\n    disabled: disabled,\n    testID: testID,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"menuitem\",\n    accessibilityState: {\n      disabled\n    },\n    underlayColor: underlayColor\n  }, /*#__PURE__*/React.createElement(View, {\n    style: styles.row\n  }, leadingIcon ? /*#__PURE__*/React.createElement(View, {\n    style: [!isV3 && styles.item, {\n      width: iconWidth\n    }],\n    pointerEvents: \"box-none\"\n  }, /*#__PURE__*/React.createElement(Icon, {\n    source: leadingIcon,\n    size: 24,\n    color: iconColor\n  })) : null, /*#__PURE__*/React.createElement(View, {\n    style: [!isV3 && styles.item, styles.content, {\n      minWidth,\n      maxWidth\n    }, isV3 && (leadingIcon ? styles.md3LeadingIcon : styles.md3WithoutLeadingIcon), contentStyle],\n    pointerEvents: \"none\"\n  }, /*#__PURE__*/React.createElement(Text, {\n    variant: \"bodyLarge\",\n    selectable: false,\n    numberOfLines: 1,\n    style: [!isV3 && styles.title, titleTextStyle, titleStyle]\n  }, title)), isV3 && trailingIcon ? /*#__PURE__*/React.createElement(View, {\n    style: [!isV3 && styles.item, {\n      width: iconWidth\n    }],\n    pointerEvents: \"box-none\"\n  }, /*#__PURE__*/React.createElement(Icon, {\n    source: trailingIcon,\n    size: 24,\n    color: iconColor\n  })) : null));\n};\nMenuItem.displayName = 'Menu.Item';\nconst styles = StyleSheet.create({\n  container: {\n    minWidth: MIN_WIDTH,\n    maxWidth: MAX_WIDTH,\n    height: 48,\n    justifyContent: 'center'\n  },\n  md3DenseContainer: {\n    height: 32\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  title: {\n    fontSize: 16\n  },\n  item: {\n    marginHorizontal: 8\n  },\n  content: {\n    justifyContent: 'center'\n  },\n  md3LeadingIcon: {\n    marginLeft: 12\n  },\n  md3WithoutLeadingIcon: {\n    marginLeft: 4\n  }\n});\nexport default MenuItem;\n//# sourceMappingURL=MenuItem.js.map"]},"metadata":{},"sourceType":"module"}