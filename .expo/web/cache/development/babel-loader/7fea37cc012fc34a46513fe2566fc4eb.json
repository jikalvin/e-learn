{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"theme\", \"variant\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useInternalTheme } from \"../../core/theming\";\nimport { MD3TypescaleKey } from \"../../types\";\nfunction AnimatedText(_ref) {\n  var style = _ref.style,\n    themeOverrides = _ref.theme,\n    variant = _ref.variant,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var writingDirection = I18nManager.getConstants().isRTL ? 'rtl' : 'ltr';\n  if (theme.isV3 && variant) {\n    var stylesByVariant = Object.keys(MD3TypescaleKey).reduce(function (acc, key) {\n      var _theme$fonts$key = theme.fonts[key],\n        fontSize = _theme$fonts$key.fontSize,\n        fontWeight = _theme$fonts$key.fontWeight,\n        lineHeight = _theme$fonts$key.lineHeight,\n        letterSpacing = _theme$fonts$key.letterSpacing,\n        fontFamily = _theme$fonts$key.fontFamily;\n      return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, key, {\n        fontFamily: fontFamily,\n        fontSize: fontSize,\n        fontWeight: fontWeight,\n        lineHeight: lineHeight,\n        letterSpacing: letterSpacing,\n        color: theme.colors.onSurface\n      }));\n    }, {});\n    var styleForVariant = stylesByVariant[variant];\n    return React.createElement(Animated.Text, _extends({}, rest, {\n      style: [styleForVariant, styles.text, {\n        writingDirection: writingDirection\n      }, style]\n    }));\n  } else {\n    var font = !theme.isV3 ? theme.fonts.regular : theme.fonts.bodyMedium;\n    var textStyle = _objectSpread(_objectSpread({}, font), {}, {\n      color: theme.isV3 ? theme.colors.onSurface : theme.colors.text\n    });\n    return React.createElement(Animated.Text, _extends({}, rest, {\n      style: [styles.text, textStyle, {\n        writingDirection: writingDirection\n      }, style]\n    }));\n  }\n}\nvar styles = StyleSheet.create({\n  text: {\n    textAlign: 'left'\n  }\n});\nexport default AnimatedText;","map":{"version":3,"sources":["AnimatedText.tsx"],"names":["React","useInternalTheme","MD3TypescaleKey","AnimatedText","style","theme","themeOverrides","variant","rest","writingDirection","I18nManager","getConstants","isRTL","isV3","stylesByVariant","Object","keys","reduce","acc","key","fontSize","fontWeight","lineHeight","letterSpacing","fontFamily","fonts","color","colors","onSurface","styleForVariant","styles","text","font","regular","bodyMedium","textStyle","StyleSheet","create","textAlign"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAA,QAAA;AAAA,OAAA,WAAA;AAAA,OAAA,UAAA;AAG9B,SAASC,gBAAgB;AACzB,SAA0BC,eAAe;AA8BzC,SAASC,YAAY,CAAA,IAAA,EAKX;EALY,IACpBC,KAAK,GAIC,IAAA,CAJNA,KAAK;IACEE,cAAc,GAGf,IAAA,CAHND,KAAK;IACLE,OAAO,GAED,IAAA,CAFNA,OAAO;IACJC,IAAAA,GAAAA,wBAAAA,CACG,IAAA,EAAA,SAAA;EACN,IAAMH,KAAK,GAAGJ,gBAAgB,CAACK,cAAc,CAAC;EAC9C,IAAMG,gBAAgB,GAAGC,WAAW,CAACC,YAAY,EAAE,CAACC,KAAK,GAAG,KAAK,GAAG,KAAK;EAEzE,IAAIP,KAAK,CAACQ,IAAI,IAAIN,OAAO,EAAE;IACzB,IAAMO,eAAe,GAAGC,MAAM,CAACC,IAAI,CAACd,eAAe,CAAC,CAACe,MAAM,CACzD,UAACC,GAAG,EAAEC,GAAG,EAAK;MACZ,IAAA,gBAAA,GACEd,KAAK,CAACoB,KAAK,CAACN,GAAG,CAAiC;QAD1CC,QAAQ,GAAA,gBAAA,CAARA,QAAQ;QAAEC,UAAU,GAAA,gBAAA,CAAVA,UAAU;QAAEC,UAAU,GAAA,gBAAA,CAAVA,UAAU;QAAEC,aAAa,GAAA,gBAAA,CAAbA,aAAa;QAAEC,UAAAA,GAAAA,gBAAAA,CAAAA,UAAAA;MAGzD,OAAA,aAAA,CAAA,aAAA,KACKN,GAAG,OAAA,eAAA,KACLC,GAAG,EAAG;QACLK,UAAU,EAAVA,UAAU;QACVJ,QAAQ,EAARA,QAAQ;QACRC,UAAU,EAAVA,UAAU;QACVC,UAAU,EAAEA,UAAU;QACtBC,aAAa,EAAbA,aAAa;QACbG,KAAK,EAAErB,KAAK,CAACsB,MAAM,CAACC;MACtB,CAAA;IAEJ,CAAC,EACD,CAAC,CAAC,CAQH;IAED,IAAMC,eAAe,GAAGf,eAAe,CAACP,OAAO,CAAC;IAEhD,OACE,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAI,EAAA,QAAA,CAAA,CAAA,CAAA,EACRC,IAAI,EAAA;MACR,KAAK,EAAE,CAACqB,eAAe,EAAEC,MAAM,CAACC,IAAI,EAAE;QAAEtB,gBAAAA,EAAAA;MAAiB,CAAC,EAAEL,KAAK;IAAE,CAAA,CAAA,CACnE;EAEN,CAAC,MAAM;IACL,IAAM4B,IAAI,GAAG,CAAC3B,KAAK,CAACQ,IAAI,GAAGR,KAAK,CAACoB,KAAK,CAACQ,OAAO,GAAG5B,KAAK,CAACoB,KAAK,CAACS,UAAU;IACvE,IAAMC,SAAS,GAAA,aAAA,CAAA,aAAA,KACVH,IAAI;MACPN,KAAK,EAAErB,KAAK,CAACQ,IAAI,GAAGR,KAAK,CAACsB,MAAM,CAACC,SAAS,GAAGvB,KAAK,CAACsB,MAAM,CAACI;IAAAA,EAC3D;IACD,OACE,KAAA,CAAA,aAAA,CAAC,QAAQ,CAAC,IAAI,EAAA,QAAA,CAAA,CAAA,CAAA,EACRvB,IAAI,EAAA;MACR,KAAK,EAAE,CACLsB,MAAM,CAACC,IAAI,EACXI,SAAS,EACT;QACE1B,gBAAAA,EAAAA;MACF,CAAC,EACDL,KAAK;IACL,CAAA,CAAA,CACF;EAEN;AACF;AAEA,IAAM0B,MAAM,GAAGM,UAAU,CAACC,MAAM,CAAC;EAC/BN,IAAI,EAAE;IACJO,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,eAAenC,YAAY","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { Animated, I18nManager, StyleSheet } from 'react-native';\nimport { useInternalTheme } from '../../core/theming';\nimport { MD3TypescaleKey } from '../../types';\n/**\n * Animated text component which follows styles from the theme.\n *\n * @extends Text props https://reactnative.dev/docs/text#props\n */\nfunction AnimatedText(_ref) {\n  let {\n    style,\n    theme: themeOverrides,\n    variant,\n    ...rest\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const writingDirection = I18nManager.getConstants().isRTL ? 'rtl' : 'ltr';\n  if (theme.isV3 && variant) {\n    const stylesByVariant = Object.keys(MD3TypescaleKey).reduce((acc, key) => {\n      const {\n        fontSize,\n        fontWeight,\n        lineHeight,\n        letterSpacing,\n        fontFamily\n      } = theme.fonts[key];\n      return {\n        ...acc,\n        [key]: {\n          fontFamily,\n          fontSize,\n          fontWeight,\n          lineHeight: lineHeight,\n          letterSpacing,\n          color: theme.colors.onSurface\n        }\n      };\n    }, {});\n    const styleForVariant = stylesByVariant[variant];\n    return /*#__PURE__*/React.createElement(Animated.Text, _extends({}, rest, {\n      style: [styleForVariant, styles.text, {\n        writingDirection\n      }, style]\n    }));\n  } else {\n    const font = !theme.isV3 ? theme.fonts.regular : theme.fonts.bodyMedium;\n    const textStyle = {\n      ...font,\n      color: theme.isV3 ? theme.colors.onSurface : theme.colors.text\n    };\n    return /*#__PURE__*/React.createElement(Animated.Text, _extends({}, rest, {\n      style: [styles.text, textStyle, {\n        writingDirection\n      }, style]\n    }));\n  }\n}\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left'\n  }\n});\nexport default AnimatedText;\n//# sourceMappingURL=AnimatedText.js.map"]},"metadata":{},"sourceType":"module"}