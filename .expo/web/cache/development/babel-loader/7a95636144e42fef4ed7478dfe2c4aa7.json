{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _templateObject;\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useMutation, gql } from '@apollo/client';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport ScreenOne from \"./auth/sn1\";\nimport Loading from \"../components/Loading\";\nimport Home from \"./home\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SIGNIN_USER = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  mutation signIn($email: String, $password: String!) {\\n    signIn(email: $email, password: $password)\\n  }\\n\"])));\nvar SignIn = function SignIn(props) {\n  var _useMutation = useMutation(SIGNIN_USER, {\n      onCompleted: function onCompleted(data) {\n        AsyncStorage.setItem('token', data.signIn).then(_jsx(Home, {}));\n      }\n    }),\n    _useMutation2 = _slicedToArray(_useMutation, 2),\n    signIn = _useMutation2[0],\n    _useMutation2$ = _useMutation2[1],\n    loading = _useMutation2$.loading,\n    error = _useMutation2$.error;\n  var onPress = function onPress() {\n    props.navigation.navigate('Register - Role');\n  };\n  if (loading) return _jsx(Loading, {});\n  return _jsxs(React.Fragment, {\n    children: [error && _jsx(Text, {\n      children: \"Error signing in!\"\n    }), error && console.log(error.message), _jsx(ScreenOne, {\n      action: signIn,\n      formType: \"signIn\",\n      navigation: props.navigation,\n      onPress: onPress,\n      mutation: SIGNIN_USER\n    })]\n  });\n};\nexport default SignIn;","map":{"version":3,"names":["React","View","Button","Text","useMutation","gql","AsyncStorage","ScreenOne","Loading","Home","jsx","_jsx","jsxs","_jsxs","SIGNIN_USER","_templateObject","_taggedTemplateLiteralLoose","SignIn","props","_useMutation","onCompleted","data","setItem","signIn","then","_useMutation2","_slicedToArray","_useMutation2$","loading","error","onPress","navigation","navigate","Fragment","children","console","log","message","action","formType","mutation"],"sources":["C:/Users/HP/Downloads/E-Learn/auth-demo/reactnativeapp/screens/signin.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Button, Text } from 'react-native';\r\n// import * as SecureStore from 'expo-secure-store';\r\nimport { useMutation, gql } from '@apollo/client';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nimport ScreenOne from './auth/sn1';\r\nimport Loading from '../components/Loading';\r\nimport Home from './home'\r\n\r\nconst SIGNIN_USER = gql`\r\n  mutation signIn($email: String, $password: String!) {\r\n    signIn(email: $email, password: $password)\r\n  }\r\n`;\r\n\r\nconst SignIn = props => {\r\n  const [signIn, { loading, error }] = useMutation(SIGNIN_USER, {\r\n    onCompleted: data => {\r\n      // store the token with a key value of `token`\r\n      // after the token is stored navigate to the app's main screen\r\n      AsyncStorage.setItem('token', data.signIn).then(\r\n        // props.navigation.navigate('Home')\r\n        <Home />\r\n      );\r\n    }\r\n  });\r\n\r\n  const onPress = () => {\r\n    props.navigation.navigate('Register - Role');\r\n  };\r\n\r\n  // if loading, return a loading indicator\r\n  if (loading) return <Loading />;\r\n  return (\r\n    <React.Fragment>\r\n      {error && <Text>Error signing in!</Text>}\r\n      {error && console.log(error.message)}\r\n      <ScreenOne\r\n        action={signIn}\r\n        formType=\"signIn\"\r\n        navigation={props.navigation}\r\n        onPress={onPress}\r\n        mutation={SIGNIN_USER}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,IAAA;AAG1B,SAASC,WAAW,EAAEC,GAAG,QAAQ,gBAAgB;AACjD,OAAOC,YAAY,MAAM,2CAA2C;AAEpE,OAAOC,SAAS;AAChB,OAAOC,OAAO;AACd,OAAOC,IAAI;AAAc,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzB,IAAMC,WAAW,GAAGT,GAAG,CAAAU,eAAA,KAAAA,eAAA,GAAAC,2BAAA,wHAItB;AAED,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAGC,KAAK,EAAI;EACtB,IAAAC,YAAA,GAAqCf,WAAW,CAACU,WAAW,EAAE;MAC5DM,WAAW,EAAE,SAAAA,YAAAC,IAAI,EAAI;QAGnBf,YAAY,CAACgB,OAAO,CAAC,OAAO,EAAED,IAAI,CAACE,MAAM,CAAC,CAACC,IAAI,CAE7Cb,IAAA,CAACF,IAAI,KAAG,CACT;MACH;IACF,CAAC,CAAC;IAAAgB,aAAA,GAAAC,cAAA,CAAAP,YAAA;IATKI,MAAM,GAAAE,aAAA;IAAAE,cAAA,GAAAF,aAAA;IAAIG,OAAO,GAAAD,cAAA,CAAPC,OAAO;IAAEC,KAAK,GAAAF,cAAA,CAALE,KAAK;EAW/B,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;IACpBZ,KAAK,CAACa,UAAU,CAACC,QAAQ,CAAC,iBAAiB,CAAC;EAC9C,CAAC;EAGD,IAAIJ,OAAO,EAAE,OAAOjB,IAAA,CAACH,OAAO,KAAG;EAC/B,OACEK,KAAA,CAACb,KAAK,CAACiC,QAAQ;IAAAC,QAAA,GACZL,KAAK,IAAIlB,IAAA,CAACR,IAAI;MAAA+B,QAAA,EAAC;IAAiB,EAAO,EACvCL,KAAK,IAAIM,OAAO,CAACC,GAAG,CAACP,KAAK,CAACQ,OAAO,CAAC,EACpC1B,IAAA,CAACJ,SAAS;MACR+B,MAAM,EAAEf,MAAO;MACfgB,QAAQ,EAAC,QAAQ;MACjBR,UAAU,EAAEb,KAAK,CAACa,UAAW;MAC7BD,OAAO,EAAEA,OAAQ;MACjBU,QAAQ,EAAE1B;IAAY,EACtB;EAAA,EACa;AAErB,CAAC;AAED,eAAeG,MAAM"},"metadata":{},"sourceType":"module"}